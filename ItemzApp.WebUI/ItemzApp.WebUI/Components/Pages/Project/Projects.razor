@page "/projects"
@using ItemzApp.WebUI.Client.Services.Project
@using ItemzApp.WebUI.Client.SharedModels
@rendermode InteractiveServer
@inject NavigationManager NavManager

<PageTitle>Projects</PageTitle>


<MudPaper Class="pa-4 align-start d-flex" Style="width: auto" Outlined="false" >
    <MudText Typo="Typo.h4" Align="Align.Left">Projects</MudText>
    <MudSpacer />
    <MudButton @onclick="createNewProject" Variant="Variant.Filled" Size="Size.Medium" Color="Color.Primary"> Create Project </MudButton>
</MudPaper>

<br/>
@if (initializingPage)
{
    <MudPaper Height="calc(100vh - 100px);" Width="100%">
        <MudOverlay Visible="true" DarkBackground="true" Absolute="true">
            <MudText Typo="Typo.h4" Align="Align.Center" Color="Color.Inherit">Loading ... </MudText>
            <br />
            <MudProgressCircular Color="Color.Primary" Indeterminate="true" Size="Size.Large" />
        </MudOverlay>
    </MudPaper> 
 }else
{
    <MudText>Total number of projects in repository : @AllProjects.Count() </MudText>


    <MudDataGrid Items="@AllProjects" Filterable="true" SortMode="@SortMode.None" Groupable="false" Striped="true" FixedHeader="true"  HeaderClass="background-color: red;">
        <Columns>
            <PropertyColumn Property="x => x.Id" Filterable="false" CellStyle="max-width: 100px; overflow-x: visible; white-space: normal; " />
            <PropertyColumn Property="x => x.Name" />
            <PropertyColumn Property="x => x.Status" />
            <TemplateColumn CellClass="d-flex justify-left">
                <CellTemplate>
                    <MudStack Row>
@*                         <MudButton Size="@Size.Large" Variant="@Variant.Filled" Color="@Color.Success" OnClick="_ => editProjectDetails(context.Item.Id.ToString())"> Edit </MudButton> *@
                        <MudButton Size="@Size.Large" Variant="@Variant.Filled" Color="@Color.Success" OnClick="_ => openProject(context.Item.Id.ToString())"> Open </MudButton>
                    </MudStack> 
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>
}

@code {

    private List<GetProjectDTO> AllProjects { get; set; } = new List<GetProjectDTO>();
    private bool initializingPage = true;

    [Inject]
    public IProjectService ProjectService { get; set; }

    // protected override async Task OnInitializedAsync()
    // {
    //     initializingPage = true;
    //     var returnedProjectList = await ProjectService.__GET_Projects__Async();
    //     if (returnedProjectList != null)
    //     {
    //         AllProjects = returnedProjectList.ToList();
    //     }
    //     initializingPage = false;
    // }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Thread.Sleep(500);
            var returnedProjectList = await ProjectService.__GET_Projects__Async();
            if (returnedProjectList != null)
            {
                AllProjects = returnedProjectList.ToList();
            }
            initializingPage = false;
            StateHasChanged();
        }
    }

    public async Task createNewProject()
    {
        NavManager.NavigateTo("/CreateProject");
    }

    // public async Task editProjectDetails(string Id)
    // {
    //     NavManager.NavigateTo($"/projectDetails/{Id}");
    // }

    public async Task openProject(string Id)
    {
        NavManager.NavigateTo($"/project/{Id}");
    }

}
