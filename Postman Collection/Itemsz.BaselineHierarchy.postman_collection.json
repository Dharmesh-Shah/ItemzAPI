{
	"info": {
		"_postman_id": "21cf7647-0676-47cd-8849-a85325c81527",
		"name": "Itemsz.BaselineHierarchy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36455815"
	},
	"item": [
		{
			"name": "0001 BaselineCreate",
			"item": [
				{
					"name": "01_01 CreateBaselineByProjectId",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"01_01_BaselineHierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{01_01_BaselineHierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{01_01_BaselineHierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{01_01_BaselineHierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{01_01_BaselineHierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType P1T1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{01_01_BaselineHierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{01_01_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{01_01_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{01_01_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{01_01_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 3 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_P1T1_3rdItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 3\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{01_01_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{01_01_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_01_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_01_BaselineHierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_01_BaselineHierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_01_BaselineHierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_01_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_01_BaselineHierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_01_BaselineHierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_01_BaselineHierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_P1T1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_01_BaselineHierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_01_BaselineHierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_P1T1_2_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_01_BaselineHierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_01_BaselineHierarchy_P1T1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST 1st Baseline by ProjectId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"if (pm.response.code < 300 && pm.response.code > 199)",
											"{",
											"    var jsonData = pm.response.json();",
											"    var tempNewBaselineid = jsonData[\"id\"];",
											"    pm.collectionVariables.set(\"01_01_BaselineHierarchy_1stBaselineId\",tempNewBaselineid);",
											"    ",
											"    pm.test(\"Status code is 201\", function () {",
											"        pm.response.to.have.status(201);",
											"    });",
											"}",
											"else{",
											"    pm.test(\"Status code is 409\", function () {",
											"        pm.response.to.have.status(409);",
											"    });",
											"    pm.collectionVariables.set(\"01_01_BaselineHierarchy_1stBaselineName\",\"\");",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_1stBaselineName\", \"New Baseline - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"01_01_BaselineHierarchy_1stBaselineName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"projectId\": \"{{01_01_BaselineHierarchy_1stProjectId}}\",\r\n    \"name\": \"{{01_01_BaselineHierarchy_1stBaselineName}}\",\r\n    \"description\": \"This is Description for {{01_01_BaselineHierarchy_1stBaselineName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Baselines",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Baseline\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_01_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_01_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_01_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_01_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz Count by BaselineId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 9 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzCount/{{01_01_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzCount",
										"{{01_01_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_01_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_01_BaselineHierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_2_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_01_BaselineHierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_01_BaselineHierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_3_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_01_BaselineHierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_01_BaselineHierarchy_P1T1_3rdItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_01_BaselineHierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_01_BaselineHierarchy_P1T1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_1_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_01_BaselineHierarchy_P1T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_01_BaselineHierarchy_P1T1_1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_1_2_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_01_BaselineHierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_01_BaselineHierarchy_P1T1_1_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_1_2_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_01_BaselineHierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_01_BaselineHierarchy_P1T1_1_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_2_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_01_BaselineHierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_01_BaselineHierarchy_P1T1_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_2_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_01_BaselineHierarchy_P1T1_2_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_01_BaselineHierarchy_P1T1_2_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_01_BaselineHierarchy_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_01_BaselineHierarchy_1_BaselineHeirarchyId\") + \"2/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_01_BaselineHierarchy_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_01_BaselineHierarchy_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_01_BaselineHierarchy_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_01_BaselineHierarchy_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_01_BaselineHierarchy_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_01_BaselineHierarchy_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_01_BaselineHierarchy_3_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_01_BaselineHierarchy_3_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET VerifiyBreakdownStructure for BaselineItemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
											"    pm.expect(jsonData).to.be.eq(true); \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_01_BaselineHierarchy_1stBaselineId}}&childId={{01_01_BaselineHierarchy_3_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"VerifyParentChildBreakdownStructure"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_01_BaselineHierarchy_1stBaselineId}}"
										},
										{
											"key": "childId",
											"value": "{{01_01_BaselineHierarchy_3_BaselineItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_01_BaselineHierarchy_1_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_01_BaselineHierarchy_1_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_01_BaselineHierarchy_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_01_BaselineHierarchy_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_01_BaselineHierarchy_1_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_01_BaselineHierarchy_1_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_1_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_01_BaselineHierarchy_1_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_01_BaselineHierarchy_1_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_01_BaselineHierarchy_1_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_01_BaselineHierarchy_1_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET VerifiyBreakdownStructure for BaselineItemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
											"    pm.expect(jsonData).to.be.eq(true); \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_01_BaselineHierarchy_1stBaselineId}}&childId={{01_01_BaselineHierarchy_1_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"VerifyParentChildBreakdownStructure"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_01_BaselineHierarchy_1stBaselineId}}"
										},
										{
											"key": "childId",
											"value": "{{01_01_BaselineHierarchy_1_2_BaselineItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_1_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_01_BaselineHierarchy_1_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_01_BaselineHierarchy_1_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET VerifiyBreakdownStructure for BaselineItemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
											"    pm.expect(jsonData).to.be.eq(true); \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_01_BaselineHierarchy_1stBaselineId}}&childId={{01_01_BaselineHierarchy_1_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"VerifyParentChildBreakdownStructure"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_01_BaselineHierarchy_1stBaselineId}}"
										},
										{
											"key": "childId",
											"value": "{{01_01_BaselineHierarchy_1_2_1_BaselineItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_01_BaselineHierarchy_2_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_01_BaselineHierarchy_2_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_01_BaselineHierarchy_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_01_BaselineHierarchy_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_01_BaselineHierarchy_2_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_01_BaselineHierarchy_2_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_01_BaselineHierarchy_2_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz Trace Count by BaselineId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 0 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzTraceCount/{{01_01_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzTraceCount",
										"{{01_01_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{01_01_BaselineHierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{01_01_BaselineHierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "01_02 CreateBaselineByItemzTypeId",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"01_02_BaselineHierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{01_02_BaselineHierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{01_02_BaselineHierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{01_02_BaselineHierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{01_02_BaselineHierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType P1T1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{01_02_BaselineHierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{01_02_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{01_02_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{01_02_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{01_02_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 3 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_P1T1_3rdItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 3\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{01_02_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{01_02_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_02_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_02_BaselineHierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_02_BaselineHierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_02_BaselineHierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_02_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_02_BaselineHierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_02_BaselineHierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_02_BaselineHierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_P1T1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_02_BaselineHierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_02_BaselineHierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_P1T1_2_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_02_BaselineHierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_02_BaselineHierarchy_P1T1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST 1st Baseline by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"if (pm.response.code < 300 && pm.response.code > 199)",
											"{",
											"    var jsonData = pm.response.json();",
											"    var tempNewBaselineid = jsonData[\"id\"];",
											"    pm.collectionVariables.set(\"01_02_BaselineHierarchy_1stBaselineId\",tempNewBaselineid);",
											"    ",
											"    pm.test(\"Status code is 201\", function () {",
											"        pm.response.to.have.status(201);",
											"    });",
											"}",
											"else{",
											"    pm.test(\"Status code is 409\", function () {",
											"        pm.response.to.have.status(409);",
											"    });",
											"    pm.collectionVariables.set(\"01_02_BaselineHierarchy_1stBaselineName\",\"\");",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_1stBaselineName\", \"New Baseline - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"01_02_BaselineHierarchy_1stBaselineName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"projectId\": \"{{01_02_BaselineHierarchy_1stProjectId}}\",\r\n    \"itemzTypeId\": \"{{01_02_BaselineHierarchy_P1T1_ItemzTypeId}}\",\r\n    \"name\": \"{{01_02_BaselineHierarchy_1stBaselineName}}\",\r\n    \"description\": \"This is Description for {{01_02_BaselineHierarchy_1stBaselineName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Baselines",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Baseline\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_02_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_02_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_02_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_02_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz Count by BaselineId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 9 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzCount/{{01_02_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzCount",
										"{{01_02_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_02_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_02_BaselineHierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_2_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_02_BaselineHierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_02_BaselineHierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_3_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_02_BaselineHierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_02_BaselineHierarchy_P1T1_3rdItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_02_BaselineHierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_02_BaselineHierarchy_P1T1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_1_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_02_BaselineHierarchy_P1T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_02_BaselineHierarchy_P1T1_1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_1_2_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_02_BaselineHierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_02_BaselineHierarchy_P1T1_1_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_1_2_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_02_BaselineHierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_02_BaselineHierarchy_P1T1_1_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_2_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_02_BaselineHierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_02_BaselineHierarchy_P1T1_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_2_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_02_BaselineHierarchy_P1T1_2_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_02_BaselineHierarchy_P1T1_2_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_02_BaselineHierarchy_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_02_BaselineHierarchy_1_BaselineHeirarchyId\") + \"2/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_02_BaselineHierarchy_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_02_BaselineHierarchy_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_02_BaselineHierarchy_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_02_BaselineHierarchy_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_02_BaselineHierarchy_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_02_BaselineHierarchy_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET VerifiyBreakdownStructure for BaselineItemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
											"    pm.expect(jsonData).to.be.eq(true); \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_02_BaselineHierarchy_1stBaselineId}}&childId={{01_02_BaselineHierarchy_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"VerifyParentChildBreakdownStructure"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_02_BaselineHierarchy_1stBaselineId}}"
										},
										{
											"key": "childId",
											"value": "{{01_02_BaselineHierarchy_2_BaselineItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_02_BaselineHierarchy_3_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_02_BaselineHierarchy_3_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_02_BaselineHierarchy_1_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_02_BaselineHierarchy_1_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_02_BaselineHierarchy_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_02_BaselineHierarchy_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET VerifiyBreakdownStructure for BaselineItemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
											"    pm.expect(jsonData).to.be.eq(true); \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_02_BaselineHierarchy_1stBaselineId}}&childId={{01_02_BaselineHierarchy_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"VerifyParentChildBreakdownStructure"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_02_BaselineHierarchy_1stBaselineId}}"
										},
										{
											"key": "childId",
											"value": "{{01_02_BaselineHierarchy_1_1_BaselineItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_02_BaselineHierarchy_1_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_02_BaselineHierarchy_1_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_1_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_02_BaselineHierarchy_1_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_02_BaselineHierarchy_1_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_02_BaselineHierarchy_1_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_02_BaselineHierarchy_1_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_1_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_02_BaselineHierarchy_1_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_02_BaselineHierarchy_1_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_02_BaselineHierarchy_2_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_02_BaselineHierarchy_2_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_02_BaselineHierarchy_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_02_BaselineHierarchy_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_02_BaselineHierarchy_2_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_02_BaselineHierarchy_2_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_02_BaselineHierarchy_2_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET VerifiyBreakdownStructure for BaselineItemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
											"    pm.expect(jsonData).to.be.eq(true); \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_02_BaselineHierarchy_1stBaselineId}}&childId={{01_02_BaselineHierarchy_2_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"VerifyParentChildBreakdownStructure"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_02_BaselineHierarchy_1stBaselineId}}"
										},
										{
											"key": "childId",
											"value": "{{01_02_BaselineHierarchy_2_1_1_BaselineItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz Trace Count by BaselineId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 0 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzTraceCount/{{01_02_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzTraceCount",
										"{{01_02_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{01_02_BaselineHierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{01_02_BaselineHierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "01_03 CreateBaselineByProjectIdMoveToPL",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"01_03_BaselineHierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{01_03_BaselineHierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{01_03_BaselineHierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{01_03_BaselineHierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{01_03_BaselineHierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType P1T1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{01_03_BaselineHierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{01_03_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{01_03_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{01_03_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{01_03_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 3 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_P1T1_3rdItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 3\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{01_03_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{01_03_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_03_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_03_BaselineHierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_03_BaselineHierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_03_BaselineHierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_03_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_03_BaselineHierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_03_BaselineHierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_03_BaselineHierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_P1T1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_03_BaselineHierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_03_BaselineHierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_P1T1_2_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_03_BaselineHierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_03_BaselineHierarchy_P1T1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Itemz 1 to Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{01_03_BaselineHierarchy_P1T1_1stItemzId}}?TargetId={{01_03_BaselineHierarchy_P1PL_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{01_03_BaselineHierarchy_P1T1_1stItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{01_03_BaselineHierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST 1st Baseline by ProjectId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"if (pm.response.code < 300 && pm.response.code > 199)",
											"{",
											"    var jsonData = pm.response.json();",
											"    var tempNewBaselineid = jsonData[\"id\"];",
											"    pm.collectionVariables.set(\"01_03_BaselineHierarchy_1stBaselineId\",tempNewBaselineid);",
											"    ",
											"    pm.test(\"Status code is 201\", function () {",
											"        pm.response.to.have.status(201);",
											"    });",
											"}",
											"else{",
											"    pm.test(\"Status code is 409\", function () {",
											"        pm.response.to.have.status(409);",
											"    });",
											"    pm.collectionVariables.set(\"01_03_BaselineHierarchy_1stBaselineName\",\"\");",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_1stBaselineName\", \"New Baseline - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"01_03_BaselineHierarchy_1stBaselineName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"projectId\": \"{{01_03_BaselineHierarchy_1stProjectId}}\",\r\n    \"name\": \"{{01_03_BaselineHierarchy_1stBaselineName}}\",\r\n    \"description\": \"This is Description for {{01_03_BaselineHierarchy_1stBaselineName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Baselines",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Baseline\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_03_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_03_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz Count by BaselineId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 9 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzCount/{{01_03_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzCount",
										"{{01_03_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_03_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_03_BaselineHierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_2_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_03_BaselineHierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_03_BaselineHierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 3 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_3_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_03_BaselineHierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_03_BaselineHierarchy_P1T1_3rdItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.1 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_03_BaselineHierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_03_BaselineHierarchy_P1T1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.1.1 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_1_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_03_BaselineHierarchy_P1T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_03_BaselineHierarchy_P1T1_1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.2 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_1_2_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_03_BaselineHierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_03_BaselineHierarchy_P1T1_1_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.2.1 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_1_2_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_03_BaselineHierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_03_BaselineHierarchy_P1T1_1_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_2_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_03_BaselineHierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_03_BaselineHierarchy_P1T1_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_2_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_03_BaselineHierarchy_P1T1_2_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_03_BaselineHierarchy_P1T1_2_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify BaselineHierarchyId to be \" \r",
											"        + jsonData[\"baselineHierarchyId\"]\r",
											"        , function () {\r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be\" \r",
											"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
											"        ,  function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"1/1/1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"1/1/2/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_03_BaselineHierarchy_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_03_BaselineHierarchy_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET VerifiyBreakdownStructure for BaselineItemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
											"    pm.expect(jsonData).to.be.eq(true); \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_03_BaselineHierarchy_1stBaselineId}}&childId={{01_03_BaselineHierarchy_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"VerifyParentChildBreakdownStructure"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_03_BaselineHierarchy_1stBaselineId}}"
										},
										{
											"key": "childId",
											"value": "{{01_03_BaselineHierarchy_1_BaselineItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify BaselineHierarchyId to be \"  \r",
											"        + jsonData[\"baselineHierarchyId\"]\r",
											"        , function () {\r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/2/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/2/1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_03_BaselineHierarchy_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_03_BaselineHierarchy_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 3 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify BaselineHierarchyId to be \" \r",
											"        + jsonData[\"baselineHierarchyId\"]\r",
											"        ,  function () {\r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/3/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be\" \r",
											"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_03_BaselineHierarchy_3_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_03_BaselineHierarchy_3_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.1 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify BaselineHierarchyId to be \" \r",
											"        + jsonData[\"baselineHierarchyId\"]\r",
											"        ,  function () {\r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"1/1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"1/1/1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"1/1/1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_03_BaselineHierarchy_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_03_BaselineHierarchy_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.1.1 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"\r",
											"pm.test(\"Verify BaselineHierarchyId to be \" \r",
											"        + jsonData[\"baselineHierarchyId\"]\r",
											"        ,  function () {\r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"1/1/1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_03_BaselineHierarchy_1_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_03_BaselineHierarchy_1_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.2 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_1_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify BaselineHierarchyId to be \" \r",
											"        + jsonData[\"baselineHierarchyId\"]\r",
											"        ,  function () {\r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"1/1/2/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"1/1/2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"1/1/2/1/\"); });\r",
											"    \r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_03_BaselineHierarchy_1_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_03_BaselineHierarchy_1_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET VerifiyBreakdownStructure for BaselineItemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
											"    pm.expect(jsonData).to.be.eq(true); \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_03_BaselineHierarchy_1stBaselineId}}&childId={{01_03_BaselineHierarchy_1_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"VerifyParentChildBreakdownStructure"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_03_BaselineHierarchy_1stBaselineId}}"
										},
										{
											"key": "childId",
											"value": "{{01_03_BaselineHierarchy_1_2_BaselineItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.2.1 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_1_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify BaselineHierarchyId to be \" \r",
											"        + jsonData[\"baselineHierarchyId\"]\r",
											"        ,  function () {\r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"1/1/2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_03_BaselineHierarchy_1_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_03_BaselineHierarchy_1_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify BaselineHierarchyId to be \" \r",
											"        + jsonData[\"baselineHierarchyId\"]\r",
											"        ,  function () {\r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/2/1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/2/1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_03_BaselineHierarchy_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_03_BaselineHierarchy_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_03_BaselineHierarchy_2_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify BaselineHierarchyId to be \" \r",
											"        + jsonData[\"baselineHierarchyId\"]\r",
											"        ,  function () {\r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/2/1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_03_BaselineHierarchy_2_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_03_BaselineHierarchy_2_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET VerifiyBreakdownStructure for BaselineItemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
											"    pm.expect(jsonData).to.be.eq(true); \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_03_BaselineHierarchy_1stBaselineId}}&childId={{01_03_BaselineHierarchy_2_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"VerifyParentChildBreakdownStructure"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_03_BaselineHierarchy_1stBaselineId}}"
										},
										{
											"key": "childId",
											"value": "{{01_03_BaselineHierarchy_2_1_1_BaselineItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET VerifiyBreakdownStructure for WRONG ORDER",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
											"    pm.expect(jsonData).to.be.eq(false); \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_03_BaselineHierarchy_2_1_1_BaselineItemzId}}&childId={{01_03_BaselineHierarchy_1stBaselineId}}&=",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"VerifyParentChildBreakdownStructure"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_03_BaselineHierarchy_2_1_1_BaselineItemzId}}"
										},
										{
											"key": "childId",
											"value": "{{01_03_BaselineHierarchy_1stBaselineId}}"
										},
										{
											"key": "",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET VerifiyBreakdownStructure for 1st Project ID WRONG LEVEL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_03_BaselineHierarchy_1stProjectId}}&childId={{01_03_BaselineHierarchy_2_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"VerifyParentChildBreakdownStructure"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_03_BaselineHierarchy_1stProjectId}}"
										},
										{
											"key": "childId",
											"value": "{{01_03_BaselineHierarchy_2_1_1_BaselineItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz Trace Count by BaselineId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 0 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzTraceCount/{{01_03_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzTraceCount",
										"{{01_03_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{01_03_BaselineHierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{01_03_BaselineHierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "01_04 CreateBaselineByItemzTypeId",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"01_04_BaselineHierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{01_04_BaselineHierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{01_04_BaselineHierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{01_04_BaselineHierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{01_04_BaselineHierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType P1T1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{01_04_BaselineHierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{01_04_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{01_04_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{01_04_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{01_04_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 3 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_P1T1_3rdItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 3\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{01_04_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{01_04_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_04_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_04_BaselineHierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_04_BaselineHierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_04_BaselineHierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_04_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_04_BaselineHierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_04_BaselineHierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_04_BaselineHierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_P1T1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_04_BaselineHierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_04_BaselineHierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_P1T1_2_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{01_04_BaselineHierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_04_BaselineHierarchy_P1T1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Itemz 1 to Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{01_04_BaselineHierarchy_P1T1_1stItemzId}}?TargetId={{01_04_BaselineHierarchy_P1PL_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{01_04_BaselineHierarchy_P1T1_1stItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{01_04_BaselineHierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST 1st Baseline by ItemzTypeId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"if (pm.response.code < 300 && pm.response.code > 199)",
											"{",
											"    var jsonData = pm.response.json();",
											"    var tempNewBaselineid = jsonData[\"id\"];",
											"    pm.collectionVariables.set(\"01_04_BaselineHierarchy_1stBaselineId\",tempNewBaselineid);",
											"    ",
											"    pm.test(\"Status code is 201\", function () {",
											"        pm.response.to.have.status(201);",
											"    });",
											"}",
											"else{",
											"    pm.test(\"Status code is 409\", function () {",
											"        pm.response.to.have.status(409);",
											"    });",
											"    pm.collectionVariables.set(\"01_04_BaselineHierarchy_1stBaselineName\",\"\");",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_1stBaselineName\", \"New Baseline - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"01_04_BaselineHierarchy_1stBaselineName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"projectId\": \"{{01_04_BaselineHierarchy_1stProjectId}}\",\r\n    \"itemzTypeId\": \"{{01_04_BaselineHierarchy_P1T1_ItemzTypeId}}\",\r\n    \"name\": \"{{01_04_BaselineHierarchy_1stBaselineName}}\",\r\n    \"description\": \"This is Description for {{01_04_BaselineHierarchy_1stBaselineName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Baselines",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Baseline\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_04_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_04_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_04_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_04_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz Count by BaselineId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 4 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzCount/{{01_04_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzCount",
										"{{01_04_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(0)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_04_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_04_BaselineHierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_2_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_04_BaselineHierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_04_BaselineHierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_3_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_04_BaselineHierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_04_BaselineHierarchy_P1T1_3rdItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.1 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(0)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_04_BaselineHierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_04_BaselineHierarchy_P1T1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.1.1 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(0)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_04_BaselineHierarchy_P1T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_04_BaselineHierarchy_P1T1_1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.2 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(0)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_04_BaselineHierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_04_BaselineHierarchy_P1T1_1_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.2.1 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(0)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_04_BaselineHierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_04_BaselineHierarchy_P1T1_1_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_2_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_04_BaselineHierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_04_BaselineHierarchy_P1T1_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_2_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_04_BaselineHierarchy_P1T1_2_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{01_04_BaselineHierarchy_P1T1_2_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify BaselineHierarchyId to be \"  \r",
											"        + jsonData[\"baselineHierarchyId\"]\r",
											"        , function () {\r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_04_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/2/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_04_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/2/1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_04_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_04_BaselineHierarchy_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_04_BaselineHierarchy_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify BaselineHierarchyId to be \" \r",
											"        + jsonData[\"baselineHierarchyId\"]\r",
											"        ,  function () {\r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_04_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/3/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be\" \r",
											"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_04_BaselineHierarchy_3_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_04_BaselineHierarchy_3_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify BaselineHierarchyId to be \" \r",
											"        + jsonData[\"baselineHierarchyId\"]\r",
											"        ,  function () {\r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_04_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_04_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/2/1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_04_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/2/1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_04_BaselineHierarchy_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_04_BaselineHierarchy_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"01_04_BaselineHierarchy_2_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify BaselineHierarchyId to be \" \r",
											"        + jsonData[\"baselineHierarchyId\"]\r",
											"        ,  function () {\r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_04_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/2/1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
											"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
											"        , function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_04_BaselineHierarchy_2_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{01_04_BaselineHierarchy_2_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET VerifiyBreakdownStructure for BaselineItemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
											"    pm.expect(jsonData).to.be.eq(true); \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_04_BaselineHierarchy_1stBaselineId}}&childId={{01_04_BaselineHierarchy_2_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"VerifyParentChildBreakdownStructure"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_04_BaselineHierarchy_1stBaselineId}}"
										},
										{
											"key": "childId",
											"value": "{{01_04_BaselineHierarchy_2_1_1_BaselineItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET VerifiyBreakdownStructure for WRONG ORDER",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
											"    pm.expect(jsonData).to.be.eq(false); \r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_04_BaselineHierarchy_2_1_1_BaselineItemzId}}&childId={{01_04_BaselineHierarchy_1stBaselineId}}&=",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"VerifyParentChildBreakdownStructure"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{01_04_BaselineHierarchy_2_1_1_BaselineItemzId}}"
										},
										{
											"key": "childId",
											"value": "{{01_04_BaselineHierarchy_1stBaselineId}}"
										},
										{
											"key": "",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz Trace Count by BaselineId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 0 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzTraceCount/{{01_04_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzTraceCount",
										"{{01_04_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{01_04_BaselineHierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{01_04_BaselineHierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "01_05 MoveBaselineItemzMultipleTimes",
					"item": [
						{
							"name": "SetUpProjectData",
							"item": [
								{
									"name": "POST Project 1st",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"var jsonData = pm.response.json();",
													"const tempNewProjectId = jsonData[\"id\"];",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1stProjectId\",tempNewProjectId);",
													"",
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
													"\r",
													"pm.variables.get(\"01_05_BaselineHierarchy_1stProjectName\");\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{01_05_BaselineHierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{01_05_BaselineHierarchy_1stProjectName}}\"\r\n}\r\n"
										},
										"url": {
											"raw": "http://localhost:51087/api/Projects",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Projects"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET 1st Projects Parking Lot ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var tempNew1stItemzTypeId = jsonData[0].id;\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{01_05_BaselineHierarchy_1stProjectId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Projects",
												"GetItemzTypes",
												"{{01_05_BaselineHierarchy_1stProjectId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST ItemzType P1T1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"/**",
													" ",
													" pm.test(\"Status code is either 201 or 409\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
													"});",
													"",
													"**/",
													"",
													"var jsonData = pm.response.json();",
													"var tempNew1stItemzTypeId = jsonData[\"id\"];",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
													"",
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"ItemzType P1T1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{01_05_BaselineHierarchy_1stProjectId}}\"\r\n}"
										},
										"url": {
											"raw": "http://localhost:51087/api/ItemzTypes",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"ItemzTypes"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST Itemz 1 to P1T1_ItemzType1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"",
													"var jsonData = pm.response.json();",
													"var tempNew1stItemzId =   jsonData[0].id;",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
													"",
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
										},
										"url": {
											"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{01_05_BaselineHierarchy_P1T1_ItemzTypeId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"ItemzTypeItemzs",
												"{{01_05_BaselineHierarchy_P1T1_ItemzTypeId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST Itemz 2 to P1T1_ItemzType1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"",
													"var jsonData = pm.response.json();",
													"var tempNew1stItemzId =   jsonData[0].id;",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
													"",
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
										},
										"url": {
											"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{01_05_BaselineHierarchy_P1T1_ItemzTypeId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"ItemzTypeItemzs",
												"{{01_05_BaselineHierarchy_P1T1_ItemzTypeId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST Itemz 3 to P1T1_ItemzType1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"",
													"var jsonData = pm.response.json();",
													"var tempNew1stItemzId =   jsonData[0].id;",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_P1T1_3rdItemzId\",tempNew1stItemzId);",
													"",
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 3\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
										},
										"url": {
											"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{01_05_BaselineHierarchy_P1T1_ItemzTypeId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"ItemzTypeItemzs",
												"{{01_05_BaselineHierarchy_P1T1_ItemzTypeId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST New Itemz 1.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is either 200 or 201\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var tempNew1stItemzId =   jsonData.id;",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/Itemzs?parentId={{01_05_BaselineHierarchy_P1T1_1stItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Itemzs"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_P1T1_1stItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "POST New Itemz 1.1.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is either 200 or 201\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var tempNew1stItemzId =   jsonData.id;",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/Itemzs?parentId={{01_05_BaselineHierarchy_P1T1_1_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Itemzs"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_P1T1_1_1_ItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "POST New Itemz 1.2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is either 200 or 201\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var tempNew1stItemzId =   jsonData.id;",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/Itemzs?parentId={{01_05_BaselineHierarchy_P1T1_1stItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Itemzs"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_P1T1_1stItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "POST New Itemz 1.2.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is either 200 or 201\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var tempNew1stItemzId =   jsonData.id;",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/Itemzs?parentId={{01_05_BaselineHierarchy_P1T1_1_2_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Itemzs"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_P1T1_1_2_ItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "POST New Itemz 2.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is either 200 or 201\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var tempNew1stItemzId =   jsonData.id;",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_P1T1_2_1_ItemzId\",tempNew1stItemzId);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/Itemzs?parentId={{01_05_BaselineHierarchy_P1T1_2ndItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Itemzs"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_P1T1_2ndItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "POST New Itemz 2.1.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is either 200 or 201\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var tempNew1stItemzId =   jsonData.id;",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_P1T1_2_1_1_ItemzId\",tempNew1stItemzId);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/Itemzs?parentId={{01_05_BaselineHierarchy_P1T1_2_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Itemzs"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_P1T1_2_1_ItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "POST Move P1T1 Itemz 3  between 1 and 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "conten",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{01_05_BaselineHierarchy_P1T1_3rdItemzId}}&firstItemzId={{01_05_BaselineHierarchy_P1T1_1stItemzId}}&secondItemzId={{01_05_BaselineHierarchy_P1T1_2ndItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Itemzs",
												"MoveItemzBetweenExistingItemz"
											],
											"query": [
												{
													"key": "movingItemzId",
													"value": "{{01_05_BaselineHierarchy_P1T1_3rdItemzId}}"
												},
												{
													"key": "firstItemzId",
													"value": "{{01_05_BaselineHierarchy_P1T1_1stItemzId}}"
												},
												{
													"key": "secondItemzId",
													"value": "{{01_05_BaselineHierarchy_P1T1_2ndItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "POST Move P1T1 Itemz 2  between 1 and 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "conten",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{01_05_BaselineHierarchy_P1T1_2ndItemzId}}&firstItemzId={{01_05_BaselineHierarchy_P1T1_1stItemzId}}&secondItemzId={{01_05_BaselineHierarchy_P1T1_3rdItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Itemzs",
												"MoveItemzBetweenExistingItemz"
											],
											"query": [
												{
													"key": "movingItemzId",
													"value": "{{01_05_BaselineHierarchy_P1T1_2ndItemzId}}"
												},
												{
													"key": "firstItemzId",
													"value": "{{01_05_BaselineHierarchy_P1T1_1stItemzId}}"
												},
												{
													"key": "secondItemzId",
													"value": "{{01_05_BaselineHierarchy_P1T1_3rdItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "POST Move P1T1 Itemz 3  between 1 and 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "conten",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{01_05_BaselineHierarchy_P1T1_3rdItemzId}}&firstItemzId={{01_05_BaselineHierarchy_P1T1_1stItemzId}}&secondItemzId={{01_05_BaselineHierarchy_P1T1_2ndItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Itemzs",
												"MoveItemzBetweenExistingItemz"
											],
											"query": [
												{
													"key": "movingItemzId",
													"value": "{{01_05_BaselineHierarchy_P1T1_3rdItemzId}}"
												},
												{
													"key": "firstItemzId",
													"value": "{{01_05_BaselineHierarchy_P1T1_1stItemzId}}"
												},
												{
													"key": "secondItemzId",
													"value": "{{01_05_BaselineHierarchy_P1T1_2ndItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "POST Move P1T1 Itemz 2  between 1 and 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.response.to.have.status(204);",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "conten",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{01_05_BaselineHierarchy_P1T1_2ndItemzId}}&firstItemzId={{01_05_BaselineHierarchy_P1T1_1stItemzId}}&secondItemzId={{01_05_BaselineHierarchy_P1T1_3rdItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Itemzs",
												"MoveItemzBetweenExistingItemz"
											],
											"query": [
												{
													"key": "movingItemzId",
													"value": "{{01_05_BaselineHierarchy_P1T1_2ndItemzId}}"
												},
												{
													"key": "firstItemzId",
													"value": "{{01_05_BaselineHierarchy_P1T1_1stItemzId}}"
												},
												{
													"key": "secondItemzId",
													"value": "{{01_05_BaselineHierarchy_P1T1_3rdItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "POST Itemz 4 BETWEEN 2 and 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var tempNew1stItemzId = jsonData.id;",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_P1T1_4thItemzId\",tempNew1stItemzId);",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"Name\": \"Itemz 4\",\r\n\"Status\": \"New\",\r\n\"Priority\": \"Medium\",\r\n\"Description\": \"Requirements to be described here.\"\r\n}\r\n"
										},
										"url": {
											"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{01_05_BaselineHierarchy_P1T1_2ndItemzId}}&secondItemzId={{01_05_BaselineHierarchy_P1T1_3rdItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Itemzs",
												"CreateItemzBetweenExistingItemz"
											],
											"query": [
												{
													"key": "firstItemzId",
													"value": "{{01_05_BaselineHierarchy_P1T1_2ndItemzId}}"
												},
												{
													"key": "secondItemzId",
													"value": "{{01_05_BaselineHierarchy_P1T1_3rdItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "POST New Itemz 4.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is either 200 or 201\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var tempNew1stItemzId =   jsonData.id;",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_P1T1_4_1_ItemzId\",tempNew1stItemzId);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "    {\r\n        \"name\": \"SINGLE Itemz 4.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/Itemzs?parentId={{01_05_BaselineHierarchy_P1T1_4thItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Itemzs"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_P1T1_4thItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "POST New Itemz 4.1.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is either 200 or 201\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var tempNew1stItemzId =   jsonData.id;",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_P1T1_4_1_1_ItemzId\",tempNew1stItemzId);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "    {\r\n        \"name\": \"SINGLE Itemz 4.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/Itemzs?parentId={{01_05_BaselineHierarchy_P1T1_4_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Itemzs"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_P1T1_4_1_ItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "POST New Itemz 4.2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is either 200 or 201\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
													"});",
													"",
													"var jsonData = pm.response.json();",
													"var tempNew1stItemzId =   jsonData.id;",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_P1T1_4_2_ItemzId\",tempNew1stItemzId);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "    {\r\n        \"name\": \"SINGLE Itemz 4.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/Itemzs?parentId={{01_05_BaselineHierarchy_P1T1_4thItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Itemzs"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_P1T1_4thItemzId}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "1st Baseline",
							"item": [
								{
									"name": "POST 1st Baseline by ProjectId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"if (pm.response.code < 300 && pm.response.code > 199)",
													"{",
													"    var jsonData = pm.response.json();",
													"    var tempNewBaselineid = jsonData[\"id\"];",
													"    pm.collectionVariables.set(\"01_05_BaselineHierarchy_1stBaselineId\",tempNewBaselineid);",
													"}",
													"else{",
													"    pm.test(\"Status code is 409\", function () {",
													"        pm.response.to.have.status(409);",
													"    });",
													"    pm.collectionVariables.set(\"01_05_BaselineHierarchy_1stBaselineName\",\"\");",
													"}",
													"",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1stBaselineName\", \"New Baseline - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
													"\r",
													"pm.variables.get(\"01_05_BaselineHierarchy_1stBaselineName\");\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"projectId\": \"{{01_05_BaselineHierarchy_1stProjectId}}\",\r\n    \"name\": \"{{01_05_BaselineHierarchy_1stBaselineName}}\",\r\n    \"description\": \"This is Description for {{01_05_BaselineHierarchy_1stBaselineName}}\"\r\n}\r\n"
										},
										"url": {
											"raw": "http://localhost:51087/api/Baselines",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Baselines"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Baseline\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
													"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
													"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_1stBaselineId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_1stBaselineId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz Count by BaselineId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
													"        pm.expect(parseInt(pm.response.text())).to.eql( 9 + 4)\r",
													"        });\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzCount/{{01_05_BaselineHierarchy_1stBaselineId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Baselines",
												"GetBaselineItemzCount",
												"{{01_05_BaselineHierarchy_1stBaselineId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var tempId = jsonData[0].id;\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1_BaselineItemzId\",tempId);\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_1stItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_1stItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 2 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var tempId = jsonData[0].id;\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_2_BaselineItemzId\",tempId);\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_2ndItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_2ndItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 3 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var tempId = jsonData[0].id;\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_3_BaselineItemzId\",tempId);\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_3rdItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_3rdItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var tempId = jsonData[0].id;\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_4_BaselineItemzId\",tempId);\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_4thItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_4thItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 1.1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var tempId = jsonData[0].id;\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1_1_BaselineItemzId\",tempId);\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_1_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_1_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 1.1.1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var tempId = jsonData[0].id;\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1_1_1_BaselineItemzId\",tempId);\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_1_1_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_1_1_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 1.2 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var tempId = jsonData[0].id;\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1_2_BaselineItemzId\",tempId);\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_1_2_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_1_2_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 1.2.1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var tempId = jsonData[0].id;\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1_2_1_BaselineItemzId\",tempId);\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_1_2_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_1_2_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 2.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var tempId = jsonData[0].id;\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_2_1_BaselineItemzId\",tempId);\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_2_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_2_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 2.1.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var tempId = jsonData[0].id;\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_2_1_1_BaselineItemzId\",tempId);\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_2_1_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_2_1_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 4.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var tempId = jsonData[0].id;\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_4_1_BaselineItemzId\",tempId);\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_4_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_4_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 4.1.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var tempId = jsonData[0].id;\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_4_1_1_BaselineItemzId\",tempId);\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_4_1_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_4_1_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 4.2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"var tempId = jsonData[0].id;\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_4_2_BaselineItemzId\",tempId);\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_4_2_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_4_2_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(2);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be\" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1/1/\"); });\r",
													"\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1/2/\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_1_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET VerifiyBreakdownStructure for BaselineItemz 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
													"    pm.expect(jsonData).to.be.eq(true); \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_05_BaselineHierarchy_1stBaselineId}}&childId={{01_05_BaselineHierarchy_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"VerifyParentChildBreakdownStructure"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_1stBaselineId}}"
												},
												{
													"key": "childId",
													"value": "{{01_05_BaselineHierarchy_1_BaselineItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \"  \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1.-2/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
													"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1.-2/1/\"); });\r",
													"\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1.-2/1/\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_2_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_2_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 3 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1.-1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be\" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_3_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_3_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_4_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \"  \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        , function () {    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1.-2.1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(2);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1.-2.1/1/\"); });\r",
													"\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1.-2.1/2/\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_4_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_4_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 1.1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_1_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_1_1_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 1.1.1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_1_1_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_1_1_1_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 1.2 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1/2/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1/2/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1/2/1/\"); });\r",
													"    \r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_1_2_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_1_2_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET VerifiyBreakdownStructure for BaselineItemz 1.2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
													"    pm.expect(jsonData).to.be.eq(true); \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_05_BaselineHierarchy_1stBaselineId}}&childId={{01_05_BaselineHierarchy_1_2_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"VerifyParentChildBreakdownStructure"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_1stBaselineId}}"
												},
												{
													"key": "childId",
													"value": "{{01_05_BaselineHierarchy_1_2_BaselineItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 1.2.1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1/2/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_1_2_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_1_2_1_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1.-2/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1.-2/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1.-2/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_2_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_2_1_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_2_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/1.-2/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_2_1_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_2_1_1_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET VerifiyBreakdownStructure for BaselineItemz 2.1.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
													"    pm.expect(jsonData).to.be.eq(true); \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_05_BaselineHierarchy_1stBaselineId}}&childId={{01_05_BaselineHierarchy_2_1_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"VerifyParentChildBreakdownStructure"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_1stBaselineId}}"
												},
												{
													"key": "childId",
													"value": "{{01_05_BaselineHierarchy_2_1_1_BaselineItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET VerifiyBreakdownStructure for WRONG ORDER",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
													"    pm.expect(jsonData).to.be.eq(false); \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_05_BaselineHierarchy_2_1_1_BaselineItemzId}}&childId={{01_05_BaselineHierarchy_1stBaselineId}}&=",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"VerifyParentChildBreakdownStructure"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_2_1_1_BaselineItemzId}}"
												},
												{
													"key": "childId",
													"value": "{{01_05_BaselineHierarchy_1stBaselineId}}"
												},
												{
													"key": "",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET VerifiyBreakdownStructure for 1st Project ID WRONG LEVEL",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_05_BaselineHierarchy_1stProjectId}}&childId={{01_05_BaselineHierarchy_2_1_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"VerifyParentChildBreakdownStructure"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_1stProjectId}}"
												},
												{
													"key": "childId",
													"value": "{{01_05_BaselineHierarchy_2_1_1_BaselineItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz Trace Count by 1st BaselineId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
													"        pm.expect(parseInt(pm.response.text())).to.eql( 0 )\r",
													"        });\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzTraceCount/{{01_05_BaselineHierarchy_1stBaselineId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Baselines",
												"GetBaselineItemzTraceCount",
												"{{01_05_BaselineHierarchy_1stBaselineId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "2nd Baseline",
							"item": [
								{
									"name": "POST 2nd Baseline by ProjectId VERIFY 2ND BASELINE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"if (pm.response.code < 300 && pm.response.code > 199)",
													"{",
													"    var jsonData = pm.response.json();",
													"    var tempNewBaselineid = jsonData[\"id\"];",
													"    pm.collectionVariables.set(\"01_05_BaselineHierarchy_2ndBaselineId\",tempNewBaselineid);",
													"}",
													"else{",
													"    pm.test(\"Status code is 409\", function () {",
													"        pm.response.to.have.status(409);",
													"    });",
													"    pm.collectionVariables.set(\"01_05_BaselineHierarchy_2ndBaselineName\",\"\");",
													"}",
													"",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_2ndBaselineName\", \"New Baseline - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
													"\r",
													"pm.variables.get(\"01_05_BaselineHierarchy_2ndBaselineName\");\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"projectId\": \"{{01_05_BaselineHierarchy_1stProjectId}}\",\r\n    \"name\": \"{{01_05_BaselineHierarchy_2ndBaselineName}}\",\r\n    \"description\": \"This is Description for {{01_05_BaselineHierarchy_2ndBaselineName}}\"\r\n}\r\n"
										},
										"url": {
											"raw": "http://localhost:51087/api/Baselines",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Baselines"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Baseline\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
													"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
													"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_2ndBaselineId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_2ndBaselineId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz Count by BaselineId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
													"        pm.expect(parseInt(pm.response.text())).to.eql( 9 + 4)\r",
													"        });\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzCount/{{01_05_BaselineHierarchy_2ndBaselineId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Baselines",
												"GetBaselineItemzCount",
												"{{01_05_BaselineHierarchy_2ndBaselineId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_1_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B2_1_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(2)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_1stItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_1stItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 2 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_2_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B2_2_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(2)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_2ndItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_2ndItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 3 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_3_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B2_3_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(2)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_3rdItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_3rdItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_4_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B2_4_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(2)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_4thItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_4thItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 1.1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_1_1_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B2_1_1_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(2)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_1_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_1_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 1.1.1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_1_1_1_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B2_1_1_1_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(2)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_1_1_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_1_1_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 1.2 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_1_2_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B2_1_2_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(2)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_1_2_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_1_2_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 1.2.1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_1_2_1_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B2_1_2_1_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(2)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_1_2_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_1_2_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 2.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_2_1_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B2_2_1_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(2)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_2_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_2_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 2.1.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_2_1_1_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B2_2_1_1_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(2)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_2_1_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_2_1_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 4.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_4_1_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B2_4_1_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(2)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_4_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_4_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 4.1.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_4_1_1_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B2_4_1_1_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(2)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_4_1_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_4_1_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 4.2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_4_2_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B2_4_2_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(2)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_4_2_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_4_2_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(2);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be\" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1/1/\"); });\r",
													"\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1/2/\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_B2_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_B2_1_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET VerifiyBreakdownStructure for BaselineItemz 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
													"    pm.expect(jsonData).to.be.eq(true); \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_05_BaselineHierarchy_2ndBaselineId}}&childId={{01_05_BaselineHierarchy_B2_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"VerifyParentChildBreakdownStructure"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_2ndBaselineId}}"
												},
												{
													"key": "childId",
													"value": "{{01_05_BaselineHierarchy_B2_1_BaselineItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \"  \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1.-2/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
													"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1.-2/1/\"); });\r",
													"\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1.-2/1/\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_B2_2_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_B2_2_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 3 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1.-1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be\" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_B2_3_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_B2_3_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_4_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \"  \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        , function () {    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1.-2.1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(2);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1.-2.1/1/\"); });\r",
													"\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1.-2.1/2/\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_B2_4_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_B2_4_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 1.1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_B2_1_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_B2_1_1_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 1.1.1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_B2_1_1_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_B2_1_1_1_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 1.2 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1/2/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1/2/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1/2/1/\"); });\r",
													"    \r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_B2_1_2_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_B2_1_2_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET VerifiyBreakdownStructure for BaselineItemz 1.2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
													"    pm.expect(jsonData).to.be.eq(true); \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_05_BaselineHierarchy_2ndBaselineId}}&childId={{01_05_BaselineHierarchy_B2_1_2_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"VerifyParentChildBreakdownStructure"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_2ndBaselineId}}"
												},
												{
													"key": "childId",
													"value": "{{01_05_BaselineHierarchy_B2_1_2_BaselineItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 1.2.1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1/2/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_B2_1_2_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_B2_1_2_1_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1.-2/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1.-2/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1.-2/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_B2_2_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_B2_2_1_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_B2_2_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_2ndBaseline_BaselineHeirarchyId\") + \"2/1.-2/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_B2_2_1_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_B2_2_1_1_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET VerifiyBreakdownStructure for BaselineItemz 2.1.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
													"    pm.expect(jsonData).to.be.eq(true); \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_05_BaselineHierarchy_2ndBaselineId}}&childId={{01_05_BaselineHierarchy_B2_2_1_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"VerifyParentChildBreakdownStructure"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_2ndBaselineId}}"
												},
												{
													"key": "childId",
													"value": "{{01_05_BaselineHierarchy_B2_2_1_1_BaselineItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET VerifiyBreakdownStructure for WRONG ORDER",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
													"    pm.expect(jsonData).to.be.eq(false); \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_05_BaselineHierarchy_B2_2_1_1_BaselineItemzId}}&childId={{01_05_BaselineHierarchy_2ndBaselineId}}&=",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"VerifyParentChildBreakdownStructure"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_B2_2_1_1_BaselineItemzId}}"
												},
												{
													"key": "childId",
													"value": "{{01_05_BaselineHierarchy_2ndBaselineId}}"
												},
												{
													"key": "",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET VerifiyBreakdownStructure for 1st Project ID WRONG LEVEL",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_05_BaselineHierarchy_1stProjectId}}&childId={{01_05_BaselineHierarchy_B2_2_1_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"VerifyParentChildBreakdownStructure"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_1stProjectId}}"
												},
												{
													"key": "childId",
													"value": "{{01_05_BaselineHierarchy_B2_2_1_1_BaselineItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz Trace Count by 3rd BaselineId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
													"        pm.expect(parseInt(pm.response.text())).to.eql( 0 )\r",
													"        });\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzTraceCount/{{01_05_BaselineHierarchy_2ndBaselineId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Baselines",
												"GetBaselineItemzTraceCount",
												"{{01_05_BaselineHierarchy_2ndBaselineId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "3rd Baseline",
							"item": [
								{
									"name": "POST 3rd Baseline by 2nd Baseline VERIFY 3RD BASELINE",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"if (pm.response.code < 300 && pm.response.code > 199)",
													"{",
													"    var jsonData = pm.response.json();",
													"    var tempNewBaselineid = jsonData[\"id\"];",
													"    pm.collectionVariables.set(\"01_05_BaselineHierarchy_3rdBaselineId\",tempNewBaselineid);",
													"    ",
													"}",
													"else{",
													"    pm.test(\"Status code is 409\", function () {",
													"        pm.response.to.have.status(409);",
													"    });",
													"    pm.collectionVariables.set(\"01_05_BaselineHierarchy_3rdBaselineName\",\"\");",
													"}",
													"",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_3rdBaselineName\", \"New Baseline - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
													"\r",
													"pm.variables.get(\"01_05_BaselineHierarchy_3rdBaselineName\");\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"baselineId\": \"{{01_05_BaselineHierarchy_2ndBaselineId}}\",\r\n    \"name\": \"{{01_05_BaselineHierarchy_3rdBaselineName}}\",\r\n    \"description\": \"This is Description for {{01_05_BaselineHierarchy_3rdBaselineName}}\"\r\n}\r\n"
										},
										"url": {
											"raw": "http://localhost:51087/api/Baselines/CloneBaseline",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Baselines",
												"CloneBaseline"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Baseline\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
													"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
													"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_3rdBaselineId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_3rdBaselineId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz Count by BaselineId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
													"        pm.expect(parseInt(pm.response.text())).to.eql( 9 + 4)\r",
													"        });\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzCount/{{01_05_BaselineHierarchy_3rdBaselineId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Baselines",
												"GetBaselineItemzCount",
												"{{01_05_BaselineHierarchy_3rdBaselineId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_1_BaselineItemzId\") \r",
													"          || jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_B2_1_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B3_1_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(3)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_1stItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_1stItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 2 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_2_BaselineItemzId\") \r",
													"          || jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_B2_2_BaselineItemzId\")))\r",
													"    {        \r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B3_2_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(3)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_2ndItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_2ndItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 3 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_3_BaselineItemzId\") \r",
													"          || jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_B2_3_BaselineItemzId\")))\r",
													"    {         \r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B3_3_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(3)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_3rdItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_3rdItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_4_BaselineItemzId\") \r",
													"          || jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_B2_4_BaselineItemzId\")))\r",
													"    {         \r",
													"\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B3_4_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(3)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_4thItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_4thItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 1.1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_1_1_BaselineItemzId\") \r",
													"          || jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_B2_1_1_BaselineItemzId\")))\r",
													"    {         \r",
													"\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B3_1_1_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(3)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_1_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_1_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 1.1.1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_1_1_1_BaselineItemzId\") \r",
													"          || jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_B2_1_1_1_BaselineItemzId\")))\r",
													"    { \r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B3_1_1_1_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(3)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_1_1_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_1_1_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 1.2 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_1_2_BaselineItemzId\") \r",
													"          || jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_B2_1_2_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B3_1_2_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(3)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_1_2_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_1_2_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 1.2.1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_1_2_1_BaselineItemzId\") \r",
													"          || jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_B2_1_2_1_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B3_1_2_1_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(3)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_1_2_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_1_2_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 2.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_2_1_BaselineItemzId\") \r",
													"          || jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_B2_2_1_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B3_2_1_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(3)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_2_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_2_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 2.1.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_2_1_1_BaselineItemzId\") \r",
													"          || jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_B2_2_1_1_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B3_2_1_1_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(3)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_2_1_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_2_1_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 4.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_4_1_BaselineItemzId\") \r",
													"          || jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_B2_4_1_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B3_4_1_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(3)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_4_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_4_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 4.1.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_4_1_1_BaselineItemzId\") \r",
													"          || jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_B2_4_1_1_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B3_4_1_1_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(3)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_4_1_1_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_4_1_1_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz by Itemz 4.2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"for (var i = 0; i < jsonData.length; i++)\r",
													"{\r",
													"    if (!(jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_4_2_BaselineItemzId\") \r",
													"          || jsonData[i].id === pm.collectionVariables.get(\"01_05_BaselineHierarchy_B2_4_2_BaselineItemzId\")))\r",
													"    {\r",
													"        var tempId = jsonData[i].id;\r",
													"        pm.collectionVariables.set(\"01_05_BaselineHierarchy_B3_4_2_BaselineItemzId\",tempId);\r",
													"    }\r",
													"}\r",
													"\r",
													"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
													"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(3)\r",
													"        });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{01_05_BaselineHierarchy_P1T1_4_2_ItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineItemz",
												"GetBaselineItemzs",
												"{{01_05_BaselineHierarchy_P1T1_4_2_ItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(2);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be\" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1/1/\"); });\r",
													"\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1/2/\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_B3_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_B3_1_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET VerifiyBreakdownStructure for BaselineItemz 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
													"    pm.expect(jsonData).to.be.eq(true); \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_05_BaselineHierarchy_3rdBaselineId}}&childId={{01_05_BaselineHierarchy_B3_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"VerifyParentChildBreakdownStructure"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_3rdBaselineId}}"
												},
												{
													"key": "childId",
													"value": "{{01_05_BaselineHierarchy_B3_1_BaselineItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \"  \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1.-2/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
													"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1.-2/1/\"); });\r",
													"\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1.-2/1/\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_B3_2_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_B3_2_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 3 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1.-1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be\" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_B3_3_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_B3_3_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 4",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_4_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \"  \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        , function () {    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1.-2.1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(2);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1.-2.1/1/\"); });\r",
													"\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1.-2.1/2/\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_B3_4_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_B3_4_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 1.1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_B3_1_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_B3_1_1_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 1.1.1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_B3_1_1_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_B3_1_1_1_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 1.2 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1/2/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1/2/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1/2/1/\"); });\r",
													"    \r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_B3_1_2_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_B3_1_2_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET VerifiyBreakdownStructure for BaselineItemz 1.2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
													"    pm.expect(jsonData).to.be.eq(true); \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_05_BaselineHierarchy_3rdBaselineId}}&childId={{01_05_BaselineHierarchy_B3_1_2_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"VerifyParentChildBreakdownStructure"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_3rdBaselineId}}"
												},
												{
													"key": "childId",
													"value": "{{01_05_BaselineHierarchy_B3_1_2_BaselineItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 1.2.1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_1_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1/2/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_B3_1_2_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_B3_1_2_1_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1.-2/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1.-2/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1.-2/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_B3_2_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_B3_2_1_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.collectionVariables.set(\"01_05_BaselineHierarchy_B3_2_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
													"\r",
													"pm.test(\"Verify BaselineHierarchyId to be \" \r",
													"        + jsonData[\"baselineHierarchyId\"]\r",
													"        ,  function () {\r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"01_05_BaselineHierarchy_3rdBaseline_BaselineHeirarchyId\") + \"2/1.-2/1/1/\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy level\", function () {\r",
													"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
													"\r",
													"pm.test(\"Verify Hierarchy recordType\", function () {\r",
													"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
													"\r",
													"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
													"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
													"\r",
													"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"topChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId to be \" \r",
													"        + jsonData[\"bottomChildBaselineHierarchyId\"]\r",
													"        , function () {\r",
													"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
													"\r",
													"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
													"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
													"});\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/{{01_05_BaselineHierarchy_B3_2_1_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"{{01_05_BaselineHierarchy_B3_2_1_1_BaselineItemzId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET VerifiyBreakdownStructure for BaselineItemz 2.1.1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
													"    pm.expect(jsonData).to.be.eq(true); \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_05_BaselineHierarchy_3rdBaselineId}}&childId={{01_05_BaselineHierarchy_B3_2_1_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"VerifyParentChildBreakdownStructure"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_3rdBaselineId}}"
												},
												{
													"key": "childId",
													"value": "{{01_05_BaselineHierarchy_B3_2_1_1_BaselineItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET VerifiyBreakdownStructure for WRONG ORDER",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Verify Baseline Hierarchy Ids for Breakdown Structure\",  function () {\r",
													"    pm.expect(jsonData).to.be.eq(false); \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_05_BaselineHierarchy_B3_2_1_1_BaselineItemzId}}&childId={{01_05_BaselineHierarchy_3rdBaselineId}}&=",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"VerifyParentChildBreakdownStructure"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_B3_2_1_1_BaselineItemzId}}"
												},
												{
													"key": "childId",
													"value": "{{01_05_BaselineHierarchy_3rdBaselineId}}"
												},
												{
													"key": "",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET VerifiyBreakdownStructure for 1st Project ID WRONG LEVEL",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/BaselineHierarchy/VerifyParentChildBreakdownStructure?parentId={{01_05_BaselineHierarchy_1stProjectId}}&childId={{01_05_BaselineHierarchy_B3_2_1_1_BaselineItemzId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"BaselineHierarchy",
												"VerifyParentChildBreakdownStructure"
											],
											"query": [
												{
													"key": "parentId",
													"value": "{{01_05_BaselineHierarchy_1stProjectId}}"
												},
												{
													"key": "childId",
													"value": "{{01_05_BaselineHierarchy_B3_2_1_1_BaselineItemzId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET Baseline Itemz Trace Count by 3rd BaselineId",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
													"        pm.expect(parseInt(pm.response.text())).to.eql( 0 )\r",
													"        });\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzTraceCount/{{01_05_BaselineHierarchy_3rdBaselineId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Baselines",
												"GetBaselineItemzTraceCount",
												"{{01_05_BaselineHierarchy_3rdBaselineId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "CleanUp",
							"item": [
								{
									"name": "DELETE 1st Project",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is Either 200 or 204\", function () {\r",
													"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "http://localhost:51087/api/Projects/{{01_05_BaselineHierarchy_1stProjectId}}",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "51087",
											"path": [
												"api",
												"Projects",
												"{{01_05_BaselineHierarchy_1stProjectId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "0002 BaselineModify_Include_Exclude",
			"item": [
				{
					"name": "02_01 ExcludeParentBaselineItemz",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"02_01_BaselineHierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{02_01_BaselineHierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{02_01_BaselineHierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{02_01_BaselineHierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{02_01_BaselineHierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType P1T1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{02_01_BaselineHierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{02_01_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{02_01_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{02_01_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{02_01_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 3 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_P1T1_3rdItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 3\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{02_01_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{02_01_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{02_01_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{02_01_BaselineHierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{02_01_BaselineHierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{02_01_BaselineHierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{02_01_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{02_01_BaselineHierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{02_01_BaselineHierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{02_01_BaselineHierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_P1T1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{02_01_BaselineHierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{02_01_BaselineHierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_P1T1_2_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{02_01_BaselineHierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{02_01_BaselineHierarchy_P1T1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST 1st Baseline by ProjectId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"if (pm.response.code < 300 && pm.response.code > 199)",
											"{",
											"    var jsonData = pm.response.json();",
											"    var tempNewBaselineid = jsonData[\"id\"];",
											"    pm.collectionVariables.set(\"02_01_BaselineHierarchy_1stBaselineId\",tempNewBaselineid);",
											"    ",
											"    pm.test(\"Status code is 201\", function () {",
											"        pm.response.to.have.status(201);",
											"    });",
											"}",
											"else{",
											"    pm.test(\"Status code is 409\", function () {",
											"        pm.response.to.have.status(409);",
											"    });",
											"    pm.collectionVariables.set(\"02_01_BaselineHierarchy_1stBaselineName\",\"\");",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_1stBaselineName\", \"New Baseline - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"02_01_BaselineHierarchy_1stBaselineName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"projectId\": \"{{02_01_BaselineHierarchy_1stProjectId}}\",\r\n    \"name\": \"{{02_01_BaselineHierarchy_1stBaselineName}}\",\r\n    \"description\": \"This is Description for {{02_01_BaselineHierarchy_1stBaselineName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Baselines",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Baseline\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_01_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_01_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_01_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_01_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz Count by BaselineId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 9 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzCount/{{02_01_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzCount",
										"{{02_01_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_01_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_01_BaselineHierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_2_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_01_BaselineHierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_01_BaselineHierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_3_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_01_BaselineHierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_01_BaselineHierarchy_P1T1_3rdItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_01_BaselineHierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_01_BaselineHierarchy_P1T1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_1_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_01_BaselineHierarchy_P1T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_01_BaselineHierarchy_P1T1_1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_1_2_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_01_BaselineHierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_01_BaselineHierarchy_P1T1_1_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_1_2_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_01_BaselineHierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_01_BaselineHierarchy_P1T1_1_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_2_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_01_BaselineHierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_01_BaselineHierarchy_P1T1_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_2_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_01_BaselineHierarchy_P1T1_2_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_01_BaselineHierarchy_P1T1_2_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Count of Included Baseline Itemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify Included BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 9 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetIncludedBaselineItemzCount/{{02_01_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetIncludedBaselineItemzCount",
										"{{02_01_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Count of Excluded Baseline Itemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify Excluded BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 0 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetExcludedBaselineItemzCount/{{02_01_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetExcludedBaselineItemzCount",
										"{{02_01_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Exclude 1st BaselineItemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200, 201 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"shouldBeIncluded\": false,\r\n  \"baselineId\": \"{{02_01_BaselineHierarchy_1stBaselineId}}\",\r\n  \"baselineItemzIds\": [\r\n    \"{{02_01_BaselineHierarchy_1_BaselineItemzId}}\"\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Count of Included Baseline Itemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify Included BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 9 - 5 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetIncludedBaselineItemzCount/{{02_01_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetIncludedBaselineItemzCount",
										"{{02_01_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Count of Excluded Baseline Itemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify Excluded BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 0 + 5)\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetExcludedBaselineItemzCount/{{02_01_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetExcludedBaselineItemzCount",
										"{{02_01_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_01_BaselineHierarchy_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_01_BaselineHierarchy_1_BaselineHeirarchyId\") + \"2/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"    });\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_01_BaselineHierarchy_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_01_BaselineHierarchy_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_01_BaselineHierarchy_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_01_BaselineHierarchy_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_01_BaselineHierarchy_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_01_BaselineHierarchy_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"    });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_01_BaselineHierarchy_3_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_01_BaselineHierarchy_3_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_01_BaselineHierarchy_1_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_01_BaselineHierarchy_1_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_01_BaselineHierarchy_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_01_BaselineHierarchy_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"    });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_01_BaselineHierarchy_1_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_01_BaselineHierarchy_1_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_1_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_01_BaselineHierarchy_1_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_01_BaselineHierarchy_1_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_01_BaselineHierarchy_1_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_01_BaselineHierarchy_1_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_1_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_01_BaselineHierarchy_1_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_01_BaselineHierarchy_1_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_01_BaselineHierarchy_2_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_01_BaselineHierarchy_2_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_01_BaselineHierarchy_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_01_BaselineHierarchy_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_01_BaselineHierarchy_2_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_01_BaselineHierarchy_2_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_01_BaselineHierarchy_2_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_01_BaselineHierarchy_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_01_BaselineHierarchy_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 2 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_01_BaselineHierarchy_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_01_BaselineHierarchy_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 3 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_01_BaselineHierarchy_3_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_01_BaselineHierarchy_3_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 1.1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_01_BaselineHierarchy_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_01_BaselineHierarchy_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 1.1.1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_01_BaselineHierarchy_1_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_01_BaselineHierarchy_1_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 1.2 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_01_BaselineHierarchy_1_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_01_BaselineHierarchy_1_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 1.2.1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_01_BaselineHierarchy_1_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_01_BaselineHierarchy_1_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 2.1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_01_BaselineHierarchy_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_01_BaselineHierarchy_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 2.1.1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_01_BaselineHierarchy_2_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_01_BaselineHierarchy_2_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz Count by BaselineId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 9 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzCount/{{02_01_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzCount",
										"{{02_01_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{02_01_BaselineHierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{02_01_BaselineHierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "02_02 FirstExcludeChildAndThenParentBaselineItemz",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"02_02_BaselineHierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{02_02_BaselineHierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{02_02_BaselineHierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{02_02_BaselineHierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{02_02_BaselineHierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType P1T1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{02_02_BaselineHierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{02_02_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{02_02_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{02_02_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{02_02_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 3 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_P1T1_3rdItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 3\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{02_02_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{02_02_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{02_02_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{02_02_BaselineHierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{02_02_BaselineHierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{02_02_BaselineHierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{02_02_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{02_02_BaselineHierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{02_02_BaselineHierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{02_02_BaselineHierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_P1T1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{02_02_BaselineHierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{02_02_BaselineHierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_P1T1_2_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{02_02_BaselineHierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{02_02_BaselineHierarchy_P1T1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST 1st Baseline by ProjectId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"if (pm.response.code < 300 && pm.response.code > 199)",
											"{",
											"    var jsonData = pm.response.json();",
											"    var tempNewBaselineid = jsonData[\"id\"];",
											"    pm.collectionVariables.set(\"02_02_BaselineHierarchy_1stBaselineId\",tempNewBaselineid);",
											"    ",
											"    pm.test(\"Status code is 201\", function () {",
											"        pm.response.to.have.status(201);",
											"    });",
											"}",
											"else{",
											"    pm.test(\"Status code is 409\", function () {",
											"        pm.response.to.have.status(409);",
											"    });",
											"    pm.collectionVariables.set(\"02_02_BaselineHierarchy_1stBaselineName\",\"\");",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_1stBaselineName\", \"New Baseline - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"02_02_BaselineHierarchy_1stBaselineName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"projectId\": \"{{02_02_BaselineHierarchy_1stProjectId}}\",\r\n    \"name\": \"{{02_02_BaselineHierarchy_1stBaselineName}}\",\r\n    \"description\": \"This is Description for {{02_02_BaselineHierarchy_1stBaselineName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Baselines",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Baseline\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_02_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_02_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz Count by BaselineId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 9 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzCount/{{02_02_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzCount",
										"{{02_02_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_02_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_02_BaselineHierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_2_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_02_BaselineHierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_02_BaselineHierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_3_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_02_BaselineHierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_02_BaselineHierarchy_P1T1_3rdItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_02_BaselineHierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_02_BaselineHierarchy_P1T1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_1_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_02_BaselineHierarchy_P1T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_02_BaselineHierarchy_P1T1_1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_1_2_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_02_BaselineHierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_02_BaselineHierarchy_P1T1_1_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_1_2_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_02_BaselineHierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_02_BaselineHierarchy_P1T1_1_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_2_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_02_BaselineHierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_02_BaselineHierarchy_P1T1_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_2_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_02_BaselineHierarchy_P1T1_2_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_02_BaselineHierarchy_P1T1_2_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Count of Included Baseline Itemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify Included BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 9 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetIncludedBaselineItemzCount/{{02_02_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetIncludedBaselineItemzCount",
										"{{02_02_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Count of Excluded Baseline Itemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify Excluded BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 0 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetExcludedBaselineItemzCount/{{02_02_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetExcludedBaselineItemzCount",
										"{{02_02_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Exclude 1.2 BaselineItemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200, 201 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"shouldBeIncluded\": false,\r\n  \"baselineId\": \"{{02_02_BaselineHierarchy_1stBaselineId}}\",\r\n  \"baselineItemzIds\": [\r\n    \"{{02_02_BaselineHierarchy_1_2_BaselineItemzId}}\"\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Count of Included Baseline Itemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify Included BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 9 - 2 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetIncludedBaselineItemzCount/{{02_02_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetIncludedBaselineItemzCount",
										"{{02_02_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Count of Excluded Baseline Itemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify Excluded BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 0 + 2)\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetExcludedBaselineItemzCount/{{02_02_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetExcludedBaselineItemzCount",
										"{{02_02_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_1_BaselineHeirarchyId\") + \"2/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"    });\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_02_BaselineHierarchy_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_02_BaselineHierarchy_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_02_BaselineHierarchy_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_02_BaselineHierarchy_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"    });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_02_BaselineHierarchy_3_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_02_BaselineHierarchy_3_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_1_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_1_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_02_BaselineHierarchy_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_02_BaselineHierarchy_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"    });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_02_BaselineHierarchy_1_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_02_BaselineHierarchy_1_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_1_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_1_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_1_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_02_BaselineHierarchy_1_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_02_BaselineHierarchy_1_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_1_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_02_BaselineHierarchy_1_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_02_BaselineHierarchy_1_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_2_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_2_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_02_BaselineHierarchy_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_02_BaselineHierarchy_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_2_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_02_BaselineHierarchy_2_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_02_BaselineHierarchy_2_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_02_BaselineHierarchy_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_02_BaselineHierarchy_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 2 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_02_BaselineHierarchy_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_02_BaselineHierarchy_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 3 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_02_BaselineHierarchy_3_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_02_BaselineHierarchy_3_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 1.1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_02_BaselineHierarchy_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_02_BaselineHierarchy_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 1.1.1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_02_BaselineHierarchy_1_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_02_BaselineHierarchy_1_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 1.2 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_02_BaselineHierarchy_1_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_02_BaselineHierarchy_1_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 1.2.1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_02_BaselineHierarchy_1_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_02_BaselineHierarchy_1_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 2.1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_02_BaselineHierarchy_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_02_BaselineHierarchy_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 2.1.1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_02_BaselineHierarchy_2_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_02_BaselineHierarchy_2_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Exclude 1st BaselineItemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200, 201 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"shouldBeIncluded\": false,\r\n  \"baselineId\": \"{{02_02_BaselineHierarchy_1stBaselineId}}\",\r\n  \"baselineItemzIds\": [\r\n    \"{{02_02_BaselineHierarchy_1_BaselineItemzId}}\"\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Count of Included Baseline Itemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify Included BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 9 - 5 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetIncludedBaselineItemzCount/{{02_02_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetIncludedBaselineItemzCount",
										"{{02_02_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Count of Excluded Baseline Itemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify Excluded BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 0 + 5)\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetExcludedBaselineItemzCount/{{02_02_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetExcludedBaselineItemzCount",
										"{{02_02_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_1_BaselineHeirarchyId\") + \"2/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"    });\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_02_BaselineHierarchy_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_02_BaselineHierarchy_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_02_BaselineHierarchy_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_02_BaselineHierarchy_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"    });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_02_BaselineHierarchy_3_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_02_BaselineHierarchy_3_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_1_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_1_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_02_BaselineHierarchy_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_02_BaselineHierarchy_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"    });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_02_BaselineHierarchy_1_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_02_BaselineHierarchy_1_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_1_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_1_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_1_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_02_BaselineHierarchy_1_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_02_BaselineHierarchy_1_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_1_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_02_BaselineHierarchy_1_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_02_BaselineHierarchy_1_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_2_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_02_BaselineHierarchy_2_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_02_BaselineHierarchy_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_02_BaselineHierarchy_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_02_BaselineHierarchy_2_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_02_BaselineHierarchy_2_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_02_BaselineHierarchy_2_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_02_BaselineHierarchy_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_02_BaselineHierarchy_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 2 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_02_BaselineHierarchy_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_02_BaselineHierarchy_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 3 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_02_BaselineHierarchy_3_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_02_BaselineHierarchy_3_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 1.1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_02_BaselineHierarchy_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_02_BaselineHierarchy_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 1.1.1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_02_BaselineHierarchy_1_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_02_BaselineHierarchy_1_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 1.2 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_02_BaselineHierarchy_1_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_02_BaselineHierarchy_1_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 1.2.1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_02_BaselineHierarchy_1_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_02_BaselineHierarchy_1_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 2.1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_02_BaselineHierarchy_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_02_BaselineHierarchy_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 2.1.1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_02_BaselineHierarchy_2_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_02_BaselineHierarchy_2_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz Count by BaselineId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 9 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzCount/{{02_02_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzCount",
										"{{02_02_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{02_02_BaselineHierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{02_02_BaselineHierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "02_03 FirstExcludeParentAndThenIncludeChildBaselineItemz",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"02_03_BaselineHierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{02_03_BaselineHierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{02_03_BaselineHierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{02_03_BaselineHierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{02_03_BaselineHierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType P1T1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{02_03_BaselineHierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{02_03_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{02_03_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{02_03_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{02_03_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 3 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_P1T1_3rdItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 3\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{02_03_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{02_03_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{02_03_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{02_03_BaselineHierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{02_03_BaselineHierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{02_03_BaselineHierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{02_03_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{02_03_BaselineHierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{02_03_BaselineHierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{02_03_BaselineHierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_P1T1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{02_03_BaselineHierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{02_03_BaselineHierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_P1T1_2_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{02_03_BaselineHierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{02_03_BaselineHierarchy_P1T1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST 1st Baseline by ProjectId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"if (pm.response.code < 300 && pm.response.code > 199)",
											"{",
											"    var jsonData = pm.response.json();",
											"    var tempNewBaselineid = jsonData[\"id\"];",
											"    pm.collectionVariables.set(\"02_03_BaselineHierarchy_1stBaselineId\",tempNewBaselineid);",
											"    ",
											"    pm.test(\"Status code is 201\", function () {",
											"        pm.response.to.have.status(201);",
											"    });",
											"}",
											"else{",
											"    pm.test(\"Status code is 409\", function () {",
											"        pm.response.to.have.status(409);",
											"    });",
											"    pm.collectionVariables.set(\"02_03_BaselineHierarchy_1stBaselineName\",\"\");",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_1stBaselineName\", \"New Baseline - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"02_03_BaselineHierarchy_1stBaselineName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"projectId\": \"{{02_03_BaselineHierarchy_1stProjectId}}\",\r\n    \"name\": \"{{02_03_BaselineHierarchy_1stBaselineName}}\",\r\n    \"description\": \"This is Description for {{02_03_BaselineHierarchy_1stBaselineName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Baselines",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Baseline\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_03_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_03_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_03_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz Count by BaselineId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 9 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzCount/{{02_03_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzCount",
										"{{02_03_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET BaselineItemzType 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_1stBaselineItemzType\",tempId);\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_2ndBaselineItemzType\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemzType is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(2)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzTypes/{{02_03_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzTypes",
										"{{02_03_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_03_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_03_BaselineHierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_2_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_03_BaselineHierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_03_BaselineHierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_3_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_03_BaselineHierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_03_BaselineHierarchy_P1T1_3rdItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_03_BaselineHierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_03_BaselineHierarchy_P1T1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_1_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_03_BaselineHierarchy_P1T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_03_BaselineHierarchy_P1T1_1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_1_2_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_03_BaselineHierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_03_BaselineHierarchy_P1T1_1_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_1_2_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_03_BaselineHierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_03_BaselineHierarchy_P1T1_1_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_2_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_03_BaselineHierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_03_BaselineHierarchy_P1T1_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_2_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{02_03_BaselineHierarchy_P1T1_2_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{02_03_BaselineHierarchy_P1T1_2_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Count of Included Baseline Itemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify Included BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 9 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetIncludedBaselineItemzCount/{{02_03_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetIncludedBaselineItemzCount",
										"{{02_03_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Count of Excluded Baseline Itemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify Excluded BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 0 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetExcludedBaselineItemzCount/{{02_03_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetExcludedBaselineItemzCount",
										"{{02_03_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Exclude BaselineItemzType 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// pm.test(\"Status code is either 200, 201 or 204\", function () {\r",
											"//     pm.expect(pm.response.code).to.be.oneOf([200,201,204]);\r",
											"// });\r",
											"\r",
											"pm.test(\"Status code is either 400 or 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400,404]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"shouldBeIncluded\": false,\r\n  \"baselineId\": \"{{02_03_BaselineHierarchy_1stBaselineId}}\",\r\n  \"baselineItemzIds\": [\r\n    \"{{02_03_BaselineHierarchy_1stBaselineItemzType}}\"\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz"
									]
								}
							},
							"response": []
						},
						{
							"name": "Exclude BaselineItemzType 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// pm.test(\"Status code is either 200, 201 or 204\", function () {\r",
											"//     pm.expect(pm.response.code).to.be.oneOf([200,201,204]);\r",
											"// });\r",
											"\r",
											"pm.test(\"Status code is either 400 or 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400,404]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"shouldBeIncluded\": false,\r\n  \"baselineId\": \"{{02_03_BaselineHierarchy_1stBaselineId}}\",\r\n  \"baselineItemzIds\": [\r\n    \"{{02_03_BaselineHierarchy_2ndBaselineItemzType}}\"\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz"
									]
								}
							},
							"response": []
						},
						{
							"name": "Exclude 1st BaselineItemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200, 201 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"shouldBeIncluded\": false,\r\n  \"baselineId\": \"{{02_03_BaselineHierarchy_1stBaselineId}}\",\r\n  \"baselineItemzIds\": [\r\n    \"{{02_03_BaselineHierarchy_1_BaselineItemzId}}\"\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz"
									]
								}
							},
							"response": []
						},
						{
							"name": "Include 1.2.1 BaselineItemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 400 or 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400,404]);\r",
											"});\r",
											"\r",
											"// pm.test(\"Status code is either 200, 201 or 204\", function () {\r",
											"//     pm.expect(pm.response.code).to.be.oneOf([200,201,204]);\r",
											"// });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"shouldBeIncluded\": true,\r\n  \"baselineId\": \"{{02_03_BaselineHierarchy_1stBaselineId}}\",\r\n  \"baselineItemzIds\": [\r\n    \"{{02_03_BaselineHierarchy_1_2_1_BaselineItemzId}}\"\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz"
									]
								}
							},
							"response": []
						},
						{
							"name": "Include 1.2.1 ! 1.2 !  1 BaselineItemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// pm.test(\"Status code is either 400 or 404\", function () {\r",
											"//     pm.expect(pm.response.code).to.be.oneOf([400,404]);\r",
											"// });\r",
											"\r",
											"pm.test(\"Status code is either 200, 201 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,204]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"shouldBeIncluded\": true,\r\n  \"baselineId\": \"{{02_03_BaselineHierarchy_1stBaselineId}}\",\r\n  \"baselineItemzIds\": [\r\n    \"{{02_03_BaselineHierarchy_1_2_1_BaselineItemzId}}\",\r\n    \"{{02_03_BaselineHierarchy_1_2_BaselineItemzId}}\",\r\n    \"{{02_03_BaselineHierarchy_1_BaselineItemzId}}\"\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz"
									]
								}
							},
							"response": []
						},
						{
							"name": "Exclude 1.2.1 ! 1.2 !  1 BaselineItemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// pm.test(\"Status code is either 400 or 404\", function () {\r",
											"//     pm.expect(pm.response.code).to.be.oneOf([400,404]);\r",
											"// });\r",
											"\r",
											"pm.test(\"Status code is either 200, 201 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201,204]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"shouldBeIncluded\": false,\r\n  \"baselineId\": \"{{02_03_BaselineHierarchy_1stBaselineId}}\",\r\n  \"baselineItemzIds\": [\r\n    \"{{02_03_BaselineHierarchy_1_2_1_BaselineItemzId}}\",\r\n    \"{{02_03_BaselineHierarchy_1_2_BaselineItemzId}}\",\r\n    \"{{02_03_BaselineHierarchy_1_BaselineItemzId}}\"\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Count of Included Baseline Itemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify Included BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 9 - 5 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetIncludedBaselineItemzCount/{{02_03_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetIncludedBaselineItemzCount",
										"{{02_03_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Count of Excluded Baseline Itemz",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify Excluded BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 0 + 5)\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetExcludedBaselineItemzCount/{{02_03_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetExcludedBaselineItemzCount",
										"{{02_03_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_03_BaselineHierarchy_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_03_BaselineHierarchy_1_BaselineHeirarchyId\") + \"2/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"    });\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_03_BaselineHierarchy_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_03_BaselineHierarchy_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_03_BaselineHierarchy_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_03_BaselineHierarchy_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_03_BaselineHierarchy_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_03_BaselineHierarchy_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"    });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_03_BaselineHierarchy_3_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_03_BaselineHierarchy_3_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_03_BaselineHierarchy_1_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_03_BaselineHierarchy_1_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_03_BaselineHierarchy_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_03_BaselineHierarchy_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_3_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"    });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_03_BaselineHierarchy_1_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_03_BaselineHierarchy_1_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_1_2_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_03_BaselineHierarchy_1_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_03_BaselineHierarchy_1_2_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_03_BaselineHierarchy_1_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_03_BaselineHierarchy_1_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_1_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_03_BaselineHierarchy_1_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_03_BaselineHierarchy_1_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_2_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(5);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_03_BaselineHierarchy_2_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"    pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_03_BaselineHierarchy_2_1_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_03_BaselineHierarchy_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_03_BaselineHierarchy_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for BaselineItemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"02_03_BaselineHierarchy_2_1_1_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"BaselineItemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify BaselineItemz Included Value\", () => {\r",
											"    pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"    });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{02_03_BaselineHierarchy_2_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{02_03_BaselineHierarchy_2_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_03_BaselineHierarchy_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_03_BaselineHierarchy_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 2 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_03_BaselineHierarchy_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_03_BaselineHierarchy_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 3 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_03_BaselineHierarchy_3_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_03_BaselineHierarchy_3_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 1.1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_03_BaselineHierarchy_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_03_BaselineHierarchy_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 1.1.1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_03_BaselineHierarchy_1_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_03_BaselineHierarchy_1_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 1.2 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_03_BaselineHierarchy_1_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_03_BaselineHierarchy_1_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 1.2.1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(false)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_03_BaselineHierarchy_1_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_03_BaselineHierarchy_1_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 2.1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_03_BaselineHierarchy_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_03_BaselineHierarchy_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz 2.1.1 Details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"   pm.test(\"Verify that BaselineItemz Included Value \" , () => {\r",
											"        pm.expect(jsonData[\"isIncluded\"]).to.be.eq(true)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/{{02_03_BaselineHierarchy_2_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"{{02_03_BaselineHierarchy_2_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz Count by BaselineId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 9 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzCount/{{02_03_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzCount",
										"{{02_03_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{02_03_BaselineHierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{02_03_BaselineHierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "0003 BaselineHierarchyWithTraces",
			"item": [
				{
					"name": "03_01 CreateBaselineByProjectIdWithTraces",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"03_01_BaselineHierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{03_01_BaselineHierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{03_01_BaselineHierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{03_01_BaselineHierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{03_01_BaselineHierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType P1T1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{03_01_BaselineHierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{03_01_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{03_01_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{03_01_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{03_01_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 3 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_P1T1_3rdItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 3\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{03_01_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{03_01_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{03_01_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{03_01_BaselineHierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{03_01_BaselineHierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{03_01_BaselineHierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{03_01_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{03_01_BaselineHierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{03_01_BaselineHierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{03_01_BaselineHierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_P1T1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{03_01_BaselineHierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{03_01_BaselineHierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_P1T1_2_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{03_01_BaselineHierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{03_01_BaselineHierarchy_P1T1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "BulkCreate3Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
											"});",
											"",
											"// PURPOSE here is to compare that request body JSON",
											"// is the same as response body JSON",
											"// because we expect Establish Trace Itemz endpoint",
											"// to response back with the same JSON",
											"",
											"// var reqBody = JSON.parse(pm.request.data);",
											"// var resBody = pm.response.json();",
											"",
											"// pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
											"//     pm.expect(reqBody).to.eql(resBody);",
											"// });",
											"",
											"var reqBody = JSON.parse(request.data);",
											"var resBody = pm.response.json();",
											"",
											"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
											"    pm.expect(reqBody).to.eql(resBody);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_01_BaselineHierarchy_P1T1_1stItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_01_BaselineHierarchy_P1T1_3rdItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_01_BaselineHierarchy_P1T1_1_1_ItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_01_BaselineHierarchy_P1T1_2_1_ItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_01_BaselineHierarchy_P1T1_1_2_1_ItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_01_BaselineHierarchy_P1T1_2_1_1_ItemzId}}\"\r\n    }\r\n]\r\n\r\n// this is where it ends"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTrace/CreateOrVerifyItemzTraceCollection",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTrace",
										"CreateOrVerifyItemzTraceCollection"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Itemz 1 to Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{03_01_BaselineHierarchy_P1T1_1stItemzId}}?TargetId={{03_01_BaselineHierarchy_P1PL_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{03_01_BaselineHierarchy_P1T1_1stItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{03_01_BaselineHierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST 1st Baseline by ProjectId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"if (pm.response.code < 300 && pm.response.code > 199)",
											"{",
											"    var jsonData = pm.response.json();",
											"    var tempNewBaselineid = jsonData[\"id\"];",
											"    pm.collectionVariables.set(\"03_01_BaselineHierarchy_1stBaselineId\",tempNewBaselineid);",
											"    ",
											"    pm.test(\"Status code is 201\", function () {",
											"        pm.response.to.have.status(201);",
											"    });",
											"}",
											"else{",
											"    pm.test(\"Status code is 409\", function () {",
											"        pm.response.to.have.status(409);",
											"    });",
											"    pm.collectionVariables.set(\"03_01_BaselineHierarchy_1stBaselineName\",\"\");",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_1stBaselineName\", \"New Baseline - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"03_01_BaselineHierarchy_1stBaselineName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"projectId\": \"{{03_01_BaselineHierarchy_1stProjectId}}\",\r\n    \"name\": \"{{03_01_BaselineHierarchy_1stBaselineName}}\",\r\n    \"description\": \"This is Description for {{03_01_BaselineHierarchy_1stBaselineName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Baselines",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Baseline\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_01_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_01_BaselineHierarchy_1stBaseline_BaselineHeirarchyId\") + \"2/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{03_01_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{03_01_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz Count by BaselineId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 9 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzCount/{{03_01_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzCount",
										"{{03_01_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_01_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_01_BaselineHierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_2_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_01_BaselineHierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_01_BaselineHierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 3 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_3_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_01_BaselineHierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_01_BaselineHierarchy_P1T1_3rdItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.1 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_01_BaselineHierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_01_BaselineHierarchy_P1T1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.1.1 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_1_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_01_BaselineHierarchy_P1T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_01_BaselineHierarchy_P1T1_1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.2 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_1_2_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_01_BaselineHierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_01_BaselineHierarchy_P1T1_1_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 1.2.1 ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_1_2_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_01_BaselineHierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_01_BaselineHierarchy_P1T1_1_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_2_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_01_BaselineHierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_01_BaselineHierarchy_P1T1_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_01_BaselineHierarchy_2_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_01_BaselineHierarchy_P1T1_2_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_01_BaselineHierarchy_P1T1_2_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET BaselineItemz 1 Traces MORE LIKE THIS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 1 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(1);\r",
											"});\r",
											"\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempBaselineItemzId_01 = jsonData.baselineItemz.childBaselineItemz[0].baselineItemzID;\r",
											"pm.test(\"Verify 1st Child ID\", function() {\r",
											"    pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"        [\r",
											"            pm.variables.get(\"03_01_BaselineHierarchy_3_BaselineItemzId\")\r",
											"        ]\r",
											"        )\r",
											"});\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_01_BaselineHierarchy_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_01_BaselineHierarchy_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET BaselineItemz 2 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"\r",
											"// var jsonData = pm.response.json();\r",
											"// var tempBaselineItemzId_01 = jsonData.baselineItemz.childBaselineItemz[0].baselineItemzID;\r",
											"// pm.test(\"Verify 1st Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"\")\r",
											"//         ]\r",
											"//         )\r",
											"// });\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_01_BaselineHierarchy_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_01_BaselineHierarchy_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET BaselineItemz 3 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 1 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempBaselineItemzId_01 = jsonData.baselineItemz.parentBaselineItemz[0].baselineItemzID;\r",
											"pm.test(\"Verify 1st Parent ID\", function() {\r",
											"    pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"        [\r",
											"            pm.variables.get(\"03_01_BaselineHierarchy_1_BaselineItemzId\")\r",
											"        ]\r",
											"        )\r",
											"});\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_01_BaselineHierarchy_3_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_01_BaselineHierarchy_3_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET BaselineItemz 1.1 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 1 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(1);\r",
											"});\r",
											"\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempBaselineItemzId_01 = jsonData.baselineItemz.childBaselineItemz[0].baselineItemzID;\r",
											"pm.test(\"Verify 1st Child ID\", function() {\r",
											"    pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"        [\r",
											"            pm.variables.get(\"03_01_BaselineHierarchy_2_1_BaselineItemzId\")\r",
											"        ]\r",
											"        )\r",
											"});\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_01_BaselineHierarchy_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_01_BaselineHierarchy_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET BaselineItemz 1.1.1 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"\r",
											"// var jsonData = pm.response.json();\r",
											"// var tempBaselineItemzId_01 = jsonData.baselineItemz.childBaselineItemz[0].baselineItemzID;\r",
											"// pm.test(\"Verify 1st Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"\")\r",
											"//         ]\r",
											"//         )\r",
											"// });\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_01_BaselineHierarchy_1_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_01_BaselineHierarchy_1_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET BaselineItemz 1.2 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"\r",
											"// var jsonData = pm.response.json();\r",
											"// var tempBaselineItemzId_01 = jsonData.baselineItemz.childBaselineItemz[0].baselineItemzID;\r",
											"// pm.test(\"Verify 1st Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"03_01_BaselineHierarchy_2_1_1_BaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_01_BaselineHierarchy_1_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_01_BaselineHierarchy_1_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET BaselineItemz 1.2.1 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 1 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(1);\r",
											"});\r",
											"\r",
											"\r",
											"// var jsonData = pm.response.json();\r",
											"// var tempBaselineItemzId_01 = jsonData.baselineItemz.childBaselineItemz[0].baselineItemzID;\r",
											"// pm.test(\"Verify 1st Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"03_01_BaselineHierarchy_2_1_1_BaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_01_BaselineHierarchy_1_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_01_BaselineHierarchy_1_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET BaselineItemz 2.1 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 1 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempBaselineItemzId_01 = jsonData.baselineItemz.parentBaselineItemz[0].baselineItemzID;\r",
											"pm.test(\"Verify 1st Parent ID\", function() {\r",
											"    pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"        [\r",
											"            pm.variables.get(\"03_01_BaselineHierarchy_1_1_BaselineItemzId\")\r",
											"        ]\r",
											"        )\r",
											"});\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_01_BaselineHierarchy_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_01_BaselineHierarchy_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET BaselineItemz 2.1.1 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 1 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempBaselineItemzId_01 = jsonData.baselineItemz.parentBaselineItemz[0].baselineItemzID;\r",
											"pm.test(\"Verify 1st Parent ID\", function() {\r",
											"    pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"        [\r",
											"            pm.variables.get(\"03_01_BaselineHierarchy_1_2_1_BaselineItemzId\")\r",
											"        ]\r",
											"        )\r",
											"});\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_01_BaselineHierarchy_2_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_01_BaselineHierarchy_2_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz Trace Count by BaselineId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 3 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzTraceCount/{{03_01_BaselineHierarchy_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzTraceCount",
										"{{03_01_BaselineHierarchy_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{03_01_BaselineHierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{03_01_BaselineHierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "03_02 TracesBetweenTwoProjects",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"03_02_BaselineHierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{03_02_BaselineHierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{03_02_BaselineHierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{03_02_BaselineHierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{03_02_BaselineHierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType P1T1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{03_02_BaselineHierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"P1T1 Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{03_02_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{03_02_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"P1T1 Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{03_02_BaselineHierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{03_02_BaselineHierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"P1T1 SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{03_02_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{03_02_BaselineHierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"P1T1 SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{03_02_BaselineHierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{03_02_BaselineHierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"P1T1 SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{03_02_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{03_02_BaselineHierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"P1T1 SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{03_02_BaselineHierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{03_02_BaselineHierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1T1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"P1T1 SINGLE Itemz 2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{03_02_BaselineHierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{03_02_BaselineHierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1T1_2_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"P1T1 SINGLE Itemz 2.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{03_02_BaselineHierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{03_02_BaselineHierarchy_P1T1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "BulkCreate3Traces within P1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
											"});",
											"",
											"// PURPOSE here is to compare that request body JSON",
											"// is the same as response body JSON",
											"// because we expect Establish Trace Itemz endpoint",
											"// to response back with the same JSON",
											"",
											"var reqBody = JSON.parse(request.data);",
											"var resBody = pm.response.json();",
											"",
											"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
											"    pm.expect(reqBody).to.eql(resBody);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_02_BaselineHierarchy_P1T1_1stItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_02_BaselineHierarchy_P1T1_2ndItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_02_BaselineHierarchy_P1T1_1_1_ItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_02_BaselineHierarchy_P1T1_2_1_ItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_02_BaselineHierarchy_P1T1_1_2_1_ItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_02_BaselineHierarchy_P1T1_2_1_1_ItemzId}}\"\r\n    }\r\n]\r\n\r\n// this is where it ends"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTrace/CreateOrVerifyItemzTraceCollection",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTrace",
										"CreateOrVerifyItemzTraceCollection"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Project 2nd",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_2ndProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_2ndProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"03_02_BaselineHierarchy_2ndProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{03_02_BaselineHierarchy_2ndProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{03_02_BaselineHierarchy_2ndProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 2nd Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{03_02_BaselineHierarchy_2ndProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{03_02_BaselineHierarchy_2ndProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P2T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType P2T1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{03_02_BaselineHierarchy_2ndProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P2T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"P2T1 Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{03_02_BaselineHierarchy_P2T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{03_02_BaselineHierarchy_P2T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P2T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"P2T1 Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{03_02_BaselineHierarchy_P2T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{03_02_BaselineHierarchy_P2T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST P2T1 New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"P2T1 SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{03_02_BaselineHierarchy_P2T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{03_02_BaselineHierarchy_P2T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST P2T1 New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"P2T1 SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{03_02_BaselineHierarchy_P2T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{03_02_BaselineHierarchy_P2T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST P2T1 New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"P2T1 SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{03_02_BaselineHierarchy_P2T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{03_02_BaselineHierarchy_P2T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST P2T1  New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"P2T1 SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{03_02_BaselineHierarchy_P2T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{03_02_BaselineHierarchy_P2T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST P2T1 New Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2T1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"P2T1 SINGLE Itemz 2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{03_02_BaselineHierarchy_P2T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{03_02_BaselineHierarchy_P2T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST P2T1 New Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2T1_2_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"P2T1 SINGLE Itemz 2.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{03_02_BaselineHierarchy_P2T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{03_02_BaselineHierarchy_P2T1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "BulkCreate3Traces within P2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
											"});",
											"",
											"// PURPOSE here is to compare that request body JSON",
											"// is the same as response body JSON",
											"// because we expect Establish Trace Itemz endpoint",
											"// to response back with the same JSON",
											"",
											"var reqBody = JSON.parse(request.data);",
											"var resBody = pm.response.json();",
											"",
											"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
											"    pm.expect(reqBody).to.eql(resBody);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_02_BaselineHierarchy_P2T1_1stItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_02_BaselineHierarchy_P2T1_2ndItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_02_BaselineHierarchy_P2T1_1_1_ItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_02_BaselineHierarchy_P2T1_2_1_ItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_02_BaselineHierarchy_P2T1_1_2_1_ItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_02_BaselineHierarchy_P2T1_2_1_1_ItemzId}}\"\r\n    }\r\n]\r\n\r\n// this is where it ends"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTrace/CreateOrVerifyItemzTraceCollection",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTrace",
										"CreateOrVerifyItemzTraceCollection"
									]
								}
							},
							"response": []
						},
						{
							"name": "BulkCreate4Traces between P1 and P2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
											"});",
											"",
											"// PURPOSE here is to compare that request body JSON",
											"// is the same as response body JSON",
											"// because we expect Establish Trace Itemz endpoint",
											"// to response back with the same JSON",
											"",
											"var reqBody = JSON.parse(request.data);",
											"var resBody = pm.response.json();",
											"",
											"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
											"    pm.expect(reqBody).to.eql(resBody);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_02_BaselineHierarchy_P1T1_1stItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_02_BaselineHierarchy_P2T1_1stItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_02_BaselineHierarchy_P1T1_2ndItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_02_BaselineHierarchy_P2T1_2ndItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_02_BaselineHierarchy_P1T1_1_1_ItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_02_BaselineHierarchy_P2T1_1_1_ItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_02_BaselineHierarchy_P1T1_1_2_1_ItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_02_BaselineHierarchy_P2T1_1_2_1_ItemzId}}\"\r\n    }\r\n]\r\n\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTrace/CreateOrVerifyItemzTraceCollection",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTrace",
										"CreateOrVerifyItemzTraceCollection"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P2T1 Itemz 1 to Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{03_02_BaselineHierarchy_P2T1_1stItemzId}}?TargetId={{03_02_BaselineHierarchy_P2PL_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{03_02_BaselineHierarchy_P2T1_1stItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{03_02_BaselineHierarchy_P2PL_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST 1st Baseline by Project P1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"if (pm.response.code < 300 && pm.response.code > 199)",
											"{",
											"    var jsonData = pm.response.json();",
											"    var tempNewBaselineid = jsonData[\"id\"];",
											"    pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1_1stBaselineId\",tempNewBaselineid);",
											"    ",
											"    pm.test(\"Status code is 201\", function () {",
											"        pm.response.to.have.status(201);",
											"    });",
											"}",
											"else{",
											"    pm.test(\"Status code is 409\", function () {",
											"        pm.response.to.have.status(409);",
											"    });",
											"    pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1_1stBaselineName\",\"\");",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1_1stBaselineName\", \"New Baseline - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"03_02_BaselineHierarchy_P1_1stBaselineName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"projectId\": \"{{03_02_BaselineHierarchy_1stProjectId}}\",\r\n    \"name\": \"{{03_02_BaselineHierarchy_P1_1stBaselineName}}\",\r\n    \"description\": \"This is Description for {{03_02_BaselineHierarchy_P1_1stBaselineName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Baselines",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for P1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1_1stBaseline_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Baseline\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_02_BaselineHierarchy_P1_1stBaseline_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_02_BaselineHierarchy_P1_1stBaseline_BaselineHeirarchyId\") + \"2/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{03_02_BaselineHierarchy_P1_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{03_02_BaselineHierarchy_P1_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P1 Baseline Itemz Count by BaselineId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 8 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzCount/{{03_02_BaselineHierarchy_P1_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzCount",
										"{{03_02_BaselineHierarchy_P1_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by P1 Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_02_BaselineHierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_02_BaselineHierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by P1 Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1_2_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_02_BaselineHierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_02_BaselineHierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by P1 Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_02_BaselineHierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_02_BaselineHierarchy_P1T1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by P1 Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1_1_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_02_BaselineHierarchy_P1T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_02_BaselineHierarchy_P1T1_1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by P1 Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1_1_2_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_02_BaselineHierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_02_BaselineHierarchy_P1T1_1_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by P1 Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1_1_2_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_02_BaselineHierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_02_BaselineHierarchy_P1T1_1_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by P1 Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1_2_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_02_BaselineHierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_02_BaselineHierarchy_P1T1_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by P1 Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P1_2_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_02_BaselineHierarchy_P1T1_2_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_02_BaselineHierarchy_P1T1_2_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P1 BaselineItemz 1 Traces MORE LIKE THIS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 1 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(1);\r",
											"});\r",
											"\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempBaselineItemzId_01 = jsonData.baselineItemz.childBaselineItemz[0].baselineItemzID;\r",
											"pm.test(\"Verify 1st Child ID\", function() {\r",
											"    pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"        [\r",
											"            pm.variables.get(\"03_02_BaselineHierarchy_P1_2_BaselineItemzId\")\r",
											"        ]\r",
											"        )\r",
											"});\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_02_BaselineHierarchy_P1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_02_BaselineHierarchy_P1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P1 BaselineItemz 2 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 1 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempBaselineItemzId_01 = jsonData.baselineItemz.parentBaselineItemz[0].baselineItemzID;\r",
											"pm.test(\"Verify 1st Parent ID\", function() {\r",
											"    pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"        [\r",
											"            pm.variables.get(\"03_02_BaselineHierarchy_P1_1_BaselineItemzId\")\r",
											"        ]\r",
											"        )\r",
											"});\r",
											"\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_02_BaselineHierarchy_P1_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_02_BaselineHierarchy_P1_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P1 BaselineItemz 1.1 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 1 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(1);\r",
											"});\r",
											"\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempBaselineItemzId_01 = jsonData.baselineItemz.childBaselineItemz[0].baselineItemzID;\r",
											"pm.test(\"Verify 1st Child ID\", function() {\r",
											"    pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"        [\r",
											"            pm.variables.get(\"03_02_BaselineHierarchy_P1_2_1_BaselineItemzId\")\r",
											"        ]\r",
											"        )\r",
											"});\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_02_BaselineHierarchy_P1_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_02_BaselineHierarchy_P1_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P1 BaselineItemz 1.1.1 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"\r",
											"// var jsonData = pm.response.json();\r",
											"// var tempBaselineItemzId_01 = jsonData.baselineItemz.childBaselineItemz[0].baselineItemzID;\r",
											"// pm.test(\"Verify 1st Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"03_02_BaselineHierarchy_P1_2_BaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_02_BaselineHierarchy_P1_1_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_02_BaselineHierarchy_P1_1_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P1 BaselineItemz 1.2 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"\r",
											"// var jsonData = pm.response.json();\r",
											"// var tempBaselineItemzId_01 = jsonData.baselineItemz.parentBaselineItemz[0].baselineItemzID;\r",
											"// pm.test(\"Verify 1st Parent ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"03_02_BaselineHierarchy_P1_1_1_BaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_02_BaselineHierarchy_P1_1_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_02_BaselineHierarchy_P1_1_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P1 BaselineItemz 1.2.1 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 1 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(1);\r",
											"});\r",
											"\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempBaselineItemzId_01 = jsonData.baselineItemz.childBaselineItemz[0].baselineItemzID;\r",
											"pm.test(\"Verify 1st Child ID\", function() {\r",
											"    pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"        [\r",
											"            pm.variables.get(\"03_02_BaselineHierarchy_P1_2_1_1_BaselineItemzId\")\r",
											"        ]\r",
											"        )\r",
											"});\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_02_BaselineHierarchy_P1_1_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_02_BaselineHierarchy_P1_1_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P1 BaselineItemz 2.1 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 1 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempBaselineItemzId_01 = jsonData.baselineItemz.parentBaselineItemz[0].baselineItemzID;\r",
											"pm.test(\"Verify 1st Parent ID\", function() {\r",
											"    pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"        [\r",
											"            pm.variables.get(\"03_02_BaselineHierarchy_P1_1_1_BaselineItemzId\")\r",
											"        ]\r",
											"        )\r",
											"});\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_02_BaselineHierarchy_P1_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_02_BaselineHierarchy_P1_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P1 BaselineItemz 2.1.1 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 1 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempBaselineItemzId_01 = jsonData.baselineItemz.parentBaselineItemz[0].baselineItemzID;\r",
											"pm.test(\"Verify 1st Parent ID\", function() {\r",
											"    pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"        [\r",
											"            pm.variables.get(\"03_02_BaselineHierarchy_P1_1_2_1_BaselineItemzId\")\r",
											"        ]\r",
											"        )\r",
											"});\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_02_BaselineHierarchy_P1_2_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_02_BaselineHierarchy_P1_2_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P1 Baseline Itemz Trace Count by BaselineId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 3 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzTraceCount/{{03_02_BaselineHierarchy_P1_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzTraceCount",
										"{{03_02_BaselineHierarchy_P1_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST 1st Baseline by Project P2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"if (pm.response.code < 300 && pm.response.code > 199)",
											"{",
											"    var jsonData = pm.response.json();",
											"    var tempNewBaselineid = jsonData[\"id\"];",
											"    pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2_1stBaselineId\",tempNewBaselineid);",
											"    ",
											"    pm.test(\"Status code is 201\", function () {",
											"        pm.response.to.have.status(201);",
											"    });",
											"}",
											"else{",
											"    pm.test(\"Status code is 409\", function () {",
											"        pm.response.to.have.status(409);",
											"    });",
											"    pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2_1stBaselineName\",\"\");",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2_1stBaselineName\", \"New Baseline - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"03_02_BaselineHierarchy_P2_1stBaselineName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"projectId\": \"{{03_02_BaselineHierarchy_2ndProjectId}}\",\r\n    \"name\": \"{{03_02_BaselineHierarchy_P2_1stBaselineName}}\",\r\n    \"description\": \"This is Description for {{03_02_BaselineHierarchy_P2_1stBaselineName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Baselines",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Hierarchy ID for P2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2_1stBaseline_BaselineHeirarchyId\", jsonData[\"baselineHierarchyId\"]);\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Baseline\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_02_BaselineHierarchy_P2_1stBaseline_BaselineHeirarchyId\") + \"1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildBaselineHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildBaselineHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_02_BaselineHierarchy_P2_1stBaseline_BaselineHeirarchyId\") + \"2/\"); });\r",
											"\r",
											"pm.test(\"Verify that Hierarchy ID does not start with /999\", function () { \r",
											"    pm.expect(jsonData[\"baselineHierarchyId\"]).to.not.match(/^\\/999/g);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineHierarchy/{{03_02_BaselineHierarchy_P2_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineHierarchy",
										"{{03_02_BaselineHierarchy_P2_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P2 Baseline Itemz Count by BaselineId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 8 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzCount/{{03_02_BaselineHierarchy_P2_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzCount",
										"{{03_02_BaselineHierarchy_P2_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by P2 Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_02_BaselineHierarchy_P2T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_02_BaselineHierarchy_P2T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by P2 Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2_2_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_02_BaselineHierarchy_P2T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_02_BaselineHierarchy_P2T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by P2 Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_02_BaselineHierarchy_P2T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_02_BaselineHierarchy_P2T1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by P2 Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2_1_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_02_BaselineHierarchy_P2T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_02_BaselineHierarchy_P2T1_1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by P2 Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2_1_2_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_02_BaselineHierarchy_P2T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_02_BaselineHierarchy_P2T1_1_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by P2 Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2_1_2_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_02_BaselineHierarchy_P2T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_02_BaselineHierarchy_P2T1_1_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by P2 Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2_2_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_02_BaselineHierarchy_P2T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_02_BaselineHierarchy_P2T1_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Baseline Itemz by P2 Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"03_02_BaselineHierarchy_P2_2_1_1_BaselineItemzId\",tempId);\r",
											"\r",
											"   pm.test(\"Verify number of BaselineItemz is \" + jsonData.length , () => {\r",
											"        pm.expect(jsonData).to.be.an('array').that.has.lengthOf(1)\r",
											"        });\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemz/GetBaselineItemzs/{{03_02_BaselineHierarchy_P2T1_2_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemz",
										"GetBaselineItemzs",
										"{{03_02_BaselineHierarchy_P2T1_2_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P2 BaselineItemz 1 Traces MORE LIKE THIS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 1 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(1);\r",
											"});\r",
											"\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempBaselineItemzId_01 = jsonData.baselineItemz.childBaselineItemz[0].baselineItemzID;\r",
											"pm.test(\"Verify 1st Child ID\", function() {\r",
											"    pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"        [\r",
											"            pm.variables.get(\"03_02_BaselineHierarchy_P2_2_BaselineItemzId\")\r",
											"        ]\r",
											"        )\r",
											"});\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_02_BaselineHierarchy_P2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_02_BaselineHierarchy_P2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P2 BaselineItemz 2 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 1 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempBaselineItemzId_01 = jsonData.baselineItemz.parentBaselineItemz[0].baselineItemzID;\r",
											"pm.test(\"Verify 1st Parent ID\", function() {\r",
											"    pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"        [\r",
											"            pm.variables.get(\"03_02_BaselineHierarchy_P2_1_BaselineItemzId\")\r",
											"        ]\r",
											"        )\r",
											"});\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_02_BaselineHierarchy_P2_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_02_BaselineHierarchy_P2_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P2 BaselineItemz 1.1 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 1 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(1);\r",
											"});\r",
											"\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempBaselineItemzId_01 = jsonData.baselineItemz.childBaselineItemz[0].baselineItemzID;\r",
											"pm.test(\"Verify 1st Child ID\", function() {\r",
											"    pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"        [\r",
											"            pm.variables.get(\"03_02_BaselineHierarchy_P2_2_1_BaselineItemzId\")\r",
											"        ]\r",
											"        )\r",
											"});\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_02_BaselineHierarchy_P2_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_02_BaselineHierarchy_P2_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P2 BaselineItemz 1.1.1 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"\r",
											"// var jsonData = pm.response.json();\r",
											"// var tempBaselineItemzId_01 = jsonData.baselineItemz.childBaselineItemz[0].baselineItemzID;\r",
											"// pm.test(\"Verify 1st Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"03_02_BaselineHierarchy_P2_2_1_BaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_02_BaselineHierarchy_P2_1_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_02_BaselineHierarchy_P2_1_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P2 BaselineItemz 1.2 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"\r",
											"// var jsonData = pm.response.json();\r",
											"// var tempBaselineItemzId_01 = jsonData.baselineItemz.childBaselineItemz[0].baselineItemzID;\r",
											"// pm.test(\"Verify 1st Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"03_02_BaselineHierarchy_P2_2_1_BaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_02_BaselineHierarchy_P2_1_2_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_02_BaselineHierarchy_P2_1_2_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P2 BaselineItemz 1.2.1 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 1 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(1);\r",
											"});\r",
											"\r",
											"\r",
											" var jsonData = pm.response.json();\r",
											" var tempBaselineItemzId_01 = jsonData.baselineItemz.childBaselineItemz[0].baselineItemzID;\r",
											" pm.test(\"Verify 1st Child ID\", function() {\r",
											"     pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"         [\r",
											"             pm.variables.get(\"03_02_BaselineHierarchy_P2_2_1_1_BaselineItemzId\")\r",
											"         ]\r",
											"         )\r",
											" });\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_02_BaselineHierarchy_P2_1_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_02_BaselineHierarchy_P2_1_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P2 BaselineItemz 2.1 Traces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 1 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempBaselineItemzId_01 = jsonData.baselineItemz.parentBaselineItemz[0].baselineItemzID;\r",
											"pm.test(\"Verify 1st Parent ID\", function() {\r",
											"    pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"        [\r",
											"            pm.variables.get(\"03_02_BaselineHierarchy_P2_1_1_BaselineItemzId\")\r",
											"        ]\r",
											"        )\r",
											"});\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_02_BaselineHierarchy_P2_2_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_02_BaselineHierarchy_P2_2_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P2 BaselineItemz 2.1.1 Tracess",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 1 parent Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.parentBaselineItemz.count()).to.be.eq(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
											"    var body = JSON.parse(responseBody);\r",
											"    pm.expect(body.baselineItemz.childBaselineItemz.count()).to.be.eq(0);\r",
											"});\r",
											"\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempBaselineItemzId_01 = jsonData.baselineItemz.parentBaselineItemz[0].baselineItemzID;\r",
											"pm.test(\"Verify 1st Parent ID\", function() {\r",
											"    pm.expect(tempBaselineItemzId_01).is.oneOf(\r",
											"        [\r",
											"            pm.variables.get(\"03_02_BaselineHierarchy_P2_1_2_1_BaselineItemzId\")\r",
											"        ]\r",
											"        )\r",
											"});\r",
											"\r",
											"// var tempBaselineItemzId_02 = jsonData.baselineItemz.childBaselineItemz[1].baselineItemzID;\r",
											"// pm.test(\"Verify 2nd Child ID\", function() {\r",
											"//     pm.expect(tempBaselineItemzId_02).is.oneOf(\r",
											"//         [\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_6thBaselineItemzId\"),\r",
											"//             pm.variables.get(\"BaselineTraceScenario01_11thBaselineItemzId\")\r",
											"//         ]\r",
											"//         )\r",
											"// });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/BaselineItemzTrace/AllBaselineItemzTraces/{{03_02_BaselineHierarchy_P2_2_1_1_BaselineItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"BaselineItemzTrace",
										"AllBaselineItemzTraces",
										"{{03_02_BaselineHierarchy_P2_2_1_1_BaselineItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P2 Baseline Itemz Trace Count by BaselineId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"   pm.test(\"Verify BaselineItemz Count by BaselineId\", () => {\r",
											"        pm.expect(parseInt(pm.response.text())).to.eql( 3 )\r",
											"        });\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Baselines/GetBaselineItemzTraceCount/{{03_02_BaselineHierarchy_P2_1stBaselineId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Baselines",
										"GetBaselineItemzTraceCount",
										"{{03_02_BaselineHierarchy_P2_1stBaselineId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{03_02_BaselineHierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{03_02_BaselineHierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 2nd Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{03_02_BaselineHierarchy_2ndProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{03_02_BaselineHierarchy_2ndProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "01_01_BaselineHierarchy_1stBaseline_BaselineHeirarchyId",
			"value": ""
		}
	]
}