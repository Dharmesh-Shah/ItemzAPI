{
	"info": {
		"_postman_id": "e5acdffc-5ed9-4384-88b2-aefb0401d63b",
		"name": "Itemz.Hierarchy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36455815"
	},
	"item": [
		{
			"name": "0001 VerifyProjectCreateHierarchy",
			"item": [
				{
					"name": "GetLastProjectHierarchyID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"if (pm.response.code == 404)\r",
									"{\r",
									"    pm.collectionVariables.set(\"01_Hierarchy_LastProjectHierarchyID\",0);\r",
									"}\r",
									"else\r",
									"{\r",
									"    var tempNew1stItemzTypeId = pm.response.text();\r",
									"    pm.collectionVariables.set(\"01_Hierarchy_LastProjectHierarchyID\",Number(tempNew1stItemzTypeId.substr(\r",
									"        (tempNew1stItemzTypeId.indexOf(\"/\")+1) , \r",
									"        (tempNew1stItemzTypeId.indexOf(\"/\", (tempNew1stItemzTypeId.indexOf(\"/\")+1))\r",
									"            - (tempNew1stItemzTypeId.indexOf(\"/\")+1) ))));\r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Projects/GetLastProjectHierarchyID",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects",
								"GetLastProjectHierarchyID"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Project 1st",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData = pm.response.json();",
									"const tempNewProjectId = jsonData[\"id\"];",
									"pm.collectionVariables.set(\"01_Hierarchy_1stProjectId\",tempNewProjectId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"pm.collectionVariables.set(\"01_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
									"\r",
									"pm.variables.get(\"01_Hierarchy_1stProjectName\");\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{01_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{01_Hierarchy_1stProjectName}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST ItemzType 1st",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/**",
									" ",
									" pm.test(\"Status code is either 201 or 409\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
									"});",
									"",
									"**/",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzTypeId = jsonData[\"id\"];",
									"pm.collectionVariables.set(\"01_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{01_Hierarchy_1stProjectId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypes"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 1 to P1T1_ItemzType1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData[0].id;",
									"pm.collectionVariables.set(\"01_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{01_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypeItemzs",
								"{{01_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetLastProjectHierarchyID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// TODO: Get the Last Project HierarchyID Number only when response status is 200\r",
									"var tempNew1stItemzTypeId = pm.response.text();\r",
									"\r",
									"pm.test(\"Verify that expected HierarchyID for the last project is returned\", function () {\r",
									"    pm.expect(tempNew1stItemzTypeId).to.be.eql(\"\\\"/\" + (pm.collectionVariables.get('01_Hierarchy_LastProjectHierarchyID') + 1) + \"/\\\"\"); \r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"01_Hierarchy_LastProjectHierarchyID\",Number(tempNew1stItemzTypeId.substr(\r",
									"\t(tempNew1stItemzTypeId.indexOf(\"/\")+1) , \r",
									"\t(tempNew1stItemzTypeId.indexOf(\"/\", (tempNew1stItemzTypeId.indexOf(\"/\")+1))\r",
									"\t    - (tempNew1stItemzTypeId.indexOf(\"/\")+1) ))));\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Projects/GetLastProjectHierarchyID",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects",
								"GetLastProjectHierarchyID"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Project 2nd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData = pm.response.json();",
									"const tempNewProjectId = jsonData[\"id\"];",
									"pm.collectionVariables.set(\"01_Hierarchy_2ndProjectId\",tempNewProjectId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"pm.collectionVariables.set(\"01_Hierarchy_2ndProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
									"\r",
									"pm.variables.get(\"01_Hierarchy_2ndProjectName\");\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{01_Hierarchy_2ndProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{01_Hierarchy_2ndProjectName}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Project 3rd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData = pm.response.json();",
									"const tempNewProjectId = jsonData[\"id\"];",
									"pm.collectionVariables.set(\"01_Hierarchy_3rdProjectId\",tempNewProjectId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"pm.collectionVariables.set(\"01_Hierarchy_3rdProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
									"\r",
									"pm.variables.get(\"01_Hierarchy_3rdProjectName\");\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{01_Hierarchy_3rdProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{01_Hierarchy_3rdProjectName}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Project 4th",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData = pm.response.json();",
									"const tempNewProjectId = jsonData[\"id\"];",
									"pm.collectionVariables.set(\"01_Hierarchy_4thProjectId\",tempNewProjectId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"pm.collectionVariables.set(\"01_Hierarchy_4thProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
									"\r",
									"pm.variables.get(\"01_Hierarchy_4thProjectName\");\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{01_Hierarchy_4thProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{01_Hierarchy_4thProjectName}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetLastProjectHierarchyID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// TODO: Get the Last Project HierarchyID Number only when response status is 200\r",
									"var tempNew1stItemzTypeId = pm.response.text();\r",
									"\r",
									"pm.test(\"Verify that expected HierarchyID for the last project is returned\", function () {\r",
									"    pm.expect(tempNew1stItemzTypeId).to.be.eql(\"\\\"/\" + (pm.collectionVariables.get('01_Hierarchy_LastProjectHierarchyID') + 3) + \"/\\\"\"); \r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"01_Hierarchy_LastProjectHierarchyID\",Number(tempNew1stItemzTypeId.substr(\r",
									"\t(tempNew1stItemzTypeId.indexOf(\"/\")+1) , \r",
									"\t(tempNew1stItemzTypeId.indexOf(\"/\", (tempNew1stItemzTypeId.indexOf(\"/\")+1))\r",
									"\t    - (tempNew1stItemzTypeId.indexOf(\"/\")+1) ))));\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Projects/GetLastProjectHierarchyID",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects",
								"GetLastProjectHierarchyID"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE ItemzType by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypes/{{01_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypes",
								"{{01_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE 1st Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Projects/{{01_Hierarchy_1stProjectId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects",
								"{{01_Hierarchy_1stProjectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetLastProjectHierarchyID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// TODO: Get the Last Project HierarchyID Number only when response status is 200\r",
									"var tempNew1stItemzTypeId = pm.response.text();\r",
									"\r",
									"pm.test(\"Verify that expected HierarchyID for the last project is returned\", function () {\r",
									"    pm.expect(tempNew1stItemzTypeId).to.be.eql(\"\\\"/\" + (pm.collectionVariables.get('01_Hierarchy_LastProjectHierarchyID')) + \"/\\\"\"); \r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Projects/GetLastProjectHierarchyID",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects",
								"GetLastProjectHierarchyID"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE 4th Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Projects/{{01_Hierarchy_4thProjectId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects",
								"{{01_Hierarchy_4thProjectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetLastProjectHierarchyID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// TODO: Get the Last Project HierarchyID Number only when response status is 200\r",
									"var tempNew1stItemzTypeId = pm.response.text();\r",
									"\r",
									"pm.test(\"Verify that expected HierarchyID for the last project is returned\", function () {\r",
									"    pm.expect(tempNew1stItemzTypeId).to.be.eql(\"\\\"/\" + (pm.collectionVariables.get('01_Hierarchy_LastProjectHierarchyID') -1 ) + \"/\\\"\"); \r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"01_Hierarchy_LastProjectHierarchyID\",Number(tempNew1stItemzTypeId.substr(\r",
									"\t(tempNew1stItemzTypeId.indexOf(\"/\")+1) , \r",
									"\t(tempNew1stItemzTypeId.indexOf(\"/\", (tempNew1stItemzTypeId.indexOf(\"/\")+1))\r",
									"\t    - (tempNew1stItemzTypeId.indexOf(\"/\")+1) ))));\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Projects/GetLastProjectHierarchyID",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects",
								"GetLastProjectHierarchyID"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE 2nd Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Projects/{{01_Hierarchy_2ndProjectId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects",
								"{{01_Hierarchy_2ndProjectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE 3rd Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Projects/{{01_Hierarchy_3rdProjectId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects",
								"{{01_Hierarchy_3rdProjectId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "0002 VerifyItemzCreationHierarchy",
			"item": [
				{
					"name": "POST Project 1st",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData = pm.response.json();",
									"const tempNewProjectId = jsonData[\"id\"];",
									"pm.collectionVariables.set(\"02_Hierarchy_1stProjectId\",tempNewProjectId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"pm.collectionVariables.set(\"02_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
									"\r",
									"pm.variables.get(\"02_Hierarchy_1stProjectName\");\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{02_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{02_Hierarchy_1stProjectName}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HierarchyDetails by P1 and STORE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
									"pm.collectionVariables.set(\"02_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
									"\r",
									"pm.test(\"Verify Hierarchy Level\", function () {\r",
									"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
									"pm.test(\"Verify Hierarchy recordType\", function () {\r",
									"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
									"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
									"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Hierarchy/{{02_Hierarchy_1stProjectId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Hierarchy",
								"{{02_Hierarchy_1stProjectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST ItemzType 1st",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/**",
									" ",
									" pm.test(\"Status code is either 201 or 409\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
									"});",
									"",
									"**/",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzTypeId = jsonData[\"id\"];",
									"pm.collectionVariables.set(\"02_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{02_Hierarchy_1stProjectId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypes"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HierarchyDetails by P1T1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Verify Hierarchy level\", function () {\r",
									"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
									"\r",
									"pm.test(\"Verify Hierarchy recordType\", function () {\r",
									"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
									"\r",
									"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
									"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0) ;     });\r",
									"\r",
									"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
									"\r",
									"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
									"\r",
									"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Hierarchy/{{02_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Hierarchy",
								"{{02_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 1 to P1T1_ItemzType1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData[0].id;",
									"pm.collectionVariables.set(\"02_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{02_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypeItemzs",
								"{{02_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HierarchyDetails by P1T1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Verify Hierarchy level\", function () {\r",
									"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
									"\r",
									"pm.test(\"Verify Hierarchy recordType\", function () {\r",
									"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
									"\r",
									"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
									"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1) ;     });\r",
									"\r",
									"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
									"\r",
									"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
									"\r",
									"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Hierarchy/{{02_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Hierarchy",
								"{{02_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST 1st 100 Itemz Collection By ItemzType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"Name\": \"Item 6\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 7\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 8\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 9\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 10\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 11\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 12\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 13\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 14\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 15\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 16\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 17\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 18\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 19\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 20\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 21\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 22\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 23\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 24\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 25\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 26\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 27\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 28\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 29\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 30\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 31\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 32\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 33\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 34\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 35\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 36\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 37\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 38\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 39\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 40\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 41\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 42\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 43\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 44\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 45\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 46\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 47\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 48\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 49\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 50\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 51\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 52\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 53\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 54\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 55\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 56\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 57\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 58\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 59\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 60\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 61\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 62\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 63\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 64\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 65\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 66\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 67\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 68\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 69\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 70\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 71\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 72\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 73\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 74\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 75\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 76\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 77\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 78\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 79\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 80\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 81\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 82\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 83\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 84\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 85\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 86\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 87\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 88\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 89\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 90\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 91\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 92\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 93\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 94\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 95\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 96\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 97\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 98\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 99\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 100\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 101\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 102\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 103\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 104\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 105\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{02_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypeItemzs",
								"{{02_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HierarchyDetails by P1T1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Verify Hierarchy level\", function () {\r",
									"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
									"\r",
									"pm.test(\"Verify Hierarchy recordType\", function () {\r",
									"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
									"\r",
									"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
									"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1 + 100) ;     });\r",
									"\r",
									"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
									"\r",
									"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
									"\r",
									"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_Hierarchy_1stProject_HeirarchyId\") + \"2/101/\"); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Hierarchy/{{02_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Hierarchy",
								"{{02_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST New SINGLE Itemz",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:51087/api/Itemzs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HierarchyDetails by P1T1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Verify Hierarchy level\", function () {\r",
									"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
									"\r",
									"pm.test(\"Verify Hierarchy recordType\", function () {\r",
									"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
									"\r",
									"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
									"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1 + 100) ;     });\r",
									"\r",
									"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
									"\r",
									"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
									"\r",
									"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_Hierarchy_1stProject_HeirarchyId\") + \"2/101/\"); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Hierarchy/{{02_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Hierarchy",
								"{{02_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 1 to P1T1_ItemzType1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{02_Hierarchy_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{02_Hierarchy_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HierarchyDetails by P1T1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Verify Hierarchy level\", function () {\r",
									"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
									"\r",
									"pm.test(\"Verify Hierarchy recordType\", function () {\r",
									"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
									"\r",
									"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
									"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1 + 100 - 1 ) ;     });\r",
									"\r",
									"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
									"\r",
									"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_Hierarchy_1stProject_HeirarchyId\") + \"2/2/\"); });\r",
									"\r",
									"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"02_Hierarchy_1stProject_HeirarchyId\") + \"2/101/\"); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Hierarchy/{{02_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Hierarchy",
								"{{02_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE ItemzType by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypes/{{02_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypes",
								"{{02_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE 1st Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Projects/{{02_Hierarchy_1stProjectId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects",
								"{{02_Hierarchy_1stProjectId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "0003 VerifyItemzDeletionHierarchy",
			"item": [
				{
					"name": "POST Project 1st",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData = pm.response.json();",
									"const tempNewProjectId = jsonData[\"id\"];",
									"pm.collectionVariables.set(\"03_Hierarchy_1stProjectId\",tempNewProjectId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"pm.collectionVariables.set(\"03_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
									"\r",
									"pm.variables.get(\"03_Hierarchy_1stProjectName\");\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{03_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{03_Hierarchy_1stProjectName}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HierarchyDetails by P1 and STORE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
									"pm.collectionVariables.set(\"03_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
									"\r",
									"pm.test(\"Verify Hierarchy Level\", function () {\r",
									"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
									"pm.test(\"Verify Hierarchy recordType\", function () {\r",
									"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
									"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
									"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Hierarchy/{{03_Hierarchy_1stProjectId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Hierarchy",
								"{{03_Hierarchy_1stProjectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST ItemzType 1st",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/**",
									" ",
									" pm.test(\"Status code is either 201 or 409\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
									"});",
									"",
									"**/",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzTypeId = jsonData[\"id\"];",
									"pm.collectionVariables.set(\"03_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{03_Hierarchy_1stProjectId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypes"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HierarchyDetails by P1T1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Verify Hierarchy level\", function () {\r",
									"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
									"\r",
									"pm.test(\"Verify Hierarchy recordType\", function () {\r",
									"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
									"\r",
									"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
									"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0) ;     });\r",
									"\r",
									"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
									"\r",
									"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
									"\r",
									"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Hierarchy/{{03_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Hierarchy",
								"{{03_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 1 to P1T1_ItemzType1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData[0].id;",
									"pm.collectionVariables.set(\"03_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{03_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypeItemzs",
								"{{03_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HierarchyDetails by P1T1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Verify Hierarchy level\", function () {\r",
									"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
									"\r",
									"pm.test(\"Verify Hierarchy recordType\", function () {\r",
									"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
									"\r",
									"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
									"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1) ;     });\r",
									"\r",
									"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
									"\r",
									"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
									"\r",
									"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Hierarchy/{{03_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Hierarchy",
								"{{03_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST New SINGLE Itemz",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData.id;",
									"pm.collectionVariables.set(\"03_Hierarchy_P1T1_SINGLEITEMZ\",tempNew1stItemzId);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:51087/api/Itemzs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HierarchyDetails by P1T1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Verify Hierarchy level\", function () {\r",
									"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
									"\r",
									"pm.test(\"Verify Hierarchy recordType\", function () {\r",
									"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
									"\r",
									"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
									"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1) ;     });\r",
									"\r",
									"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
									"\r",
									"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
									"\r",
									"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Hierarchy/{{03_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Hierarchy",
								"{{03_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 1 to P1T1_ItemzType1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{03_Hierarchy_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{03_Hierarchy_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HierarchyDetails by P1T1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Verify Hierarchy level\", function () {\r",
									"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
									"\r",
									"pm.test(\"Verify Hierarchy recordType\", function () {\r",
									"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
									"\r",
									"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
									"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0) ;     });\r",
									"\r",
									"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
									"\r",
									"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
									"\r",
									"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Hierarchy/{{03_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Hierarchy",
								"{{03_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 1 to P1T1_ItemzType1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData[0].id;",
									"pm.collectionVariables.set(\"03_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{03_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypeItemzs",
								"{{03_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HierarchyDetails by P1T1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Verify Hierarchy level\", function () {\r",
									"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
									"\r",
									"pm.test(\"Verify Hierarchy recordType\", function () {\r",
									"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
									"\r",
									"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
									"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1) ;     });\r",
									"\r",
									"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
									"\r",
									"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
									"\r",
									"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Hierarchy/{{03_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Hierarchy",
								"{{03_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 2 to P1T1_ItemzType1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData[0].id;",
									"pm.collectionVariables.set(\"03_Hierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{03_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypeItemzs",
								"{{03_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HierarchyDetails by P1T1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Verify Hierarchy level\", function () {\r",
									"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
									"\r",
									"pm.test(\"Verify Hierarchy recordType\", function () {\r",
									"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
									"\r",
									"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
									"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1 + 1) ;     });\r",
									"\r",
									"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
									"\r",
									"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
									"\r",
									"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/2/\"); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Hierarchy/{{03_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Hierarchy",
								"{{03_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 1 to P1T1_ItemzType1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{03_Hierarchy_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{03_Hierarchy_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HierarchyDetails by P1T1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Verify Hierarchy level\", function () {\r",
									"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
									"\r",
									"pm.test(\"Verify Hierarchy recordType\", function () {\r",
									"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
									"\r",
									"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
									"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1) ;     });\r",
									"\r",
									"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
									"\r",
									"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/2/\"); });\r",
									"\r",
									"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/2/\"); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Hierarchy/{{03_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Hierarchy",
								"{{03_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 2 to P1T1_ItemzType1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{03_Hierarchy_P1T1_2ndItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{03_Hierarchy_P1T1_2ndItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HierarchyDetails by P1T1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Verify Hierarchy level\", function () {\r",
									"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
									"\r",
									"pm.test(\"Verify Hierarchy recordType\", function () {\r",
									"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
									"\r",
									"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
									"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0) ;     });\r",
									"\r",
									"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
									"\r",
									"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
									"\r",
									"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Hierarchy/{{03_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Hierarchy",
								"{{03_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE SINGLE Itemz",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{03_Hierarchy_P1T1_SINGLEITEMZ}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{03_Hierarchy_P1T1_SINGLEITEMZ}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HierarchyDetails by P1T1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Verify Hierarchy level\", function () {\r",
									"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
									"\r",
									"pm.test(\"Verify Hierarchy recordType\", function () {\r",
									"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
									"\r",
									"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
									"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0) ;     });\r",
									"\r",
									"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
									"\r",
									"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
									"\r",
									"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Hierarchy/{{03_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Hierarchy",
								"{{03_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST 1st 100 Itemz Collection By ItemzType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"Name\": \"Item 6\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 7\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 8\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 9\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 10\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 11\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 12\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 13\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 14\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 15\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 16\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 17\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 18\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 19\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 20\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 21\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 22\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 23\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 24\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 25\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 26\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 27\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 28\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 29\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 30\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 31\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 32\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 33\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 34\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 35\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 36\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 37\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 38\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 39\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 40\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 41\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 42\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 43\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 44\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 45\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 46\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 47\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 48\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 49\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 50\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 51\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 52\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 53\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 54\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 55\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 56\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 57\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 58\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 59\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 60\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 61\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 62\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 63\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 64\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 65\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 66\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 67\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 68\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 69\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 70\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 71\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 72\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 73\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 74\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 75\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 76\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 77\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 78\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 79\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 80\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 81\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 82\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 83\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 84\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 85\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 86\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 87\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 88\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 89\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 90\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 91\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 92\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 93\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 94\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 95\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 96\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 97\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 98\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 99\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 100\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 101\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 102\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 103\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 104\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 105\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{03_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypeItemzs",
								"{{03_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET HierarchyDetails by P1T1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Verify Hierarchy level\", function () {\r",
									"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
									"\r",
									"pm.test(\"Verify Hierarchy recordType\", function () {\r",
									"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
									"\r",
									"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
									"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 100) ;     });\r",
									"\r",
									"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
									"\r",
									"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
									"\r",
									"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
									"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"03_Hierarchy_1stProject_HeirarchyId\") + \"2/100/\"); });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Hierarchy/{{03_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Hierarchy",
								"{{03_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE ItemzType by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypes/{{03_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypes",
								"{{03_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE 1st Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Projects/{{03_Hierarchy_1stProjectId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects",
								"{{03_Hierarchy_1stProjectId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "0004 InsertBetweenTwoItemz",
			"item": [
				{
					"name": "POST Project 1st",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData = pm.response.json();",
									"const tempNewProjectId = jsonData[\"id\"];",
									"pm.collectionVariables.set(\"04_Hierarchy_1stProjectId\",tempNewProjectId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"pm.collectionVariables.set(\"04_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
									"\r",
									"pm.variables.get(\"04_Hierarchy_1stProjectName\");\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{04_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{04_Hierarchy_1stProjectName}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST ItemzType 1st",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/**",
									" ",
									" pm.test(\"Status code is either 201 or 409\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
									"});",
									"",
									"**/",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzTypeId = jsonData[\"id\"];",
									"pm.collectionVariables.set(\"04_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{04_Hierarchy_1stProjectId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypes"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData[0].id;",
									"pm.collectionVariables.set(\"04_Hierarchy_P1T1_Itemz_1\",tempNew1stItemzId);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{04_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypeItemzs",
								"{{04_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 1/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData.id;",
									"pm.collectionVariables.set(\"04_Hierarchy_P1T1_Itemz_1_1\",tempNew1stItemzId);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"Itemz 1_1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Itemzs?parentId={{04_Hierarchy_P1T1_Itemz_1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs"
							],
							"query": [
								{
									"key": "parentId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 1/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData.id;",
									"pm.collectionVariables.set(\"04_Hierarchy_P1T1_Itemz_1_2\",tempNew1stItemzId);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"Itemz 1_2\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Itemzs?parentId={{04_Hierarchy_P1T1_Itemz_1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs"
							],
							"query": [
								{
									"key": "parentId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 1/1.1 between 1/1 and 1/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData.id;",
									"pm.collectionVariables.set(\"04_Hierarchy_P1T1_Itemz_1_1.1\",tempNew1stItemzId);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"Itemz 1_1.1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{04_Hierarchy_P1T1_Itemz_1_1}}&secondItemzId={{04_Hierarchy_P1T1_Itemz_1_2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"CreateItemzBetweenExistingItemz"
							],
							"query": [
								{
									"key": "firstItemzId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1_1}}"
								},
								{
									"key": "secondItemzId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1_2}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 1/1.0 between 1/1 and 1/1.1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData.id;",
									"pm.collectionVariables.set(\"04_Hierarchy_P1T1_Itemz_1_1.0\",tempNew1stItemzId);",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"Itemz 1_1.0\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{04_Hierarchy_P1T1_Itemz_1_1}}&secondItemzId={{04_Hierarchy_P1T1_Itemz_1_1.1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"CreateItemzBetweenExistingItemz"
							],
							"query": [
								{
									"key": "firstItemzId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1_1}}"
								},
								{
									"key": "secondItemzId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1_1.1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 1/3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData.id;",
									"pm.collectionVariables.set(\"04_Hierarchy_P1T1_Itemz_1_3\",tempNew1stItemzId);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"Itemz 1_3\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Itemzs?parentId={{04_Hierarchy_P1T1_Itemz_1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs"
							],
							"query": [
								{
									"key": "parentId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 1/1/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData.id;",
									"pm.collectionVariables.set(\"04_Hierarchy_P1T1_Itemz_1_1_1\",tempNew1stItemzId);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"Itemz 1_1_1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Itemzs?parentId={{04_Hierarchy_P1T1_Itemz_1_1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs"
							],
							"query": [
								{
									"key": "parentId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1_1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 1/2/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData.id;",
									"pm.collectionVariables.set(\"04_Hierarchy_P1T1_Itemz_1_2_1\",tempNew1stItemzId);",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"Itemz 1_2_1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Itemzs?parentId={{04_Hierarchy_P1T1_Itemz_1_2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs"
							],
							"query": [
								{
									"key": "parentId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1_2}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 1/1.-1 between 1/1 and 1/1.0",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData.id;",
									"pm.collectionVariables.set(\"04_Hierarchy_P1T1_Itemz_1_1.-1\",tempNew1stItemzId);",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"Itemz 1_1.-1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{04_Hierarchy_P1T1_Itemz_1_1}}&secondItemzId={{04_Hierarchy_P1T1_Itemz_1_1.0}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"CreateItemzBetweenExistingItemz"
							],
							"query": [
								{
									"key": "firstItemzId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1_1}}"
								},
								{
									"key": "secondItemzId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1_1.0}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 1/2.1 between 1/2 and 1/3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData.id;",
									"pm.collectionVariables.set(\"04_Hierarchy_P1T1_Itemz_1_2.1\",tempNew1stItemzId);",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"Itemz 1_2.1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{04_Hierarchy_P1T1_Itemz_1_2}}&secondItemzId={{04_Hierarchy_P1T1_Itemz_1_3}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"CreateItemzBetweenExistingItemz"
							],
							"query": [
								{
									"key": "firstItemzId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1_2}}"
								},
								{
									"key": "secondItemzId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1_3}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 1/2.2 between 1/2.1 and 1/3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData.id;",
									"pm.collectionVariables.set(\"04_Hierarchy_P1T1_Itemz_1_2.2\",tempNew1stItemzId);",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"Itemz 1_2.2\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{04_Hierarchy_P1T1_Itemz_1_2.1}}&secondItemzId={{04_Hierarchy_P1T1_Itemz_1_3}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"CreateItemzBetweenExistingItemz"
							],
							"query": [
								{
									"key": "firstItemzId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1_2.1}}"
								},
								{
									"key": "secondItemzId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1_3}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz WRONG between 1/1 and 1/3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"// var jsonData = pm.response.json();",
									"// var tempNew1stItemzId =   jsonData.id;",
									"// pm.collectionVariables.set(\"04_Hierarchy_P1T1_Itemz_1_2.2\",tempNew1stItemzId);",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"Itemz WRONG\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{04_Hierarchy_P1T1_Itemz_1_1}}&secondItemzId={{04_Hierarchy_P1T1_Itemz_1_3}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"CreateItemzBetweenExistingItemz"
							],
							"query": [
								{
									"key": "firstItemzId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1_1}}"
								},
								{
									"key": "secondItemzId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1_3}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz WRONG between 1/1 and 1/1/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"// var jsonData = pm.response.json();",
									"// var tempNew1stItemzId =   jsonData.id;",
									"// pm.collectionVariables.set(\"04_Hierarchy_P1T1_Itemz_1_2.2\",tempNew1stItemzId);",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"Itemz WRONG\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{04_Hierarchy_P1T1_Itemz_1_1}}&secondItemzId={{04_Hierarchy_P1T1_Itemz_1_1_1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"CreateItemzBetweenExistingItemz"
							],
							"query": [
								{
									"key": "firstItemzId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1_1}}"
								},
								{
									"key": "secondItemzId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1_1_1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz WRONG between 1/2.2 and 1/2.1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"// var jsonData = pm.response.json();",
									"// var tempNew1stItemzId =   jsonData.id;",
									"// pm.collectionVariables.set(\"04_Hierarchy_P1T1_Itemz_1_2.2\",tempNew1stItemzId);",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"Itemz WRONG\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{04_Hierarchy_P1T1_Itemz_1_2.2}}&secondItemzId={{04_Hierarchy_P1T1_Itemz_1_2.1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"CreateItemzBetweenExistingItemz"
							],
							"query": [
								{
									"key": "firstItemzId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1_2.2}}"
								},
								{
									"key": "secondItemzId",
									"value": "{{04_Hierarchy_P1T1_Itemz_1_2.1}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 1/2.2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{04_Hierarchy_P1T1_Itemz_1_2.2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{04_Hierarchy_P1T1_Itemz_1_2.2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 1/2.1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{04_Hierarchy_P1T1_Itemz_1_2.1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{04_Hierarchy_P1T1_Itemz_1_2.1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 1/1.-1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{04_Hierarchy_P1T1_Itemz_1_1.-1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{04_Hierarchy_P1T1_Itemz_1_1.-1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 1/2/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{04_Hierarchy_P1T1_Itemz_1_2_1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{04_Hierarchy_P1T1_Itemz_1_2_1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 1/1/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{04_Hierarchy_P1T1_Itemz_1_1_1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{04_Hierarchy_P1T1_Itemz_1_1_1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 1/3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{04_Hierarchy_P1T1_Itemz_1_3}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{04_Hierarchy_P1T1_Itemz_1_3}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 1/1.0",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{04_Hierarchy_P1T1_Itemz_1_1.0}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{04_Hierarchy_P1T1_Itemz_1_1.0}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 1/1.1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{04_Hierarchy_P1T1_Itemz_1_1.1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{04_Hierarchy_P1T1_Itemz_1_1.1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 1/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{04_Hierarchy_P1T1_Itemz_1_2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{04_Hierarchy_P1T1_Itemz_1_2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 1/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{04_Hierarchy_P1T1_Itemz_1_1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{04_Hierarchy_P1T1_Itemz_1_1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{04_Hierarchy_P1T1_Itemz_1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{04_Hierarchy_P1T1_Itemz_1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE ItemzType by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypes/{{04_Hierarchy_P1T1_ItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypes",
								"{{04_Hierarchy_P1T1_ItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE 1st Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Projects/{{04_Hierarchy_1stProjectId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects",
								"{{04_Hierarchy_1stProjectId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "0005 Project",
			"item": [
				{
					"name": "05_01 VerifyItemzCountWithSubItemz",
					"item": [
						{
							"name": "POST Project 1st ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"05_01_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.collectionVariables.set(\"05_01_Hierarchy_foundItemzCountByProject\", 0);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"05_01_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"05_01_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{05_01_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{05_01_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"05_01_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{05_01_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"05_01_Hierarchy_P1T1_Itemz_1\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{05_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{05_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count By Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that expected number of SubItemz records were found in ItemzType\", function () {",
											"    pm.expect(parseInt(pm.response.text())).to.eql(",
											"        parseInt(pm.collectionVariables.get(\"05_01_Hierarchy_foundItemzCountByProject\"))",
											"        + 1 );",
											"        // parseInt(pm.collectionVariables.get(\"02_02_Baselines_foundItemzCountByItemzType\")));",
											"});",
											"",
											"/*",
											"",
											"Get the value of the current count of Itemz by Project ID and store ",
											"it in a collection variable.",
											"",
											"*/",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{05_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{05_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_01_Hierarchy_P1T1_Itemz_1_1\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{05_01_Hierarchy_P1T1_Itemz_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{05_01_Hierarchy_P1T1_Itemz_1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_01_Hierarchy_P1T1_Itemz_1_2\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_2\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{05_01_Hierarchy_P1T1_Itemz_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{05_01_Hierarchy_P1T1_Itemz_1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count By Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that expected number of SubItemz records were found in ItemzType\", function () {",
											"    pm.expect(parseInt(pm.response.text())).to.eql(",
											"        parseInt(pm.collectionVariables.get(\"05_01_Hierarchy_foundItemzCountByProject\"))",
											"        + 1 + 2 );",
											"});",
											"",
											"/*",
											"",
											"Get the value of the current count of Itemz by Project ID and store ",
											"it in a collection variable.",
											"",
											"*/",
											"",
											"// pm.collectionVariables.set(\"05_01_Hierarchy_foundItemzCountByItemzType\", parseInt(pm.response.text()));",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{05_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{05_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/1.1 between 1/1 and 1/2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_01_Hierarchy_P1T1_Itemz_1_1.1\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_1.1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{05_01_Hierarchy_P1T1_Itemz_1_1}}&secondItemzId={{05_01_Hierarchy_P1T1_Itemz_1_2}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{05_01_Hierarchy_P1T1_Itemz_1_1}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{05_01_Hierarchy_P1T1_Itemz_1_2}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/1.0 between 1/1 and 1/1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_01_Hierarchy_P1T1_Itemz_1_1.0\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_1.0\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{05_01_Hierarchy_P1T1_Itemz_1_1}}&secondItemzId={{05_01_Hierarchy_P1T1_Itemz_1_1.1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{05_01_Hierarchy_P1T1_Itemz_1_1}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{05_01_Hierarchy_P1T1_Itemz_1_1.1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_01_Hierarchy_P1T1_Itemz_1_3\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_3\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{05_01_Hierarchy_P1T1_Itemz_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{05_01_Hierarchy_P1T1_Itemz_1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/1/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_01_Hierarchy_P1T1_Itemz_1_1_1\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_1_1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{05_01_Hierarchy_P1T1_Itemz_1_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{05_01_Hierarchy_P1T1_Itemz_1_1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/2/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_01_Hierarchy_P1T1_Itemz_1_2_1\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_2_1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{05_01_Hierarchy_P1T1_Itemz_1_2}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{05_01_Hierarchy_P1T1_Itemz_1_2}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/1.-1 between 1/1 and 1/1.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_01_Hierarchy_P1T1_Itemz_1_1.-1\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_1.-1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{05_01_Hierarchy_P1T1_Itemz_1_1}}&secondItemzId={{05_01_Hierarchy_P1T1_Itemz_1_1.0}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{05_01_Hierarchy_P1T1_Itemz_1_1}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{05_01_Hierarchy_P1T1_Itemz_1_1.0}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/2.1 between 1/2 and 1/3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_01_Hierarchy_P1T1_Itemz_1_2.1\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_2.1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{05_01_Hierarchy_P1T1_Itemz_1_2}}&secondItemzId={{05_01_Hierarchy_P1T1_Itemz_1_3}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{05_01_Hierarchy_P1T1_Itemz_1_2}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{05_01_Hierarchy_P1T1_Itemz_1_3}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/2.2 between 1/2.1 and 1/3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_01_Hierarchy_P1T1_Itemz_1_2.2\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_2.2\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{05_01_Hierarchy_P1T1_Itemz_1_2.1}}&secondItemzId={{05_01_Hierarchy_P1T1_Itemz_1_3}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{05_01_Hierarchy_P1T1_Itemz_1_2.1}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{05_01_Hierarchy_P1T1_Itemz_1_3}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count By Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that expected number of SubItemz records were found in ItemzType\", function () {",
											"    pm.expect(parseInt(pm.response.text())).to.eql(",
											"        parseInt(pm.collectionVariables.get(\"05_01_Hierarchy_foundItemzCountByProject\"))",
											"        + 1 + 2 + 8);",
											"});",
											"",
											"/*",
											"",
											"Get the value of the current count of Itemz by Project ID and store ",
											"it in a collection variable.",
											"",
											"*/",
											"",
											"// pm.collectionVariables.set(\"05_01_Hierarchy_foundItemzCountByItemzType\", parseInt(pm.response.text()));",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{05_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{05_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_01_Hierarchy_P1T1_Itemz_1_2.2}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_01_Hierarchy_P1T1_Itemz_1_2.2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_01_Hierarchy_P1T1_Itemz_1_2.1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_01_Hierarchy_P1T1_Itemz_1_2.1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/1.-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_01_Hierarchy_P1T1_Itemz_1_1.-1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_01_Hierarchy_P1T1_Itemz_1_1.-1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/2/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_01_Hierarchy_P1T1_Itemz_1_2_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_01_Hierarchy_P1T1_Itemz_1_2_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count By Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that expected number of SubItemz records were found in ItemzType\", function () {",
											"    pm.expect(parseInt(pm.response.text())).to.eql(",
											"        parseInt(pm.collectionVariables.get(\"05_01_Hierarchy_foundItemzCountByProject\"))",
											"        + 1 + 2 + 8 - 4 );",
											"});",
											"",
											"/*",
											"",
											"Get the value of the current count of Itemz by Project ID and store ",
											"it in a collection variable.",
											"",
											"*/",
											"",
											"// pm.collectionVariables.set(\"05_01_Hierarchy_foundItemzCountByItemzType\", parseInt(pm.response.text()));",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{05_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{05_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_01_Hierarchy_P1T1_Itemz_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_01_Hierarchy_P1T1_Itemz_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count By Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that expected number of SubItemz records were found in ItemzType\", function () {",
											"    pm.expect(parseInt(pm.response.text())).to.eql(",
											"        parseInt(pm.collectionVariables.get(\"05_01_Hierarchy_foundItemzCountByProject\"))",
											"        + 1 + 2 + 8 - 4 - 7);",
											"});",
											"",
											"/*",
											"",
											"Get the value of the current count of Itemz by Project ID and store ",
											"it in a collection variable.",
											"",
											"*/",
											"",
											"// pm.collectionVariables.set(\"05_01_Hierarchy_foundItemzCountByItemzType\", parseInt(pm.response.text()));",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{05_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{05_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/1/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_01_Hierarchy_P1T1_Itemz_1_1_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_01_Hierarchy_P1T1_Itemz_1_1_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_01_Hierarchy_P1T1_Itemz_1_3}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_01_Hierarchy_P1T1_Itemz_1_3}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/1.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_01_Hierarchy_P1T1_Itemz_1_1.0}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_01_Hierarchy_P1T1_Itemz_1_1.0}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_01_Hierarchy_P1T1_Itemz_1_1.1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_01_Hierarchy_P1T1_Itemz_1_1.1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_01_Hierarchy_P1T1_Itemz_1_2}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_01_Hierarchy_P1T1_Itemz_1_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_01_Hierarchy_P1T1_Itemz_1_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_01_Hierarchy_P1T1_Itemz_1_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{05_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{05_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{05_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{05_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "05_02 VerifyItemz MULTIPLE ITEMZTYPES",
					"item": [
						{
							"name": "POST Project 1st ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"05_01_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.collectionVariables.set(\"05_02_Hierarchy_foundItemzCountByProject\", 0);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"05_01_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"05_01_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{05_01_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{05_01_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{05_01_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T1_Itemz_1\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{05_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{05_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType 2nd",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"05_02_Hierarchy_2ndItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType 2\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{05_01_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T2_Itemz_2\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{05_02_Hierarchy_2ndItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{05_02_Hierarchy_2ndItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count By Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that expected number of SubItemz records were found in ItemzType\", function () {",
											"    pm.expect(parseInt(pm.response.text())).to.eql(",
											"        parseInt(pm.collectionVariables.get(\"05_02_Hierarchy_foundItemzCountByProject\"))",
											"        + ((1) *2 ) );",
											"        // parseInt(pm.collectionVariables.get(\"02_02_Baselines_foundItemzCountByItemzType\")));",
											"});",
											"",
											"/*",
											"",
											"Get the value of the current count of Itemz by Project ID and store ",
											"it in a collection variable.",
											"",
											"*/",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{05_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{05_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T1_Itemz_1_1\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{05_02_Hierarchy_P1T1_Itemz_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{05_02_Hierarchy_P1T1_Itemz_1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T1_Itemz_1_2\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_2\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{05_02_Hierarchy_P1T1_Itemz_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{05_02_Hierarchy_P1T1_Itemz_1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T2_Itemz_2_1\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 2_1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{05_02_Hierarchy_P1T2_Itemz_2}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{05_02_Hierarchy_P1T2_Itemz_2}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2/2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T2_Itemz_2_2\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 2_2\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{05_02_Hierarchy_P1T2_Itemz_2}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{05_02_Hierarchy_P1T2_Itemz_2}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count By Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that expected number of SubItemz records were found in ItemzType\", function () {",
											"    pm.expect(parseInt(pm.response.text())).to.eql(",
											"        parseInt(pm.collectionVariables.get(\"05_02_Hierarchy_foundItemzCountByProject\"))",
											"        + ((1 + 2) * 2)   );",
											"});",
											"",
											"/*",
											"",
											"Get the value of the current count of Itemz by Project ID and store ",
											"it in a collection variable.",
											"",
											"*/",
											"",
											"// pm.collectionVariables.set(\"05_02_Hierarchy_foundItemzCountByItemzType\", parseInt(pm.response.text()));",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{05_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{05_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/1.1 between 1/1 and 1/2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T1_Itemz_1_1.1\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_1.1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{05_02_Hierarchy_P1T1_Itemz_1_1}}&secondItemzId={{05_02_Hierarchy_P1T1_Itemz_1_2}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{05_02_Hierarchy_P1T1_Itemz_1_1}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{05_02_Hierarchy_P1T1_Itemz_1_2}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/1.0 between 1/1 and 1/1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T1_Itemz_1_1.0\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_1.0\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{05_02_Hierarchy_P1T1_Itemz_1_1}}&secondItemzId={{05_02_Hierarchy_P1T1_Itemz_1_1.1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{05_02_Hierarchy_P1T1_Itemz_1_1}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{05_02_Hierarchy_P1T1_Itemz_1_1.1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T1_Itemz_1_3\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_3\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{05_02_Hierarchy_P1T1_Itemz_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{05_02_Hierarchy_P1T1_Itemz_1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/1/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T1_Itemz_1_1_1\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_1_1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{05_02_Hierarchy_P1T1_Itemz_1_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{05_02_Hierarchy_P1T1_Itemz_1_1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/2/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T1_Itemz_1_2_1\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_2_1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{05_02_Hierarchy_P1T1_Itemz_1_2}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{05_02_Hierarchy_P1T1_Itemz_1_2}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/1.-1 between 1/1 and 1/1.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T1_Itemz_1_1.-1\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_1.-1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{05_02_Hierarchy_P1T1_Itemz_1_1}}&secondItemzId={{05_02_Hierarchy_P1T1_Itemz_1_1.0}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{05_02_Hierarchy_P1T1_Itemz_1_1}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{05_02_Hierarchy_P1T1_Itemz_1_1.0}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/2.1 between 1/2 and 1/3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T1_Itemz_1_2.1\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_2.1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{05_02_Hierarchy_P1T1_Itemz_1_2}}&secondItemzId={{05_02_Hierarchy_P1T1_Itemz_1_3}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{05_02_Hierarchy_P1T1_Itemz_1_2}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{05_02_Hierarchy_P1T1_Itemz_1_3}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/2.2 between 1/2.1 and 1/3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T1_Itemz_1_2.2\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_2.2\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{05_02_Hierarchy_P1T1_Itemz_1_2.1}}&secondItemzId={{05_02_Hierarchy_P1T1_Itemz_1_3}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{05_02_Hierarchy_P1T1_Itemz_1_2.1}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{05_02_Hierarchy_P1T1_Itemz_1_3}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2/1.1 between 2/1 and 2/2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T2_Itemz_2_1.1\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_1.1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{05_02_Hierarchy_P1T2_Itemz_2_1}}&secondItemzId={{05_02_Hierarchy_P1T2_Itemz_2_2}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{05_02_Hierarchy_P1T2_Itemz_2_1}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{05_02_Hierarchy_P1T2_Itemz_2_2}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2/1.0 between 2/1 and 2/1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T2_Itemz_2_1.0\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 2_1.0\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{05_02_Hierarchy_P1T2_Itemz_2_1}}&secondItemzId={{05_02_Hierarchy_P1T2_Itemz_2_1.1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{05_02_Hierarchy_P1T2_Itemz_2_1}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{05_02_Hierarchy_P1T2_Itemz_2_1.1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2/3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T2_Itemz_2_3\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_3\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{05_02_Hierarchy_P1T2_Itemz_2}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{05_02_Hierarchy_P1T2_Itemz_2}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2/1/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T2_Itemz_2_1_1\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 2_1_1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{05_02_Hierarchy_P1T2_Itemz_2_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{05_02_Hierarchy_P1T2_Itemz_2_1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2/2/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T2_Itemz_2_2_1\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_2_1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{05_02_Hierarchy_P1T2_Itemz_2_2}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{05_02_Hierarchy_P1T2_Itemz_2_2}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2/1.-1 between 2/1 and 2/1.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T2_Itemz_2_1.-1\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 2_1.-1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{05_02_Hierarchy_P1T2_Itemz_2_1}}&secondItemzId={{05_02_Hierarchy_P1T2_Itemz_2_1.0}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{05_02_Hierarchy_P1T2_Itemz_2_1}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{05_02_Hierarchy_P1T2_Itemz_2_1.0}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2/2.1 between 2/2 and 2/3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T2_Itemz_2_2.1\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 2_2.1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{05_02_Hierarchy_P1T2_Itemz_2_2}}&secondItemzId={{05_02_Hierarchy_P1T2_Itemz_2_3}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{05_02_Hierarchy_P1T2_Itemz_2_2}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{05_02_Hierarchy_P1T2_Itemz_2_3}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2/2.2 between 2/2.1 and 2/3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"05_02_Hierarchy_P1T2_Itemz_2_2.2\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 2_2.2\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{05_02_Hierarchy_P1T2_Itemz_2_2.1}}&secondItemzId={{05_02_Hierarchy_P1T2_Itemz_2_3}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{05_02_Hierarchy_P1T2_Itemz_2_2.1}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{05_02_Hierarchy_P1T2_Itemz_2_3}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count By Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that expected number of SubItemz records were found in ItemzType\", function () {",
											"    pm.expect(parseInt(pm.response.text())).to.eql(",
											"        parseInt(pm.collectionVariables.get(\"05_02_Hierarchy_foundItemzCountByProject\"))",
											"        + ((1 + 2 + 8) * 2 ));",
											"});",
											"",
											"/*",
											"",
											"Get the value of the current count of Itemz by Project ID and store ",
											"it in a collection variable.",
											"",
											"*/",
											"",
											"// pm.collectionVariables.set(\"05_02_Hierarchy_foundItemzCountByItemzType\", parseInt(pm.response.text()));",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{05_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{05_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T1_Itemz_1_2.2}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T1_Itemz_1_2.2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T1_Itemz_1_2.1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T1_Itemz_1_2.1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/1.-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T1_Itemz_1_1.-1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T1_Itemz_1_1.-1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/2/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T1_Itemz_1_2_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T1_Itemz_1_2_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2/2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T2_Itemz_2_2.2}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T2_Itemz_2_2.2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2/2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T2_Itemz_2_2.1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T2_Itemz_2_2.1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2/1.-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T2_Itemz_2_1.-1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T2_Itemz_2_1.-1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2/2/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T2_Itemz_2_2_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T2_Itemz_2_2_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count By Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that expected number of SubItemz records were found in ItemzType\", function () {",
											"    pm.expect(parseInt(pm.response.text())).to.eql(",
											"        parseInt(pm.collectionVariables.get(\"05_02_Hierarchy_foundItemzCountByProject\"))",
											"        + ((1 + 2 + 8 - 4 ) * 2 ) );",
											"});",
											"",
											"/*",
											"",
											"Get the value of the current count of Itemz by Project ID and store ",
											"it in a collection variable.",
											"",
											"*/",
											"",
											"// pm.collectionVariables.set(\"05_02_Hierarchy_foundItemzCountByItemzType\", parseInt(pm.response.text()));",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{05_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{05_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T1_Itemz_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T1_Itemz_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T2_Itemz_2}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T2_Itemz_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count By Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that expected number of SubItemz records were found in ItemzType\", function () {",
											"    pm.expect(parseInt(pm.response.text())).to.eql(",
											"        parseInt(pm.collectionVariables.get(\"05_02_Hierarchy_foundItemzCountByProject\"))",
											"        + ((1 + 2 + 8 - 4 - 7) * 2 ));",
											"});",
											"",
											"/*",
											"",
											"Get the value of the current count of Itemz by Project ID and store ",
											"it in a collection variable.",
											"",
											"*/",
											"",
											"// pm.collectionVariables.set(\"05_02_Hierarchy_foundItemzCountByItemzType\", parseInt(pm.response.text()));",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{05_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{05_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/1/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T1_Itemz_1_1_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T1_Itemz_1_1_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T1_Itemz_1_3}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T1_Itemz_1_3}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/1.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T1_Itemz_1_1.0}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T1_Itemz_1_1.0}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T1_Itemz_1_1.1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T1_Itemz_1_1.1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T1_Itemz_1_2}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T1_Itemz_1_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T1_Itemz_1_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T1_Itemz_1_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{05_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{05_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2/1/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T2_Itemz_2_1_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T2_Itemz_2_1_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2/3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T2_Itemz_2_3}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T2_Itemz_2_3}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2/1.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T2_Itemz_2_1.0}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T2_Itemz_2_1.0}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2/1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T2_Itemz_2_1.1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T2_Itemz_2_1.1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2/2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T2_Itemz_2_2}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T2_Itemz_2_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{05_02_Hierarchy_P1T2_Itemz_2_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{05_02_Hierarchy_P1T2_Itemz_2_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{05_02_Hierarchy_2ndItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{05_02_Hierarchy_2ndItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{05_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{05_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "0006 ItemzType",
			"item": [
				{
					"name": "06_01 VerifyItemzCountWithSubItemz",
					"item": [
						{
							"name": "POST Project 1st ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_01_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"06_01_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"06_01_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{06_01_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{06_01_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"06_01_Hierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{06_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{06_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"06_01_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_01_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.collectionVariables.set(\"06_01_Hierarchy_foundItemzCountByItemzType\", 0);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{06_01_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_01_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"06_01_Hierarchy_P1T1_Itemz_1\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{06_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{06_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count By ItemzType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that expected number of SubItemz records were found in ItemzType\", function () {",
											"    pm.expect(parseInt(pm.response.text())).to.eql(",
											"        parseInt(pm.collectionVariables.get(\"06_01_Hierarchy_foundItemzCountByItemzType\"))",
											"        + 1 );",
											"        // parseInt(pm.collectionVariables.get(\"02_02_Baselines_foundItemzCountByItemzType\")));",
											"});",
											"",
											"/*",
											"",
											"Get the value of the current count of Itemz by Project ID and store ",
											"it in a collection variable.",
											"",
											"*/",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_01_Hierarchy_P1T1_Itemz_1_1\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_01_Hierarchy_P1T1_Itemz_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_01_Hierarchy_P1T1_Itemz_1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_01_Hierarchy_P1T1_Itemz_1_2\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_2\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_01_Hierarchy_P1T1_Itemz_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_01_Hierarchy_P1T1_Itemz_1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count By ItemzType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that expected number of SubItemz records were found in ItemzType\", function () {",
											"    pm.expect(parseInt(pm.response.text())).to.eql(",
											"        parseInt(pm.collectionVariables.get(\"06_01_Hierarchy_foundItemzCountByItemzType\"))",
											"        + 1 + 2 );",
											"});",
											"",
											"/*",
											"",
											"Get the value of the current count of Itemz by Project ID and store ",
											"it in a collection variable.",
											"",
											"*/",
											"",
											"// pm.collectionVariables.set(\"06_01_Hierarchy_foundItemzCountByItemzType\", parseInt(pm.response.text()));",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/1.1 between 1/1 and 1/2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_01_Hierarchy_P1T1_Itemz_1_1.1\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_1.1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{06_01_Hierarchy_P1T1_Itemz_1_1}}&secondItemzId={{06_01_Hierarchy_P1T1_Itemz_1_2}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{06_01_Hierarchy_P1T1_Itemz_1_1}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{06_01_Hierarchy_P1T1_Itemz_1_2}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/1.0 between 1/1 and 1/1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_01_Hierarchy_P1T1_Itemz_1_1.0\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_1.0\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{06_01_Hierarchy_P1T1_Itemz_1_1}}&secondItemzId={{06_01_Hierarchy_P1T1_Itemz_1_1.1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{06_01_Hierarchy_P1T1_Itemz_1_1}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{06_01_Hierarchy_P1T1_Itemz_1_1.1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_01_Hierarchy_P1T1_Itemz_1_3\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_3\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_01_Hierarchy_P1T1_Itemz_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_01_Hierarchy_P1T1_Itemz_1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/1/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_01_Hierarchy_P1T1_Itemz_1_1_1\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_1_1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_01_Hierarchy_P1T1_Itemz_1_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_01_Hierarchy_P1T1_Itemz_1_1}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/2/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_01_Hierarchy_P1T1_Itemz_1_2_1\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_2_1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_01_Hierarchy_P1T1_Itemz_1_2}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_01_Hierarchy_P1T1_Itemz_1_2}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/1.-1 between 1/1 and 1/1.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_01_Hierarchy_P1T1_Itemz_1_1.-1\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_1.-1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{06_01_Hierarchy_P1T1_Itemz_1_1}}&secondItemzId={{06_01_Hierarchy_P1T1_Itemz_1_1.0}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{06_01_Hierarchy_P1T1_Itemz_1_1}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{06_01_Hierarchy_P1T1_Itemz_1_1.0}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/2.1 between 1/2 and 1/3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_01_Hierarchy_P1T1_Itemz_1_2.1\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_2.1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{06_01_Hierarchy_P1T1_Itemz_1_2}}&secondItemzId={{06_01_Hierarchy_P1T1_Itemz_1_3}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{06_01_Hierarchy_P1T1_Itemz_1_2}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{06_01_Hierarchy_P1T1_Itemz_1_3}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1/2.2 between 1/2.1 and 1/3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_01_Hierarchy_P1T1_Itemz_1_2.2\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"Itemz 1_2.2\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{06_01_Hierarchy_P1T1_Itemz_1_2.1}}&secondItemzId={{06_01_Hierarchy_P1T1_Itemz_1_3}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{06_01_Hierarchy_P1T1_Itemz_1_2.1}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{06_01_Hierarchy_P1T1_Itemz_1_3}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count By ItemzType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that expected number of SubItemz records were found in ItemzType\", function () {",
											"    pm.expect(parseInt(pm.response.text())).to.eql(",
											"        parseInt(pm.collectionVariables.get(\"06_01_Hierarchy_foundItemzCountByItemzType\"))",
											"        + 1 + 2 + 8);",
											"});",
											"",
											"/*",
											"",
											"Get the value of the current count of Itemz by Project ID and store ",
											"it in a collection variable.",
											"",
											"*/",
											"",
											"// pm.collectionVariables.set(\"06_01_Hierarchy_foundItemzCountByItemzType\", parseInt(pm.response.text()));",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_01_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_01_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_01_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1_Itemz_1_2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Itemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_01_Hierarchy_1stProject_HeirarchyId\") + \"2/1/2.1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_01_Hierarchy_P1T1_Itemz_1_2.1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_01_Hierarchy_P1T1_Itemz_1_2.1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_01_Hierarchy_P1T1_Itemz_1_2.2}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_01_Hierarchy_P1T1_Itemz_1_2.2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_01_Hierarchy_P1T1_Itemz_1_2.1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_01_Hierarchy_P1T1_Itemz_1_2.1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/1.-1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_01_Hierarchy_P1T1_Itemz_1_1.-1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_01_Hierarchy_P1T1_Itemz_1_1.-1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/2/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_01_Hierarchy_P1T1_Itemz_1_2_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_01_Hierarchy_P1T1_Itemz_1_2_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count By ItemzType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that expected number of SubItemz records were found in ItemzType\", function () {",
											"    pm.expect(parseInt(pm.response.text())).to.eql(",
											"        parseInt(pm.collectionVariables.get(\"06_01_Hierarchy_foundItemzCountByItemzType\"))",
											"        + 1 + 2 + 8 - 4 );",
											"});",
											"",
											"/*",
											"",
											"Get the value of the current count of Itemz by Project ID and store ",
											"it in a collection variable.",
											"",
											"*/",
											"",
											"// pm.collectionVariables.set(\"06_01_Hierarchy_foundItemzCountByItemzType\", parseInt(pm.response.text()));",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_01_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_01_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_01_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_01_Hierarchy_P1T1_Itemz_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_01_Hierarchy_P1T1_Itemz_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count By ItemzType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that expected number of SubItemz records were found in ItemzType\", function () {",
											"    pm.expect(parseInt(pm.response.text())).to.eql(",
											"        parseInt(pm.collectionVariables.get(\"06_01_Hierarchy_foundItemzCountByItemzType\"))",
											"        + 1 + 2 + 8 - 4 - 7);",
											"});",
											"",
											"/*",
											"",
											"Get the value of the current count of Itemz by Project ID and store ",
											"it in a collection variable.",
											"",
											"*/",
											"",
											"// pm.collectionVariables.set(\"06_01_Hierarchy_foundItemzCountByItemzType\", parseInt(pm.response.text()));",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_01_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/1/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_01_Hierarchy_P1T1_Itemz_1_1_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_01_Hierarchy_P1T1_Itemz_1_1_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_01_Hierarchy_P1T1_Itemz_1_3}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_01_Hierarchy_P1T1_Itemz_1_3}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/1.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_01_Hierarchy_P1T1_Itemz_1_1.0}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_01_Hierarchy_P1T1_Itemz_1_1.0}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_01_Hierarchy_P1T1_Itemz_1_1.1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_01_Hierarchy_P1T1_Itemz_1_1.1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_01_Hierarchy_P1T1_Itemz_1_2}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_01_Hierarchy_P1T1_Itemz_1_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1/1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 400, 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_01_Hierarchy_P1T1_Itemz_1_1}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_01_Hierarchy_P1T1_Itemz_1_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{06_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{06_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{06_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{06_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "06_02 VerifyItemzTopAndBottomHierarchyId",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_02_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"06_02_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"06_02_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{06_02_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{06_02_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{06_02_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{06_02_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"06_02_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_02_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_02_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{06_02_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_02_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_02_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_02_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_02_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_02_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_02_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{06_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{06_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{06_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{06_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_SINGLEITEMZ_TOP\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1 at TOP\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Associate Itemz1 With ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" pm.test(\"Status code is 200,201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"itemzId\": \"{{06_02_Hierarchy_P1T1_SINGLEITEMZ_TOP}}\",\r\n  \"itemzTypeId\": \"{{06_02_Hierarchy_P1T1_ItemzTypeId}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs?AtBottomOfChildNodes=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs"
									],
									"query": [
										{
											"key": "AtBottomOfChildNodes",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST 10 Itemz in 1st ItemzType BULK",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const response =  pm.response.json();",
											"const itemzIds = response.map(itemz => itemz.id);",
											"console.log(itemzIds);",
											"pm.variables.set('06_02_Hierarchy_itemzIdsArray', itemzIds);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Item 6\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 7\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 8\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 9\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 10\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 11\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 12\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 13\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 14\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 15\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{06_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{06_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at BOTTOM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1 at BOTTOM \",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Associate Itemz1 With ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" pm.test(\"Status code is 200,201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"itemzId\": \"{{06_02_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}\",\r\n  \"itemzTypeId\": \"{{06_02_Hierarchy_P1T1_ItemzTypeId}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs?AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs"
									],
									"query": [
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_02_Hierarchy_Project1_ChildItemzCount\") + 4 + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_02_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_02_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count ${expectedItemzCount}\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_02_Hierarchy_P1PL_ChildItemzCount\") + expectedItemzCount)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_02_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_02_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_02_Hierarchy_P1T1_ChildItemzCount\") + 4 + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_02_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_02_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_02_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_02_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_02_Hierarchy_P1T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_02_Hierarchy_P1T1_1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_02_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_02_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New 1.1_1 between 1.1 and 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1__1_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1_1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{06_02_Hierarchy_P1T1_1_1_ItemzId}}&secondItemzId={{06_02_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{06_02_Hierarchy_P1T1_1_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{06_02_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New 1.1_1_1 between 1.1 and 1.1_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"// var jsonData = pm.response.json();",
											"// var tempNew1stItemzId =   jsonData.id;",
											"// pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1__1_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1_1_1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{06_02_Hierarchy_P1T1_1_1_ItemzId}}&secondItemzId={{06_02_Hierarchy_P1T1_1__1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{06_02_Hierarchy_P1T1_1_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{06_02_Hierarchy_P1T1_1__1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1_3_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_02_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_02_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1_4_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_02_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_02_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_02_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_02_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_02_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_02_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1_3_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_02_Hierarchy_P1T1_1_3_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_02_Hierarchy_P1T1_1_3_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1_3_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_02_Hierarchy_P1T1_1_3_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_02_Hierarchy_P1T1_1_3_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1_4_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_02_Hierarchy_P1T1_1_4_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_02_Hierarchy_P1T1_1_4_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1_4_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_02_Hierarchy_P1T1_1_4_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_02_Hierarchy_P1T1_1_4_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1_2_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_02_Hierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_02_Hierarchy_P1T1_1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1_2_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_02_Hierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_02_Hierarchy_P1T1_1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1_3_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_02_Hierarchy_P1T1_1_3_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_02_Hierarchy_P1T1_1_3_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1_3_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_02_Hierarchy_P1T1_1_3_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_02_Hierarchy_P1T1_1_3_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1_4_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_02_Hierarchy_P1T1_1_4_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_02_Hierarchy_P1T1_1_4_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_1_4_1_2_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_02_Hierarchy_P1T1_1_4_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_02_Hierarchy_P1T1_1_4_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_02_Hierarchy_Project1_ChildItemzCount\") + 20)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_02_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_02_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_02_Hierarchy_P1PL_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_02_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_02_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_02_Hierarchy_P1T1_ChildItemzCount\") + 20)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Itemz 1 to Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_02_Hierarchy_P1T1_1stItemzId}}?TargetId={{06_02_Hierarchy_P1PL_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_02_Hierarchy_P1T1_1stItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{06_02_Hierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_02_Hierarchy_Project1_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_02_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_02_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_02_Hierarchy_P1PL_ChildItemzCount\") + 21)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_02_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_02_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_02_Hierarchy_P1T1_ChildItemzCount\") - 21)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10 - 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_02_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_02_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz between 0 and 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"SINGLE Itemz BETWEEN 0 & 2 AS 1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{06_02_Hierarchy_P1T1_SINGLEITEMZ_TOP}}&secondItemzId={{06_02_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{06_02_Hierarchy_P1T1_SINGLEITEMZ_TOP}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{06_02_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_02_Hierarchy_Project1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_02_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_02_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_02_Hierarchy_P1PL_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_02_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_02_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_02_Hierarchy_P1T1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_02_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10 - 1 + 1 ) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_02_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_02_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1_SINGLEITEMZ_BETWEEN",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(3);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Itemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_02_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_02_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_02_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_02_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_02_Hierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_02_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_02_Hierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_02_Hierarchy_P1T1_SINGLEITEMZ_TOP}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_02_Hierarchy_P1T1_SINGLEITEMZ_TOP}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz BETWEEN",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_02_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_02_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz BOTTOM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_02_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_02_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 06_02_Hierarchy 10 Itemz BULK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const itemzIds_06_02_Hierarchy = pm.variables.get('06_02_Hierarchy_itemzIdsArray');\r",
											"\r",
											"if (Array.isArray(itemzIds_06_02_Hierarchy) && itemzIds_06_02_Hierarchy.length > 0) {\r",
											"    pm.variables.set('06_02_Hierarchy_BULK_CurrentItemzID', itemzIds_06_02_Hierarchy.shift())\r",
											"        \r",
											"}\r",
											"\r",
											"if (Array.isArray(itemzIds_06_02_Hierarchy) && itemzIds_06_02_Hierarchy.length > 0) {\r",
											"    postman.setNextRequest('DELETE 06_02_Hierarchy 10 Itemz BULK');\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_02_Hierarchy_BULK_CurrentItemzID}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_02_Hierarchy_BULK_CurrentItemzID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{06_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{06_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{06_02_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{06_02_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "06_03 VerifyMovingPartialSetOfSubItemzToAnotherItemzType",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_03_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"06_03_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"06_03_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{06_03_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{06_03_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{06_03_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{06_03_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"06_03_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_03_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_03_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{06_03_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_03_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_03_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_03_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_03_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_03_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_03_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_03_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_03_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{06_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{06_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{06_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{06_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_SINGLEITEMZ_TOP\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1 at TOP\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Associate Itemz1 With ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" pm.test(\"Status code is 200,201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"itemzId\": \"{{06_03_Hierarchy_P1T1_SINGLEITEMZ_TOP}}\",\r\n  \"itemzTypeId\": \"{{06_03_Hierarchy_P1T1_ItemzTypeId}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs?AtBottomOfChildNodes=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs"
									],
									"query": [
										{
											"key": "AtBottomOfChildNodes",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST 10 Itemz in 1st ItemzType BULK",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const response =  pm.response.json();",
											"const itemzIds = response.map(itemz => itemz.id);",
											"console.log(itemzIds);",
											"pm.variables.set('06_03_Hierarchy_itemzIdsArray', itemzIds);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Item 6\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 7\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 8\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 9\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 10\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 11\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 12\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 13\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 14\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 15\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{06_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{06_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at BOTTOM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1 at BOTTOM \",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Associate Itemz1 With ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" pm.test(\"Status code is 200,201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"itemzId\": \"{{06_03_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}\",\r\n  \"itemzTypeId\": \"{{06_03_Hierarchy_P1T1_ItemzTypeId}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs?AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs"
									],
									"query": [
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_03_Hierarchy_Project1_ChildItemzCount\") + 4 + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_03_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_03_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count ${expectedItemzCount}\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_03_Hierarchy_P1PL_ChildItemzCount\") + expectedItemzCount)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_03_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_03_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_03_Hierarchy_P1T1_ChildItemzCount\") + 4 + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_03_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_03_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_03_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_03_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_03_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_03_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_03_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_03_Hierarchy_P1T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_03_Hierarchy_P1T1_1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_03_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_03_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New 1.1_1 between 1.1 and 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1__1_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1_1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{06_03_Hierarchy_P1T1_1_1_ItemzId}}&secondItemzId={{06_03_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{06_03_Hierarchy_P1T1_1_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{06_03_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New 1.1_1_1 between 1.1 and 1.1_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"// var jsonData = pm.response.json();",
											"// var tempNew1stItemzId =   jsonData.id;",
											"// pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1__1_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1_1_1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{06_03_Hierarchy_P1T1_1_1_ItemzId}}&secondItemzId={{06_03_Hierarchy_P1T1_1__1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{06_03_Hierarchy_P1T1_1_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{06_03_Hierarchy_P1T1_1__1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1_3_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_03_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_03_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1_4_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_03_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_03_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_03_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_03_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_03_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_03_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1_3_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_03_Hierarchy_P1T1_1_3_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_03_Hierarchy_P1T1_1_3_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1_3_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_03_Hierarchy_P1T1_1_3_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_03_Hierarchy_P1T1_1_3_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1_4_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_03_Hierarchy_P1T1_1_4_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_03_Hierarchy_P1T1_1_4_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1_4_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_03_Hierarchy_P1T1_1_4_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_03_Hierarchy_P1T1_1_4_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1_2_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_03_Hierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_03_Hierarchy_P1T1_1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1_2_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_03_Hierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_03_Hierarchy_P1T1_1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1_3_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_03_Hierarchy_P1T1_1_3_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_03_Hierarchy_P1T1_1_3_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1_3_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_03_Hierarchy_P1T1_1_3_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_03_Hierarchy_P1T1_1_3_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1_4_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_03_Hierarchy_P1T1_1_4_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_03_Hierarchy_P1T1_1_4_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_1_4_1_2_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_03_Hierarchy_P1T1_1_4_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_03_Hierarchy_P1T1_1_4_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_03_Hierarchy_Project1_ChildItemzCount\") + 20)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_03_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_03_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_03_Hierarchy_P1PL_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_03_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_03_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_03_Hierarchy_P1T1_ChildItemzCount\") + 20)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_03_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_03_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_03_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Itemz 1.1 to Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_03_Hierarchy_P1T1_1_1_ItemzId}}?TargetId={{06_03_Hierarchy_P1PL_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_03_Hierarchy_P1T1_1_1_ItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{06_03_Hierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_03_Hierarchy_Project1_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_03_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_03_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_03_Hierarchy_P1PL_ChildItemzCount\") + 3)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_03_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_03_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_03_Hierarchy_P1T1_ChildItemzCount\") - 3)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10 ) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_03_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_03_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_03_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_03_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_03_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_03_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_03_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_03_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz between 0 and 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"SINGLE Itemz BETWEEN 0 & 1 AS 0.1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{06_03_Hierarchy_P1T1_SINGLEITEMZ_TOP}}&secondItemzId={{06_03_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{06_03_Hierarchy_P1T1_SINGLEITEMZ_TOP}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{06_03_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_03_Hierarchy_Project1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_03_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_03_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_03_Hierarchy_P1PL_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_03_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_03_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_03_Hierarchy_P1T1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_03_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10 + 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_03_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_03_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_03_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1_SINGLEITEMZ_BETWEEN",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(3);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Itemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_03_Hierarchy_1stProject_HeirarchyId\") + \"2/0.1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_03_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_03_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_03_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_03_Hierarchy_P1T1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_03_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_03_Hierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_03_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_03_Hierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_03_Hierarchy_P1T1_SINGLEITEMZ_TOP}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_03_Hierarchy_P1T1_SINGLEITEMZ_TOP}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz BETWEEN",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_03_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_03_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz BOTTOM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_03_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_03_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 06_03_Hierarchy 10 Itemz BULK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const itemzIds_06_03_Hierarchy = pm.variables.get('06_03_Hierarchy_itemzIdsArray');\r",
											"\r",
											"if (Array.isArray(itemzIds_06_03_Hierarchy) && itemzIds_06_03_Hierarchy.length > 0) {\r",
											"    pm.variables.set('06_03_Hierarchy_BULK_CurrentItemzID', itemzIds_06_03_Hierarchy.shift())\r",
											"        \r",
											"}\r",
											"\r",
											"if (Array.isArray(itemzIds_06_03_Hierarchy) && itemzIds_06_03_Hierarchy.length > 0) {\r",
											"    postman.setNextRequest('DELETE 06_03_Hierarchy 10 Itemz BULK');\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_03_Hierarchy_BULK_CurrentItemzID}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_03_Hierarchy_BULK_CurrentItemzID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{06_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{06_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{06_03_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{06_03_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "06_04 VerifyMovingMultipleSetOfSubItemzToAnotherItemzType",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_04_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"06_04_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"06_04_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{06_04_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{06_04_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{06_04_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{06_04_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"06_04_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_04_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_04_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{06_04_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_04_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_04_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_04_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_04_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_04_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_04_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{06_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{06_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{06_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{06_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_SINGLEITEMZ_TOP\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1 at TOP\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Associate Itemz1 With ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" pm.test(\"Status code is 200,201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"itemzId\": \"{{06_04_Hierarchy_P1T1_SINGLEITEMZ_TOP}}\",\r\n  \"itemzTypeId\": \"{{06_04_Hierarchy_P1T1_ItemzTypeId}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs?AtBottomOfChildNodes=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs"
									],
									"query": [
										{
											"key": "AtBottomOfChildNodes",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST 10 Itemz in 1st ItemzType BULK",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const response =  pm.response.json();",
											"const itemzIds = response.map(itemz => itemz.id);",
											"console.log(itemzIds);",
											"pm.variables.set('06_04_Hierarchy_itemzIdsArray', itemzIds);",
											"pm.variables.set('06_04_Hierarchy_itemzIdsArray_02', itemzIds);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Item 6\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 7\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 8\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 9\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 10\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 11\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 12\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 13\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 14\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 15\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{06_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{06_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at BOTTOM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1 at BOTTOM \",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Associate Itemz1 With ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" pm.test(\"Status code is 200,201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"itemzId\": \"{{06_04_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}\",\r\n  \"itemzTypeId\": \"{{06_04_Hierarchy_P1T1_ItemzTypeId}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs?AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs"
									],
									"query": [
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_04_Hierarchy_Project1_ChildItemzCount\") + 4 + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_04_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_04_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count ${expectedItemzCount}\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_04_Hierarchy_P1PL_ChildItemzCount\") + expectedItemzCount)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_04_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_04_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_04_Hierarchy_P1T1_ChildItemzCount\") + 4 + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_04_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_04_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_04_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_04_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_04_Hierarchy_P1T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_04_Hierarchy_P1T1_1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_04_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_04_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New 1.1_1 between 1.1 and 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1__1_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1_1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{06_04_Hierarchy_P1T1_1_1_ItemzId}}&secondItemzId={{06_04_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{06_04_Hierarchy_P1T1_1_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{06_04_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New 1.1_1_1 between 1.1 and 1.1_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"// var jsonData = pm.response.json();",
											"// var tempNew1stItemzId =   jsonData.id;",
											"// pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1__1_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1_1_1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{06_04_Hierarchy_P1T1_1_1_ItemzId}}&secondItemzId={{06_04_Hierarchy_P1T1_1__1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{06_04_Hierarchy_P1T1_1_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{06_04_Hierarchy_P1T1_1__1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1_3_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_04_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_04_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1_4_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_04_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_04_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_04_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_04_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_04_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_04_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1_3_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_04_Hierarchy_P1T1_1_3_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_04_Hierarchy_P1T1_1_3_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1_3_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_04_Hierarchy_P1T1_1_3_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_04_Hierarchy_P1T1_1_3_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1_4_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_04_Hierarchy_P1T1_1_4_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_04_Hierarchy_P1T1_1_4_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1_4_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_04_Hierarchy_P1T1_1_4_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_04_Hierarchy_P1T1_1_4_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1_2_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_04_Hierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_04_Hierarchy_P1T1_1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1_2_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_04_Hierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_04_Hierarchy_P1T1_1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1_3_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_04_Hierarchy_P1T1_1_3_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_04_Hierarchy_P1T1_1_3_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1_3_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_04_Hierarchy_P1T1_1_3_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_04_Hierarchy_P1T1_1_3_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1_4_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_04_Hierarchy_P1T1_1_4_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_04_Hierarchy_P1T1_1_4_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_1_4_1_2_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_04_Hierarchy_P1T1_1_4_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_04_Hierarchy_P1T1_1_4_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_04_Hierarchy_Project1_ChildItemzCount\") + 20)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_04_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_04_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_04_Hierarchy_P1PL_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_04_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_04_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_04_Hierarchy_P1T1_ChildItemzCount\") + 20)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Itemz 1.1 to Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_04_Hierarchy_P1T1_1_1_ItemzId}}?TargetId={{06_04_Hierarchy_P1PL_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_04_Hierarchy_P1T1_1_1_ItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{06_04_Hierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_04_Hierarchy_Project1_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_04_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_04_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_04_Hierarchy_P1PL_ChildItemzCount\") + 3)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_04_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_04_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_04_Hierarchy_P1T1_ChildItemzCount\") - 3)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_04_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_04_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Itemz 1.2 to Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_04_Hierarchy_P1T1_1_2_ItemzId}}?TargetId={{06_04_Hierarchy_P1PL_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_04_Hierarchy_P1T1_1_2_ItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{06_04_Hierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_04_Hierarchy_Project1_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_04_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_04_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_04_Hierarchy_P1PL_ChildItemzCount\") + 5)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_04_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_04_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_04_Hierarchy_P1T1_ChildItemzCount\") - 5)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1 + 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"1/2/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_04_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_04_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz between 0 and 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"SINGLE Itemz BETWEEN 0 & 1 AS 0.1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{06_04_Hierarchy_P1T1_SINGLEITEMZ_TOP}}&secondItemzId={{06_04_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{06_04_Hierarchy_P1T1_SINGLEITEMZ_TOP}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{06_04_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_04_Hierarchy_Project1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_04_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_04_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_04_Hierarchy_P1PL_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_04_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_04_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_04_Hierarchy_P1T1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_04_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10 + 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1_SINGLEITEMZ_BETWEEN",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(3);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Itemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"2/0.1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_04_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_04_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST over 06_04_Hierarchy 10 Itemz BULK Parking Lot",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const itemzIds_06_04_02_Hierarchy = pm.variables.get('06_04_Hierarchy_itemzIdsArray_02');\r",
											"\r",
											"if (Array.isArray(itemzIds_06_04_02_Hierarchy) && itemzIds_06_04_02_Hierarchy.length > 0) {\r",
											"    pm.variables.set('06_04_Hierarchy_BULK_CurrentItemzID_02', itemzIds_06_04_02_Hierarchy.shift())\r",
											"        \r",
											"}\r",
											"\r",
											"if (Array.isArray(itemzIds_06_04_02_Hierarchy) && itemzIds_06_04_02_Hierarchy.length > 0) {\r",
											"    pm.execution.setNextRequest('POST over 06_04_Hierarchy 10 Itemz BULK Parking Lot');\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_04_Hierarchy_BULK_CurrentItemzID_02}}?TargetId={{06_04_Hierarchy_P1PL_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_04_Hierarchy_BULK_CurrentItemzID_02}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{06_04_Hierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10 + 1 - 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_04_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_04_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_04_Hierarchy_P1T1_1_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_04_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_04_Hierarchy_P1T1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_04_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_04_Hierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_04_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_04_Hierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_04_Hierarchy_P1T1_SINGLEITEMZ_TOP}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_04_Hierarchy_P1T1_SINGLEITEMZ_TOP}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz BETWEEN",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_04_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_04_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz BOTTOM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_04_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_04_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 06_04_Hierarchy 10 Itemz BULK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const itemzIds_06_04_Hierarchy = pm.variables.get('06_04_Hierarchy_itemzIdsArray');\r",
											"\r",
											"if (Array.isArray(itemzIds_06_04_Hierarchy) && itemzIds_06_04_Hierarchy.length > 0) {\r",
											"    pm.variables.set('06_04_Hierarchy_BULK_CurrentItemzID', itemzIds_06_04_Hierarchy.shift())\r",
											"        \r",
											"}\r",
											"\r",
											"if (Array.isArray(itemzIds_06_04_Hierarchy) && itemzIds_06_04_Hierarchy.length > 0) {\r",
											"    postman.setNextRequest('DELETE 06_04_Hierarchy 10 Itemz BULK');\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_04_Hierarchy_BULK_CurrentItemzID}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_04_Hierarchy_BULK_CurrentItemzID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{06_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{06_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{06_04_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{06_04_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "06_05 VerifyCreatingNewItemzOnTOPofChildItemz",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_05_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"06_05_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"06_05_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{06_05_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{06_05_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"06_05_Hierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{06_05_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{06_05_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"06_05_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_05_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_05_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{06_05_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(2);});     \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"1/\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/\");});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_05_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_05_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_05_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_05_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_05_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_05_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_05_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_05_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_SINGLEITEMZ_TOP\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1 at TOP\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/CreateSingleItemz/{{06_05_Hierarchy_P1T1_ItemzTypeId}}?AtBottomOfChildNodes=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"CreateSingleItemz",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									],
									"query": [
										{
											"key": "AtBottomOfChildNodes",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST 10 Itemz in 1st ItemzType BULK",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const response =  pm.response.json();",
											"const itemzIds = response.map(itemz => itemz.id);",
											"console.log(itemzIds);",
											"pm.variables.set('06_05_Hierarchy_itemzIdsArray', itemzIds);",
											"pm.variables.set('06_05_Hierarchy_itemzIdsArray_02', itemzIds);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Item 6\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 7\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 8\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 9\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 10\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 11\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 12\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 13\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 14\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 15\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at BOTTOM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1 at BOTTOM \",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/CreateSingleItemz/{{06_05_Hierarchy_P1T1_ItemzTypeId}}?AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"CreateSingleItemz",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									],
									"query": [
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_Project1_ChildItemzCount\") + 4 + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_05_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_05_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count ${expectedItemzCount}\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_P1PL_ChildItemzCount\") + expectedItemzCount)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_05_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_05_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_P1T1_ChildItemzCount\") + 4 + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_05_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_05_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_05_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_05_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_05_Hierarchy_P1T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_05_Hierarchy_P1T1_1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_05_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_05_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New 1.1_1 between 1.1 and 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_1__1_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1_1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{06_05_Hierarchy_P1T1_1_1_ItemzId}}&secondItemzId={{06_05_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{06_05_Hierarchy_P1T1_1_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{06_05_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New 1.1_1_1 between 1.1 and 1.1_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"// var jsonData = pm.response.json();",
											"// var tempNew1stItemzId =   jsonData.id;",
											"// pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_1__1_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1_1_1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{06_05_Hierarchy_P1T1_1_1_ItemzId}}&secondItemzId={{06_05_Hierarchy_P1T1_1__1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{06_05_Hierarchy_P1T1_1_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{06_05_Hierarchy_P1T1_1__1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_05_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_05_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_05_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_05_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_1_2_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_05_Hierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_05_Hierarchy_P1T1_1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_1_2_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_05_Hierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_05_Hierarchy_P1T1_1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_Project1_ChildItemzCount\") + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_05_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_05_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_P1PL_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_05_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_05_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_P1T1_ChildItemzCount\") + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Itemz 1.1 to Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_05_Hierarchy_P1T1_1_1_ItemzId}}?TargetId={{06_05_Hierarchy_P1PL_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_05_Hierarchy_P1T1_1_1_ItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{06_05_Hierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_Project1_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_05_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_05_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_P1PL_ChildItemzCount\") + 3)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_05_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_05_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_P1T1_ChildItemzCount\") - 3)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_05_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_05_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Itemz 1.2 to Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_05_Hierarchy_P1T1_1_2_ItemzId}}?TargetId={{06_05_Hierarchy_P1PL_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_05_Hierarchy_P1T1_1_2_ItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{06_05_Hierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_Project1_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_05_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_05_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_P1PL_ChildItemzCount\") + 5)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_05_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_05_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_P1T1_ChildItemzCount\") - 5)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1 + 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"1/2/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_05_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_05_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz between 0 and 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"SINGLE Itemz BETWEEN 0 & 1 AS 0.1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{06_05_Hierarchy_P1T1_SINGLEITEMZ_TOP}}&secondItemzId={{06_05_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{06_05_Hierarchy_P1T1_SINGLEITEMZ_TOP}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{06_05_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_Project1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_05_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_05_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_P1PL_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_05_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_05_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_P1T1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10 + 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST over 06_05_Hierarchy 10 Itemz BULK Parking Lot",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const itemzIds_06_05_02_Hierarchy = pm.variables.get('06_05_Hierarchy_itemzIdsArray_02');\r",
											"\r",
											"if (Array.isArray(itemzIds_06_05_02_Hierarchy) && itemzIds_06_05_02_Hierarchy.length > 0) {\r",
											"    pm.variables.set('06_05_Hierarchy_BULK_CurrentItemzID_02', itemzIds_06_05_02_Hierarchy.shift())\r",
											"        \r",
											"}\r",
											"\r",
											"if (Array.isArray(itemzIds_06_05_02_Hierarchy) && itemzIds_06_05_02_Hierarchy.length > 0) {\r",
											"     pm.execution.setNextRequest('POST over 06_05_Hierarchy 10 Itemz BULK Parking Lot');\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_05_Hierarchy_BULK_CurrentItemzID_02}}?TargetId={{06_05_Hierarchy_P1PL_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_05_Hierarchy_BULK_CurrentItemzID_02}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{06_05_Hierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_Project1_ChildItemzCount\"))",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_05_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_05_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_P1PL_ChildItemzCount\") + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_05_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_05_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_P1T1_ChildItemzCount\") - 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10 + 1 - 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1 + 1 + 10 ) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"1/12/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_05_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_05_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at TOP 2nd",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_SINGLEITEMZ_TOP_2nd\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1 at TOP 2nd\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/CreateSingleItemz/{{06_05_Hierarchy_P1T1_ItemzTypeId}}?AtBottomOfChildNodes=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"CreateSingleItemz",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									],
									"query": [
										{
											"key": "AtBottomOfChildNodes",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_Project1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_05_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_05_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_P1PL_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_05_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_05_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_P1T1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10 + 1 - 10 + 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/-1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1 + 1 + 10 ) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"1/12/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_05_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_05_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at BOTTOM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM_2nd\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1 at BOTTOM 2nd\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/CreateSingleItemz/{{06_05_Hierarchy_P1T1_ItemzTypeId}}?AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"CreateSingleItemz",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									],
									"query": [
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_Project1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_05_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_05_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_P1PL_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_05_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_05_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_05_Hierarchy_P1T1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_05_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10 + 1 - 10 + 1 + 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/-1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"2/14/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1 + 1 + 10 ) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_05_Hierarchy_1stProject_HeirarchyId\") + \"1/12/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_05_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_05_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_05_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_05_Hierarchy_P1T1_1_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_05_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_05_Hierarchy_P1T1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_05_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_05_Hierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_05_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_05_Hierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz TOP 2nd",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_05_Hierarchy_P1T1_SINGLEITEMZ_TOP_2nd}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_05_Hierarchy_P1T1_SINGLEITEMZ_TOP_2nd}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_05_Hierarchy_P1T1_SINGLEITEMZ_TOP}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_05_Hierarchy_P1T1_SINGLEITEMZ_TOP}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz BETWEEN",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_05_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_05_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz BOTTOM 2nd",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_05_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM_2nd}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_05_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM_2nd}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz BOTTOM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_05_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_05_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 06_05_Hierarchy 10 Itemz BULK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const itemzIds_06_05_Hierarchy = pm.variables.get('06_05_Hierarchy_itemzIdsArray');\r",
											"\r",
											"if (Array.isArray(itemzIds_06_05_Hierarchy) && itemzIds_06_05_Hierarchy.length > 0) {\r",
											"    pm.variables.set('06_05_Hierarchy_BULK_CurrentItemzID', itemzIds_06_05_Hierarchy.shift())\r",
											"        \r",
											"}\r",
											"\r",
											"if (Array.isArray(itemzIds_06_05_Hierarchy) && itemzIds_06_05_Hierarchy.length > 0) {\r",
											"    postman.setNextRequest('DELETE 06_05_Hierarchy 10 Itemz BULK');\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_05_Hierarchy_BULK_CurrentItemzID}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_05_Hierarchy_BULK_CurrentItemzID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{06_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{06_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{06_05_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{06_05_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "06_06 MovingItemzTypeBetweenProjects",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_06_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"06_06_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"06_06_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{06_06_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{06_06_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P1 Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{06_06_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{06_06_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"06_06_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_06_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_06_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Project 2nd",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_06_Hierarchy_2ndProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"06_06_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"06_06_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{06_06_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{06_06_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P2 Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P2PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{06_06_Hierarchy_2ndProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{06_06_Hierarchy_2ndProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P2 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"06_06_Hierarchy_2ndProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_06_Hierarchy_2ndProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_06_Hierarchy_2ndProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Started in Project 1 as ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{06_06_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P1T2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P1T2_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Started in Project 1 as ItemzType 2\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{06_06_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(3);});     \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_06_Hierarchy_1stProject_HeirarchyId\") + \"1/\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_06_Hierarchy_1stProject_HeirarchyId\") + \"3/\");});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_06_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_06_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P2T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P2T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Started in Project 2 as ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{06_06_Hierarchy_2ndProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P2T2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P2T2_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Started in Project 2 as ItemzType 2\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{06_06_Hierarchy_2ndProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(3);});     \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_06_Hierarchy_2ndProject_HeirarchyId\") + \"1/\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_06_Hierarchy_2ndProject_HeirarchyId\") + \"3/\");});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_06_Hierarchy_2ndProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_06_Hierarchy_2ndProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_06_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_06_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by P1T2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P1T2_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P1T2_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_06_Hierarchy_P1T2_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_06_Hierarchy_P1T2_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_06_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_Project2_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_Project2_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_06_Hierarchy_2ndProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_06_Hierarchy_2ndProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by P2T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P2T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P2T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_06_Hierarchy_P2T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_06_Hierarchy_P2T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by P2T2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P2T2_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P2T2_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_06_Hierarchy_P2T2_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_06_Hierarchy_P2T2_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P2T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);});     \r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_06_Hierarchy_2ndProject_HeirarchyId\") + \"2/\"); });    \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {     \r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });  \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_06_Hierarchy_P2T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_06_Hierarchy_P2T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{06_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{06_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{06_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{06_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 3 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_3rdItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 3\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{06_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{06_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_06_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_06_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_06_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_06_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_06_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_06_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_06_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_06_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_06_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_06_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_06_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_06_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_06_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_06_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_2_3_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.3\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_06_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_06_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_3_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_06_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_06_Hierarchy_P1T1_3rdItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_3_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_06_Hierarchy_P1T1_3_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_06_Hierarchy_P1T1_3_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_3_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_06_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_06_Hierarchy_P1T1_3rdItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_3_2_1_ItemzId\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_06_Hierarchy_P1T1_3_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_06_Hierarchy_P1T1_3_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_3_2_2_ItemzId\",tempNew1stItemzId);",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_06_Hierarchy_P1T1_3_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_06_Hierarchy_P1T1_3_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_06_Hierarchy_Project1_ChildItemzCount\") + 3 + 13)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_06_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_06_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(3);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_06_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_06_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_06_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\");});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 1 to P1T2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_06_Hierarchy_P1T1_1stItemzId}}?TargetId={{06_06_Hierarchy_P1T2_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_06_Hierarchy_P1T1_1stItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{06_06_Hierarchy_P1T2_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_06_Hierarchy_P1T1_ChildItemzCount\") + 3 + 13 -6)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by P1T2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P1T2_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_06_Hierarchy_P1T2_ChildItemzCount\") + 6)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P1T2_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_06_Hierarchy_P1T2_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_06_Hierarchy_P1T2_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"     \r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(2);    }); \r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_06_Hierarchy_1stProject_HeirarchyId\") + \"2/\");        });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_06_Hierarchy_1stProject_HeirarchyId\") + \"2/2/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_06_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\");});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Between P2T1 and P2T2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/MoveItemzTypeBetweenItemzTypes?movingItemzTypeId={{06_06_Hierarchy_P1T1_ItemzTypeId}}&firstItemzTypeId={{06_06_Hierarchy_P2T1_ItemzTypeId}}&secondItemzTypeId={{06_06_Hierarchy_P2T2_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"MoveItemzTypeBetweenItemzTypes"
									],
									"query": [
										{
											"key": "movingItemzTypeId",
											"value": "{{06_06_Hierarchy_P1T1_ItemzTypeId}}"
										},
										{
											"key": "firstItemzTypeId",
											"value": "{{06_06_Hierarchy_P2T1_ItemzTypeId}}"
										},
										{
											"key": "secondItemzTypeId",
											"value": "{{06_06_Hierarchy_P2T2_ItemzTypeId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T2 Between P1T1 and P2T2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/MoveItemzTypeBetweenItemzTypes?movingItemzTypeId={{06_06_Hierarchy_P1T2_ItemzTypeId}}&firstItemzTypeId={{06_06_Hierarchy_P1T1_ItemzTypeId}}&secondItemzTypeId={{06_06_Hierarchy_P2T2_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"MoveItemzTypeBetweenItemzTypes"
									],
									"query": [
										{
											"key": "movingItemzTypeId",
											"value": "{{06_06_Hierarchy_P1T2_ItemzTypeId}}"
										},
										{
											"key": "firstItemzTypeId",
											"value": "{{06_06_Hierarchy_P1T1_ItemzTypeId}}"
										},
										{
											"key": "secondItemzTypeId",
											"value": "{{06_06_Hierarchy_P2T2_ItemzTypeId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1PL Between P2PL and P2T1 WRONG",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 400 or 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400,404]);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/MoveItemzTypeBetweenItemzTypes?movingItemzTypeId={{06_06_Hierarchy_P1PL_ItemzTypeId}}&firstItemzTypeId={{06_06_Hierarchy_P2PL_ItemzTypeId}}&secondItemzTypeId={{06_06_Hierarchy_P2T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"MoveItemzTypeBetweenItemzTypes"
									],
									"query": [
										{
											"key": "movingItemzTypeId",
											"value": "{{06_06_Hierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "firstItemzTypeId",
											"value": "{{06_06_Hierarchy_P2PL_ItemzTypeId}}"
										},
										{
											"key": "secondItemzTypeId",
											"value": "{{06_06_Hierarchy_P2T1_ItemzTypeId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_06_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_06_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_06_Hierarchy_P1T1_ChildItemzCount\") )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by P1T2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P1T2_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_06_Hierarchy_P1T2_ChildItemzCount\"))",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P1T2_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_06_Hierarchy_P1T2_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_06_Hierarchy_P1T2_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_Project2_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_06_Hierarchy_Project2_ChildItemzCount\") + 3 + 13)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_Project2_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_06_Hierarchy_2ndProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_06_Hierarchy_2ndProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by P2T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P2T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_06_Hierarchy_P2T1_ChildItemzCount\") + 0 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P2T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_06_Hierarchy_P2T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_06_Hierarchy_P2T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by P2T2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P2T2_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_06_Hierarchy_P2T2_ChildItemzCount\") + 0 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P2T2_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_06_Hierarchy_P2T2_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_06_Hierarchy_P2T2_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"     \r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(2); });    \r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_06_Hierarchy_2ndProject_HeirarchyId\") + \"2.1/\");   });     \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_06_Hierarchy_2ndProject_HeirarchyId\") + \"2.1/2/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_06_Hierarchy_2ndProject_HeirarchyId\") + \"2.1/3/\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T2 to P1 at BOTTOM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{06_06_Hierarchy_P1T2_ItemzTypeId}}?TargetProjectId={{06_06_Hierarchy_1stProjectId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{06_06_Hierarchy_P1T2_ItemzTypeId}}"
									],
									"query": [
										{
											"key": "TargetProjectId",
											"value": "{{06_06_Hierarchy_1stProjectId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 to P1 at TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{06_06_Hierarchy_P1T1_ItemzTypeId}}?TargetProjectId={{06_06_Hierarchy_1stProjectId}}&AtBottomOfChildNodes=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{06_06_Hierarchy_P1T1_ItemzTypeId}}"
									],
									"query": [
										{
											"key": "TargetProjectId",
											"value": "{{06_06_Hierarchy_1stProjectId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 1 to P1T1 at TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_06_Hierarchy_P1T1_1stItemzId}}?TargetId={{06_06_Hierarchy_P1T1_ItemzTypeId}}&AtBottomOfChildNodes=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_06_Hierarchy_P1T1_1stItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{06_06_Hierarchy_P1T1_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "false"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Between P1PL and P1T2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/MoveItemzTypeBetweenItemzTypes?movingItemzTypeId={{06_06_Hierarchy_P1T1_ItemzTypeId}}&firstItemzTypeId={{06_06_Hierarchy_P1PL_ItemzTypeId}}&secondItemzTypeId={{06_06_Hierarchy_P1T2_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"MoveItemzTypeBetweenItemzTypes"
									],
									"query": [
										{
											"key": "movingItemzTypeId",
											"value": "{{06_06_Hierarchy_P1T1_ItemzTypeId}}"
										},
										{
											"key": "firstItemzTypeId",
											"value": "{{06_06_Hierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "secondItemzTypeId",
											"value": "{{06_06_Hierarchy_P1T2_ItemzTypeId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_06_Hierarchy_Project1_ChildItemzCount\") + 3 + 13)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_06_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_06_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_06_Hierarchy_P1T1_ChildItemzCount\") + 6 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by P1T2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P1T2_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_06_Hierarchy_P1T2_ChildItemzCount\") - 6 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P1T2_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_06_Hierarchy_P1T2_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_06_Hierarchy_P1T2_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_Project2_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_06_Hierarchy_Project2_ChildItemzCount\") - 3 - 13)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_Project2_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_06_Hierarchy_2ndProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_06_Hierarchy_2ndProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by P2T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P2T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_06_Hierarchy_P2T1_ChildItemzCount\") + 0 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P2T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_06_Hierarchy_P2T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_06_Hierarchy_P2T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by P2T2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P2T2_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_06_Hierarchy_P2T2_ChildItemzCount\") + 0 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_06_Hierarchy_P2T2_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_06_Hierarchy_P2T2_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_06_Hierarchy_P2T2_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(3);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_06_Hierarchy_1stProject_HeirarchyId\") + \"1.1/\");        });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_06_Hierarchy_1stProject_HeirarchyId\") + \"1.1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_06_Hierarchy_1stProject_HeirarchyId\") + \"1.1/3/\");});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_06_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_06_Hierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_06_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_06_Hierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_06_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_06_Hierarchy_P1T1_3rdItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{06_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{06_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{06_06_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{06_06_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 2nd Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{06_06_Hierarchy_2ndProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{06_06_Hierarchy_2ndProjectId}}"
									]
								}
							},
							"response": []
						}
					],
					"description": "Purpose of this test is to create a structure of Itemz hierarchy including subitemz that is few levels deep in Project 1. Also create Project Two with just ItemzTypes. Then move some data within different ItemzType in Project 1 and later move All ItemzType in Project 2 but without Project 1 Parking Lot as it's System ItemzType that can't be moved.\n\nUndo all the move and bring project back to how it was created.\n\nFinally perform clean-up."
				},
				{
					"name": "06_07 MovingParkingLogWithinProject",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_07_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"06_07_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"06_07_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{06_07_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{06_07_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P1 Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{06_07_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{06_07_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"06_07_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_07_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_07_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Project 2nd",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_07_Hierarchy_2ndProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"06_07_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"06_07_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{06_07_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{06_07_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET P2 Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P2PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{06_07_Hierarchy_2ndProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{06_07_Hierarchy_2ndProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P2 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"06_07_Hierarchy_2ndProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_07_Hierarchy_2ndProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_07_Hierarchy_2ndProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Started in Project 1 as ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{06_07_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P1T2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P1T2_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Started in Project 1 as ItemzType 2\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{06_07_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(3);});     \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"1/\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"3/\");});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_07_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_07_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P2T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P2T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Started in Project 2 as ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{06_07_Hierarchy_2ndProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P2T2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P2T2_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Started in Project 2 as ItemzType 2\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{06_07_Hierarchy_2ndProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(3);});     \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_2ndProject_HeirarchyId\") + \"1/\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_2ndProject_HeirarchyId\") + \"3/\");});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_07_Hierarchy_2ndProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_07_Hierarchy_2ndProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_07_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_07_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_07_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_07_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by P1T2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_07_Hierarchy_P1T2_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_07_Hierarchy_P1T2_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_07_Hierarchy_P1T2_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_07_Hierarchy_P1T2_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_07_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_07_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{06_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{06_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{06_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{06_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 3 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_3rdItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 3\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{06_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{06_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_07_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_07_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_07_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_07_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_07_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_07_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_07_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_07_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_07_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_07_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_07_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_07_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_07_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_07_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_2_3_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.3\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_07_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_07_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_3_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_07_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_07_Hierarchy_P1T1_3rdItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_3_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_07_Hierarchy_P1T1_3_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_07_Hierarchy_P1T1_3_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_3_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_07_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_07_Hierarchy_P1T1_3rdItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_3_2_1_ItemzId\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_07_Hierarchy_P1T1_3_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_07_Hierarchy_P1T1_3_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_3_2_2_ItemzId\",tempNew1stItemzId);",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{06_07_Hierarchy_P1T1_3_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{06_07_Hierarchy_P1T1_3_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_07_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_07_Hierarchy_Project1_ChildItemzCount\") + 3 + 13)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_07_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_07_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_07_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_07_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_07_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(3);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\");});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 1 to P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_07_Hierarchy_P1T1_1stItemzId}}?TargetId={{06_07_Hierarchy_P1PL_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_07_Hierarchy_P1T1_1stItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{06_07_Hierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_07_Hierarchy_P1T1_ChildItemzCount\") + 3 + 13 -6)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_07_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by P1T2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_07_Hierarchy_P1T2_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_07_Hierarchy_P1T2_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_07_Hierarchy_P1T2_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{06_07_Hierarchy_P1T2_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{06_07_Hierarchy_P1T2_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\");});     \r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_07_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_07_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"     \r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(2);    }); \r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2/\");        });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2/2/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\");});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1PL Between P2PL and P2T1 WRONG",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 400 or 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400,404]);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/MoveItemzTypeBetweenItemzTypes?movingItemzTypeId={{06_07_Hierarchy_P1PL_ItemzTypeId}}&firstItemzTypeId={{06_07_Hierarchy_P2PL_ItemzTypeId}}&secondItemzTypeId={{06_07_Hierarchy_P2T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"MoveItemzTypeBetweenItemzTypes"
									],
									"query": [
										{
											"key": "movingItemzTypeId",
											"value": "{{06_07_Hierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "firstItemzTypeId",
											"value": "{{06_07_Hierarchy_P2PL_ItemzTypeId}}"
										},
										{
											"key": "secondItemzTypeId",
											"value": "{{06_07_Hierarchy_P2T1_ItemzTypeId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1PL Between P1T1 and P1T2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/MoveItemzTypeBetweenItemzTypes?movingItemzTypeId={{06_07_Hierarchy_P1PL_ItemzTypeId}}&firstItemzTypeId={{06_07_Hierarchy_P1T1_ItemzTypeId}}&secondItemzTypeId={{06_07_Hierarchy_P1T2_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"MoveItemzTypeBetweenItemzTypes"
									],
									"query": [
										{
											"key": "movingItemzTypeId",
											"value": "{{06_07_Hierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "firstItemzTypeId",
											"value": "{{06_07_Hierarchy_P1T1_ItemzTypeId}}"
										},
										{
											"key": "secondItemzTypeId",
											"value": "{{06_07_Hierarchy_P1T2_ItemzTypeId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2.1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2.1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2.1/1/\");});     \r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_07_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_07_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"     \r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(2);    }); \r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2/\");        });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2/2/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\");});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1PL to P1 at BOTTOM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{06_07_Hierarchy_P1PL_ItemzTypeId}}?TargetProjectId={{06_07_Hierarchy_1stProjectId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{06_07_Hierarchy_P1PL_ItemzTypeId}}"
									],
									"query": [
										{
											"key": "TargetProjectId",
											"value": "{{06_07_Hierarchy_1stProjectId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"4/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"4/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"4/1/\");});     \r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_07_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_07_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"     \r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(2);    }); \r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2/\");        });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2/2/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\");});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1PL to P1 at TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{06_07_Hierarchy_P1PL_ItemzTypeId}}?TargetProjectId={{06_07_Hierarchy_1stProjectId}}&AtBottomOfChildNodes=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{06_07_Hierarchy_P1PL_ItemzTypeId}}"
									],
									"query": [
										{
											"key": "TargetProjectId",
											"value": "{{06_07_Hierarchy_1stProjectId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\");});     \r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_07_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_07_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"     \r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(2);    }); \r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2/\");        });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2/2/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\");});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 1 to P1T1 at TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_07_Hierarchy_P1T1_1stItemzId}}?TargetId={{06_07_Hierarchy_P1T1_ItemzTypeId}}&AtBottomOfChildNodes=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_07_Hierarchy_P1T1_1stItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{06_07_Hierarchy_P1T1_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "false"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"06_07_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"06_07_Hierarchy_Project1_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"06_07_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{06_07_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{06_07_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_07_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_07_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"     \r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(3);    }); \r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2/\");        });\r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"06_07_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\");});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{06_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{06_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_07_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_07_Hierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_07_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_07_Hierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{06_07_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{06_07_Hierarchy_P1T1_3rdItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{06_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{06_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{06_07_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{06_07_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 2nd Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{06_07_Hierarchy_2ndProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{06_07_Hierarchy_2ndProjectId}}"
									]
								}
							},
							"response": []
						}
					],
					"description": "Purpose of this test is to move Parking Lot ItemzType between two other ItemzType within project and then move it back to TOP of the child nodes wihtin Project Hierarchy Record Type.\n\nCheck at various stages\n\nPerform Clean-up at the end."
				}
			]
		},
		{
			"name": "0007 Itemz",
			"item": [
				{
					"name": "07_01 VerifyDeleteItemzTypeAndItemzAssociation",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_01_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"07_01_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"07_01_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{07_01_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{07_01_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"07_01_Hierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{07_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{07_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"07_01_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{07_01_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_SINGLEITEMZ_TOP\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1 at TOP\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Associate Itemz1 With ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" pm.test(\"Status code is 200,201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"itemzId\": \"{{07_01_Hierarchy_P1T1_SINGLEITEMZ_TOP}}\",\r\n  \"itemzTypeId\": \"{{07_01_Hierarchy_P1T1_ItemzTypeId}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs?AtBottomOfChildNodes=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs"
									],
									"query": [
										{
											"key": "AtBottomOfChildNodes",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST 10 Itemz in 1st ItemzType BULK",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const response =  pm.response.json();",
											"const itemzIds = response.map(itemz => itemz.id);",
											"console.log(itemzIds);",
											"pm.variables.set('07_01_Hierarchy_itemzIdsArray', itemzIds);",
											"pm.variables.set('07_01_Hierarchy_itemzIdsArray_02', itemzIds);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Item 6\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 7\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 8\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 9\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 10\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 11\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 12\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 13\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 14\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 15\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at BOTTOM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1 at BOTTOM \",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Associate Itemz1 With ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" pm.test(\"Status code is 200,201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"itemzId\": \"{{07_01_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}\",\r\n  \"itemzTypeId\": \"{{07_01_Hierarchy_P1T1_ItemzTypeId}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs?AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs"
									],
									"query": [
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_01_Hierarchy_Project1_ChildItemzCount\") + 4 + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_01_Hierarchy_P1T1_ChildItemzCount\") + 4 + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_01_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_01_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_01_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_01_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_01_Hierarchy_P1T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_01_Hierarchy_P1T1_1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_01_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_01_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New 1.1_1 between 1.1 and 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_1__1_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1_1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{07_01_Hierarchy_P1T1_1_1_ItemzId}}&secondItemzId={{07_01_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{07_01_Hierarchy_P1T1_1_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_01_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New 1.1_1_1 between 1.1 and 1.1_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"// var jsonData = pm.response.json();",
											"// var tempNew1stItemzId =   jsonData.id;",
											"// pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_1__1_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1_1_1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{07_01_Hierarchy_P1T1_1_1_ItemzId}}&secondItemzId={{07_01_Hierarchy_P1T1_1__1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{07_01_Hierarchy_P1T1_1_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_01_Hierarchy_P1T1_1__1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_01_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_01_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_01_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_01_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_1_2_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_01_Hierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_01_Hierarchy_P1T1_1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_1_2_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_01_Hierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_01_Hierarchy_P1T1_1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_01_Hierarchy_Project1_ChildItemzCount\") + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_01_Hierarchy_P1T1_ChildItemzCount\") + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 between 0 and 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Name\": \"SINGLE Itemz BETWEEN 0 & 1 AS 0.1\",\r\n  \"Status\": \"New\",\r\n  \"Priority\": \"Medium\",\r\n  \"Description\": \"Requirements to be described here.\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{07_01_Hierarchy_P1T1_SINGLEITEMZ_TOP}}&secondItemzId={{07_01_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{07_01_Hierarchy_P1T1_SINGLEITEMZ_TOP}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_01_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_01_Hierarchy_Project1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_01_Hierarchy_P1T1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10 + 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1.1 Association with P1T1 WRONG",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 400 or 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400,404]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"itemzId\": \"{{07_01_Hierarchy_P1T1_1_1_ItemzId}}\",\r\n  \"itemzTypeId\": \"{{07_01_Hierarchy_P1T1_ItemzTypeId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1 Association with P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"itemzId\": \"{{07_01_Hierarchy_P1T1_1stItemzId}}\",\r\n  \"itemzTypeId\": \"{{07_01_Hierarchy_P1T1_ItemzTypeId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_01_Hierarchy_Project1_ChildItemzCount\") -11 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_01_Hierarchy_P1T1_ChildItemzCount\") -11 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10 + 1 - 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 0.1 Association with P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"itemzId\": \"{{07_01_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN}}\",\r\n  \"itemzTypeId\": \"{{07_01_Hierarchy_P1T1_ItemzTypeId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_01_Hierarchy_Project1_ChildItemzCount\") - 1 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_01_Hierarchy_P1T1_ChildItemzCount\") - 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10 + 1 - 1 - 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2 Association from P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"itemzId\": \"{{07_01_Hierarchy_P1T1_2ndItemzId}}\",\r\n  \"itemzTypeId\": \"{{07_01_Hierarchy_P1T1_ItemzTypeId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_01_Hierarchy_Project1_ChildItemzCount\") - 1 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_01_Hierarchy_P1T1_ChildItemzCount\") - 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10 + 1 - 1 - 1 - 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz TOP Association  from P1T1",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"itemzId\": \"{{07_01_Hierarchy_P1T1_SINGLEITEMZ_TOP}}\",\r\n  \"itemzTypeId\": \"{{07_01_Hierarchy_P1T1_ItemzTypeId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_01_Hierarchy_Project1_ChildItemzCount\") - 1 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_01_Hierarchy_P1T1_ChildItemzCount\") - 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10 + 1 - 1 - 1 - 1 - 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz BOTTOM Association  from P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"itemzId\": \"{{07_01_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}\",\r\n  \"itemzTypeId\": \"{{07_01_Hierarchy_P1T1_ItemzTypeId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_01_Hierarchy_Project1_ChildItemzCount\") - 1 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_01_Hierarchy_P1T1_ChildItemzCount\") - 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_01_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10 + 1 - 1 - 1 - 1 - 1 -1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_01_Hierarchy_1stProject_HeirarchyId\") + \"2/12/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_01_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_01_Hierarchy_P1T1_1_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_01_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_01_Hierarchy_P1T1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_01_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_01_Hierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_01_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_01_Hierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_01_Hierarchy_P1T1_SINGLEITEMZ_TOP}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_01_Hierarchy_P1T1_SINGLEITEMZ_TOP}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz BETWEEN",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_01_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_01_Hierarchy_P1T1_SINGLEITEMZ_BETWEEN}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz BOTTOM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_01_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_01_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 07_01_Hierarchy 10 Itemz BULK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const itemzIds_07_01_Hierarchy = pm.variables.get('07_01_Hierarchy_itemzIdsArray');\r",
											"\r",
											"if (Array.isArray(itemzIds_07_01_Hierarchy) && itemzIds_07_01_Hierarchy.length > 0) {\r",
											"    pm.variables.set('07_01_Hierarchy_BULK_CurrentItemzID', itemzIds_07_01_Hierarchy.shift())\r",
											"        \r",
											"}\r",
											"\r",
											"if (Array.isArray(itemzIds_07_01_Hierarchy) && itemzIds_07_01_Hierarchy.length > 0) {\r",
											"    postman.setNextRequest('DELETE 07_01_Hierarchy 10 Itemz BULK');\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_01_Hierarchy_BULK_CurrentItemzID}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_01_Hierarchy_BULK_CurrentItemzID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{07_01_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{07_01_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{07_01_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{07_01_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "07_02 VerifyAddingItemzAtTOPandBOTTOMofSubItemz",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_02_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"07_02_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"07_02_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{07_02_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{07_02_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"07_02_Hierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{07_02_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{07_02_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"07_02_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_02_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_02_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{07_02_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_02_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_02_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_02_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_SINGLEITEMZ_TOP\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1 at TOP\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Associate Itemz1 With ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" pm.test(\"Status code is 200,201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"itemzId\": \"{{07_02_Hierarchy_P1T1_SINGLEITEMZ_TOP}}\",\r\n  \"itemzTypeId\": \"{{07_02_Hierarchy_P1T1_ItemzTypeId}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs?AtBottomOfChildNodes=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs"
									],
									"query": [
										{
											"key": "AtBottomOfChildNodes",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST 10 Itemz in 1st ItemzType BULK",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const response =  pm.response.json();",
											"const itemzIds = response.map(itemz => itemz.id);",
											"console.log(itemzIds);",
											"pm.variables.set('07_02_Hierarchy_itemzIdsArray', itemzIds);",
											"pm.variables.set('07_02_Hierarchy_itemzIdsArray_02', itemzIds);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Item 6\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 7\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 8\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 9\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 10\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 11\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 12\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 13\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 14\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 15\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at BOTTOM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1 at BOTTOM \",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Associate Itemz1 With ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" pm.test(\"Status code is 200,201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"itemzId\": \"{{07_02_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}\",\r\n  \"itemzTypeId\": \"{{07_02_Hierarchy_P1T1_ItemzTypeId}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs?AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs"
									],
									"query": [
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_02_Hierarchy_Project1_ChildItemzCount\") + 4 + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_02_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_02_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_02_Hierarchy_P1T1_ChildItemzCount\") + 4 + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_02_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_02_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_02_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_02_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_02_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_02_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_02_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_02_Hierarchy_P1T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_02_Hierarchy_P1T1_1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_02_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_02_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New 1.1_1 between 1.1 and 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_1__1_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1_1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{07_02_Hierarchy_P1T1_1_1_ItemzId}}&secondItemzId={{07_02_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{07_02_Hierarchy_P1T1_1_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_02_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New 1.1_1_1 between 1.1 and 1.1_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"// var jsonData = pm.response.json();",
											"// var tempNew1stItemzId =   jsonData.id;",
											"// pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_1__1_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1_1_1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{07_02_Hierarchy_P1T1_1_1_ItemzId}}&secondItemzId={{07_02_Hierarchy_P1T1_1__1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{07_02_Hierarchy_P1T1_1_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_02_Hierarchy_P1T1_1__1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_02_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_02_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_02_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_02_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_1_2_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_02_Hierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_02_Hierarchy_P1T1_1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_1_2_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_02_Hierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_02_Hierarchy_P1T1_1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_02_Hierarchy_Project1_ChildItemzCount\") + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_02_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_02_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_02_Hierarchy_P1T1_ChildItemzCount\") + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_02_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_02_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_02_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at TOP 1.2.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_SINGLEITEMZ_TOP_1_2_0\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz at TOP as 1.2.0\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_02_Hierarchy_P1T1_1_2_ItemzId}}&AtBottomOfChildNodes=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_02_Hierarchy_P1T1_1_2_ItemzId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_02_Hierarchy_Project1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_02_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_02_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_02_Hierarchy_P1T1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_02_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_02_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_02_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at BOTTOM 1.2.3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM_1_2_3\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz at BOTTOM as 1.2.3\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_02_Hierarchy_P1T1_1_2_ItemzId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_02_Hierarchy_P1T1_1_2_ItemzId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_02_Hierarchy_Project1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_02_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_02_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_02_Hierarchy_P1T1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_02_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_02_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_02_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at TOP 1.2.1.0",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_SINGLEITEMZ_TOP_1_2_1_0\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz at TOP as 1.2.1.0\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_02_Hierarchy_P1T1_1_2_1_ItemzId}}&AtBottomOfChildNodes=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_02_Hierarchy_P1T1_1_2_1_ItemzId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_02_Hierarchy_Project1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_02_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_02_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_02_Hierarchy_P1T1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_02_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_02_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_02_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at BOTTOM 1.2.1.3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM_1_2_1_3\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz at BOTTOM as 1.2.1.3\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_02_Hierarchy_P1T1_1_2_1_ItemzId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_02_Hierarchy_P1T1_1_2_1_ItemzId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_02_Hierarchy_Project1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_02_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_02_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_02_Hierarchy_P1T1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_02_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_02_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_02_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_02_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_02_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_02_Hierarchy_P1T1_1_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_02_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_02_Hierarchy_P1T1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_02_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_02_Hierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_02_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_02_Hierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_02_Hierarchy_P1T1_SINGLEITEMZ_TOP}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_02_Hierarchy_P1T1_SINGLEITEMZ_TOP}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz BOTTOM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_02_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_02_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 07_02_Hierarchy 10 Itemz BULK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const itemzIds_07_02_Hierarchy = pm.variables.get('07_02_Hierarchy_itemzIdsArray');\r",
											"\r",
											"if (Array.isArray(itemzIds_07_02_Hierarchy) && itemzIds_07_02_Hierarchy.length > 0) {\r",
											"    pm.variables.set('07_02_Hierarchy_BULK_CurrentItemzID', itemzIds_07_02_Hierarchy.shift())\r",
											"        \r",
											"}\r",
											"\r",
											"if (Array.isArray(itemzIds_07_02_Hierarchy) && itemzIds_07_02_Hierarchy.length > 0) {\r",
											"    postman.setNextRequest('DELETE 07_02_Hierarchy 10 Itemz BULK');\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_02_Hierarchy_BULK_CurrentItemzID}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_02_Hierarchy_BULK_CurrentItemzID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{07_02_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{07_02_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{07_02_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{07_02_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "07_03 MovingSubItemzToAnotherSubItemz",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_03_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"07_03_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"07_03_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{07_03_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{07_03_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{07_03_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{07_03_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"07_03_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_03_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_03_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{07_03_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_03_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_03_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_03_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_03_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_03_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_SINGLEITEMZ_TOP\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1 at TOP\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_03_Hierarchy_P1T1_ItemzTypeId}}&AtBottomOfChildNodes=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_03_Hierarchy_P1T1_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST 10 Itemz in 1st ItemzType BULK",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"const response =  pm.response.json();",
											"const itemzIds = response.map(itemz => itemz.id);",
											"console.log(itemzIds);",
											"pm.variables.set('07_03_Hierarchy_itemzIdsArray', itemzIds);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Item 6\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 7\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 8\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 9\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 10\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 11\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 12\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 13\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"High\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 14\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Low\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  },\r\n  {\r\n    \"Name\": \"Item 15\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at BOTTOM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1 at BOTTOM \",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Associate Itemz1 With ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" pm.test(\"Status code is 200,201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"itemzId\": \"{{07_03_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}\",\r\n  \"itemzTypeId\": \"{{07_03_Hierarchy_P1T1_ItemzTypeId}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs?AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs"
									],
									"query": [
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_03_Hierarchy_Project1_ChildItemzCount\") + 2 + 2 + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_03_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_03_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count ${expectedItemzCount}\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_03_Hierarchy_P1PL_ChildItemzCount\") + expectedItemzCount)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_03_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_03_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_03_Hierarchy_P1T1_ChildItemzCount\") + 4 + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_03_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_03_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_03_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_03_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_03_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_03_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_03_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_03_Hierarchy_P1T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_03_Hierarchy_P1T1_1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_03_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_03_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New 1.1_1 between 1.1 and 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1__1_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1_1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{07_03_Hierarchy_P1T1_1_1_ItemzId}}&secondItemzId={{07_03_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{07_03_Hierarchy_P1T1_1_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_03_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New 1.1_1_1 between 1.1 and 1.1_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"// var jsonData = pm.response.json();",
											"// var tempNew1stItemzId =   jsonData.id;",
											"// pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1__1_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1_1_1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{07_03_Hierarchy_P1T1_1_1_ItemzId}}&secondItemzId={{07_03_Hierarchy_P1T1_1__1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{07_03_Hierarchy_P1T1_1_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_03_Hierarchy_P1T1_1__1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1_3_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_03_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_03_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1_4_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_03_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_03_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_03_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_03_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_03_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_03_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1_3_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_03_Hierarchy_P1T1_1_3_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_03_Hierarchy_P1T1_1_3_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1_3_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_03_Hierarchy_P1T1_1_3_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_03_Hierarchy_P1T1_1_3_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1_4_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_03_Hierarchy_P1T1_1_4_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_03_Hierarchy_P1T1_1_4_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1_4_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_03_Hierarchy_P1T1_1_4_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_03_Hierarchy_P1T1_1_4_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1_2_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_03_Hierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_03_Hierarchy_P1T1_1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1_2_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_03_Hierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_03_Hierarchy_P1T1_1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1_3_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_03_Hierarchy_P1T1_1_3_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_03_Hierarchy_P1T1_1_3_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1_3_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_03_Hierarchy_P1T1_1_3_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_03_Hierarchy_P1T1_1_3_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1_4_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_03_Hierarchy_P1T1_1_4_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_03_Hierarchy_P1T1_1_4_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_1_4_1_2_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_03_Hierarchy_P1T1_1_4_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_03_Hierarchy_P1T1_1_4_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_03_Hierarchy_Project1_ChildItemzCount\") + 20)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_03_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_03_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_03_Hierarchy_P1PL_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_03_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_03_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_03_Hierarchy_P1T1_ChildItemzCount\") + 20)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_03_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_03_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_03_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Itemz 1.2 to Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_03_Hierarchy_P1T1_1_2_ItemzId}}?TargetId={{07_03_Hierarchy_P1PL_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_03_Hierarchy_P1T1_1_2_ItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{07_03_Hierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_03_Hierarchy_Project1_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_03_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_03_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_03_Hierarchy_P1PL_ChildItemzCount\") + 5)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_03_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_03_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_03_Hierarchy_P1T1_ChildItemzCount\") - 5)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_03_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_03_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_03_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_03_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_03_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_03_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_03_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_03_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Itemz 1.3 to PL under 1.2.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"itemzId\": \"{{07_03_Hierarchy_P1T1_1_2_1_ItemzId}}\",\r\n  \"itemzTypeId\": \"{{07_03_Hierarchy_P1PL_ItemzTypeId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_03_Hierarchy_P1T1_1_3_ItemzId}}?TargetId={{07_03_Hierarchy_P1T1_1_2_1_2_ItemzId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_03_Hierarchy_P1T1_1_3_ItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{07_03_Hierarchy_P1T1_1_2_1_2_ItemzId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_03_Hierarchy_Project1_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_03_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_03_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_03_Hierarchy_P1PL_ChildItemzCount\") + 5)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_03_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_03_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_03_Hierarchy_P1T1_ChildItemzCount\") - 5)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_03_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2 + 10) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_03_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_03_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_03_Hierarchy_1stProject_HeirarchyId\") + \"2/13/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_03_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_03_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_03_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_03_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_03_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_03_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_03_Hierarchy_P1T1_1_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_03_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_03_Hierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_03_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_03_Hierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_03_Hierarchy_P1T1_SINGLEITEMZ_TOP}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_03_Hierarchy_P1T1_SINGLEITEMZ_TOP}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz BOTTOM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_03_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_03_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 07_03_Hierarchy 10 Itemz BULK",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const itemzIds_07_03_Hierarchy = pm.variables.get('07_03_Hierarchy_itemzIdsArray');\r",
											"\r",
											"if (Array.isArray(itemzIds_07_03_Hierarchy) && itemzIds_07_03_Hierarchy.length > 0) {\r",
											"    pm.variables.set('07_03_Hierarchy_BULK_CurrentItemzID', itemzIds_07_03_Hierarchy.shift())\r",
											"        \r",
											"}\r",
											"\r",
											"if (Array.isArray(itemzIds_07_03_Hierarchy) && itemzIds_07_03_Hierarchy.length > 0) {\r",
											"    postman.setNextRequest('DELETE 07_03_Hierarchy 10 Itemz BULK');\r",
											"}\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_03_Hierarchy_BULK_CurrentItemzID}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_03_Hierarchy_BULK_CurrentItemzID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{07_03_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{07_03_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{07_03_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{07_03_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "07_04 MoveingAllItemzToParkingLot",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_04_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"07_04_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"07_04_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{07_04_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{07_04_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{07_04_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{07_04_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"07_04_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_04_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_04_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{07_04_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_04_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_04_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_04_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_04_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_04_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_04_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_04_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_04_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_SINGLEITEMZ_TOP\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1 at TOP\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_04_Hierarchy_P1T1_ItemzTypeId}}&AtBottomOfChildNodes=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_04_Hierarchy_P1T1_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New SINGLE Itemz at BOTTOM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1 at BOTTOM \",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Associate Itemz1 With ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" pm.test(\"Status code is 200,201\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"itemzId\": \"{{07_04_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}\",\r\n  \"itemzTypeId\": \"{{07_04_Hierarchy_P1T1_ItemzTypeId}}\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs?AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs"
									],
									"query": [
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_04_Hierarchy_Project1_ChildItemzCount\") + 2 + 2 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_04_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_04_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count ${expectedItemzCount}\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_04_Hierarchy_P1PL_ChildItemzCount\") + expectedItemzCount)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_04_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_04_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_04_Hierarchy_P1T1_ChildItemzCount\") + 4 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_04_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_04_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_04_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_04_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_04_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_04_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_04_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_04_Hierarchy_P1T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_04_Hierarchy_P1T1_1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_04_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_04_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New 1.1_1 between 1.1 and 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1__1_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1_1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{07_04_Hierarchy_P1T1_1_1_ItemzId}}&secondItemzId={{07_04_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{07_04_Hierarchy_P1T1_1_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_04_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New 1.1_1_1 between 1.1 and 1.1_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"// var jsonData = pm.response.json();",
											"// var tempNew1stItemzId =   jsonData.id;",
											"// pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1__1_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1_1_1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/CreateItemzBetweenExistingItemz?firstItemzId={{07_04_Hierarchy_P1T1_1_1_ItemzId}}&secondItemzId={{07_04_Hierarchy_P1T1_1__1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"CreateItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "firstItemzId",
											"value": "{{07_04_Hierarchy_P1T1_1_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_04_Hierarchy_P1T1_1__1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1_3_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_04_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_04_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1_4_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_04_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_04_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_04_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_04_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_04_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_04_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1_3_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_04_Hierarchy_P1T1_1_3_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_04_Hierarchy_P1T1_1_3_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1_3_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_04_Hierarchy_P1T1_1_3_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_04_Hierarchy_P1T1_1_3_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1_4_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_04_Hierarchy_P1T1_1_4_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_04_Hierarchy_P1T1_1_4_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1_4_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_04_Hierarchy_P1T1_1_4_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_04_Hierarchy_P1T1_1_4_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1_2_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_04_Hierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_04_Hierarchy_P1T1_1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1_2_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_04_Hierarchy_P1T1_1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_04_Hierarchy_P1T1_1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1_3_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_04_Hierarchy_P1T1_1_3_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_04_Hierarchy_P1T1_1_3_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1_3_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_04_Hierarchy_P1T1_1_3_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_04_Hierarchy_P1T1_1_3_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1_4_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_04_Hierarchy_P1T1_1_4_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_04_Hierarchy_P1T1_1_4_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.4.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_1_4_1_2_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.4.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_04_Hierarchy_P1T1_1_4_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_04_Hierarchy_P1T1_1_4_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_04_Hierarchy_Project1_ChildItemzCount\") + 20)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_04_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_04_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_04_Hierarchy_P1PL_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_04_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_04_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_04_Hierarchy_P1T1_ChildItemzCount\") + 20)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_04_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_04_Hierarchy_1stProject_HeirarchyId\") + \"2/0/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_04_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Itemz TOP to Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_04_Hierarchy_P1T1_SINGLEITEMZ_TOP}}?TargetId={{07_04_Hierarchy_P1PL_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_04_Hierarchy_P1T1_SINGLEITEMZ_TOP}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{07_04_Hierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Itemz 1 to Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_04_Hierarchy_P1T1_1stItemzId}}?TargetId={{07_04_Hierarchy_P1PL_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_04_Hierarchy_P1T1_1stItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{07_04_Hierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Itemz 2 to Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_04_Hierarchy_P1T1_2ndItemzId}}?TargetId={{07_04_Hierarchy_P1PL_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_04_Hierarchy_P1T1_2ndItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{07_04_Hierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Itemz BOTTOM to Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_04_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}?TargetId={{07_04_Hierarchy_P1PL_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_04_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{07_04_Hierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_04_Hierarchy_Project1_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_04_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_04_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"var expectedItemzCount = 0 ;",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_04_Hierarchy_P1PL_ChildItemzCount\") + 24)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_04_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_04_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_04_Hierarchy_P1T1_ChildItemzCount\") - 24)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_04_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_04_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2 + 2) ;     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_04_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_04_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_04_Hierarchy_1stProject_HeirarchyId\") + \"1/4/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_04_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_04_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_04_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_04_Hierarchy_P1T1_1_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_04_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_04_Hierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_04_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_04_Hierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_04_Hierarchy_P1T1_SINGLEITEMZ_TOP}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_04_Hierarchy_P1T1_SINGLEITEMZ_TOP}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE SINGLE Itemz BOTTOM",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_04_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_04_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{07_04_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{07_04_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{07_04_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{07_04_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "07_05 MovingSubItemzUnderItemzType",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_05_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"07_05_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"07_05_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{07_05_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{07_05_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"07_05_Hierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{07_05_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{07_05_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"07_05_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_05_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_05_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_05_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{07_05_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_05_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_05_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_05_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_05_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_05_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_05_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_05_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_05_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_05_Hierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_05_Hierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_05_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_05_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_05_Hierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_05_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_05_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_05_Hierarchy_P1T1_1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_05_Hierarchy_P1T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_05_Hierarchy_P1T1_1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_05_Hierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_05_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_05_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_05_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_05_Hierarchy_Project1_ChildItemzCount\") + 2 + 4 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_05_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_05_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_05_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_05_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_05_Hierarchy_P1T1_ChildItemzCount\") + 2 + 4 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_05_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_05_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_05_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_05_Hierarchy_1stProject_HeirarchyId\") + \"2/2/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 1.1 under P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_05_Hierarchy_P1T1_1_1_ItemzId}}?TargetId={{07_05_Hierarchy_P1T1_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_05_Hierarchy_P1T1_1_1_ItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{07_05_Hierarchy_P1T1_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 1.2 under P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_05_Hierarchy_P1T1_1_2_ItemzId}}?TargetId={{07_05_Hierarchy_P1T1_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_05_Hierarchy_P1T1_1_2_ItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{07_05_Hierarchy_P1T1_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_05_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_05_Hierarchy_Project1_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_05_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_05_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_05_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_05_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_05_Hierarchy_P1T1_ChildItemzCount\"))",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_05_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 4);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_05_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_05_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_05_Hierarchy_1stProject_HeirarchyId\") + \"2/4/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1_1_1_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Itemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_05_Hierarchy_1stProject_HeirarchyId\") + \"2/3/1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_05_Hierarchy_1stProject_HeirarchyId\") + \"2/3/1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_05_Hierarchy_1stProject_HeirarchyId\") + \"2/3/1/1/\"); });\r",
											"    "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_05_Hierarchy_P1T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_05_Hierarchy_P1T1_1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_05_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_05_Hierarchy_P1T1_1_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_05_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_05_Hierarchy_P1T1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_05_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_05_Hierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_05_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_05_Hierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{07_05_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{07_05_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{07_05_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{07_05_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "07_06 MovingItemzUnderSubItemz",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_06_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"07_06_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"07_06_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{07_06_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{07_06_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"07_06_Hierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{07_06_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{07_06_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"07_06_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_06_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_06_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_06_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{07_06_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_06_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_06_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_06_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_06_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_06_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_06_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_06_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_06_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_06_Hierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_06_Hierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_06_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_06_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_06_Hierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_06_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_06_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_06_Hierarchy_P1T1_1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_06_Hierarchy_P1T1_1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_06_Hierarchy_P1T1_1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_06_Hierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_06_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_06_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_06_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_06_Hierarchy_Project1_ChildItemzCount\") + 2 + 4 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_06_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_06_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_06_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_06_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_06_Hierarchy_P1T1_ChildItemzCount\") + 2 + 4 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_06_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_06_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_06_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_06_Hierarchy_1stProject_HeirarchyId\") + \"2/2/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 1.2 under Itemz 1.1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_06_Hierarchy_P1T1_1_2_ItemzId}}?TargetId={{07_06_Hierarchy_P1T1_1_1_1_1_ItemzId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_06_Hierarchy_P1T1_1_2_ItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{07_06_Hierarchy_P1T1_1_1_1_1_ItemzId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_06_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_06_Hierarchy_Project1_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_06_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_06_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_06_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_06_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_06_Hierarchy_P1T1_ChildItemzCount\"))",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_06_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_06_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_06_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_06_Hierarchy_1stProject_HeirarchyId\") + \"2/2/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1_1_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(7);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Itemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_06_Hierarchy_1stProject_HeirarchyId\") + \"2/1/1/1/1/1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_06_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_06_Hierarchy_P1T1_1_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_06_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_06_Hierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_06_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_06_Hierarchy_P1T1_1_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_06_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_06_Hierarchy_P1T1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_06_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_06_Hierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{07_06_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{07_06_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{07_06_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{07_06_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "07_07 MovingItemzBetweenTwoItemz",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_07_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"07_07_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"07_07_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{07_07_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{07_07_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"07_07_Hierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{07_07_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{07_07_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"07_07_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_07_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_07_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_07_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{07_07_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_07_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_07_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_07_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_07_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_07_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_07_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_07_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_07_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_07_Hierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 3 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_07_Hierarchy_P1T1_3rdItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 3\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_07_Hierarchy_P1T1_ItemzTypeId}}"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_07_Hierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_07_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_07_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_07_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_07_Hierarchy_Project1_ChildItemzCount\") + 4 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_07_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_07_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_07_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_07_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_07_Hierarchy_P1T1_ChildItemzCount\") + 4 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_07_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 3);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_07_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_07_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_07_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 3 between Itemz 1 and 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{07_07_Hierarchy_P1T1_3rdItemzId}}&firstItemzId={{07_07_Hierarchy_P1T1_1stItemzId}}&secondItemzId={{07_07_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"MoveItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "movingItemzId",
											"value": "{{07_07_Hierarchy_P1T1_3rdItemzId}}"
										},
										{
											"key": "firstItemzId",
											"value": "{{07_07_Hierarchy_P1T1_1stItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_07_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 2 between Itemz 1 and 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{07_07_Hierarchy_P1T1_2ndItemzId}}&firstItemzId={{07_07_Hierarchy_P1T1_1stItemzId}}&secondItemzId={{07_07_Hierarchy_P1T1_3rdItemzId}}&=",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"MoveItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "movingItemzId",
											"value": "{{07_07_Hierarchy_P1T1_2ndItemzId}}"
										},
										{
											"key": "firstItemzId",
											"value": "{{07_07_Hierarchy_P1T1_1stItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_07_Hierarchy_P1T1_3rdItemzId}}"
										},
										{
											"key": "",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 4 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_07_Hierarchy_P1T1_4thItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 4\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_07_Hierarchy_P1T1_ItemzTypeId}}"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 4 between Itemz 2 and 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{07_07_Hierarchy_P1T1_4thItemzId}}&firstItemzId={{07_07_Hierarchy_P1T1_2ndItemzId}}&secondItemzId={{07_07_Hierarchy_P1T1_3rdItemzId}}&=",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"MoveItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "movingItemzId",
											"value": "{{07_07_Hierarchy_P1T1_4thItemzId}}"
										},
										{
											"key": "firstItemzId",
											"value": "{{07_07_Hierarchy_P1T1_2ndItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_07_Hierarchy_P1T1_3rdItemzId}}"
										},
										{
											"key": "",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_07_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_07_Hierarchy_Project1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_07_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_07_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_07_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_07_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_07_Hierarchy_P1T1_ChildItemzCount\") + 1)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_07_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 4);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_07_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_07_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_07_Hierarchy_1stProject_HeirarchyId\") + \"2/1.1/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1_4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(3);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Itemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_07_Hierarchy_1stProject_HeirarchyId\") + \"2/1.0.1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_07_Hierarchy_P1T1_4thItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_07_Hierarchy_P1T1_4thItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_07_Hierarchy_P1T1_4thItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_07_Hierarchy_P1T1_4thItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_07_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_07_Hierarchy_P1T1_3rdItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_07_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_07_Hierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_07_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_07_Hierarchy_P1T1_1_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_07_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_07_Hierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{07_07_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{07_07_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{07_07_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{07_07_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "07_08 MoveingItemzWithSubitemzBetweenItemz",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_08_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"07_08_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"07_08_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{07_08_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{07_08_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"07_08_Hierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{07_08_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{07_08_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"07_08_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_08_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_08_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{07_08_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_08_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_08_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_08_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_08_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_08_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_08_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_08_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_08_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_08_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_08_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_08_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_08_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_08_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 3 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_3rdItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 3\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_08_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_08_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_08_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_08_Hierarchy_Project1_ChildItemzCount\") + 3 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_08_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_08_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_08_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_08_Hierarchy_P1T1_ChildItemzCount\") + 3)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_08_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_08_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 3);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_08_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_08_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_08_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_08_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_08_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_08_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_08_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_08_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_08_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_08_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_08_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_08_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_08_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_08_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_08_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_08_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_08_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_08_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_08_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_2_3_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.3\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_08_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_08_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_3_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_08_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_08_Hierarchy_P1T1_3rdItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_3_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_08_Hierarchy_P1T1_3_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_08_Hierarchy_P1T1_3_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_3_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_08_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_08_Hierarchy_P1T1_3rdItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_3_2_1_ItemzId\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_08_Hierarchy_P1T1_3_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_08_Hierarchy_P1T1_3_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_3_2_2_ItemzId\",tempNew1stItemzId);",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_08_Hierarchy_P1T1_3_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_08_Hierarchy_P1T1_3_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_08_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_08_Hierarchy_Project1_ChildItemzCount\") + 13)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_08_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_08_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_08_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_08_Hierarchy_P1T1_ChildItemzCount\") + 13)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_08_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_08_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 3);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_08_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_08_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_08_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_08_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_08_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 3 between 1 and 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{07_08_Hierarchy_P1T1_3rdItemzId}}&firstItemzId={{07_08_Hierarchy_P1T1_1stItemzId}}&secondItemzId={{07_08_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"MoveItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "movingItemzId",
											"value": "{{07_08_Hierarchy_P1T1_3rdItemzId}}"
										},
										{
											"key": "firstItemzId",
											"value": "{{07_08_Hierarchy_P1T1_1stItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_08_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_08_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_08_Hierarchy_Project1_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_08_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_08_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_08_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_08_Hierarchy_P1T1_ChildItemzCount\") + 0 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_08_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_08_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_08_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 3);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_08_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_08_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_08_Hierarchy_1stProject_HeirarchyId\") + \"2/2/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_08_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_08_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1_3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(3);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Itemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_08_Hierarchy_1stProject_HeirarchyId\") + \"2/1.1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_08_Hierarchy_1stProject_HeirarchyId\") + \"2/1.1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_08_Hierarchy_1stProject_HeirarchyId\") + \"2/1.1/2/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_08_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_08_Hierarchy_P1T1_3rdItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_08_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_08_Hierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_08_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_08_Hierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_08_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_08_Hierarchy_P1T1_3rdItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{07_08_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{07_08_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{07_08_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{07_08_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "07_09 MoveingsubItemzBetweensubItemz",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_09_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"07_09_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"07_09_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{07_09_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{07_09_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"07_09_Hierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{07_09_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{07_09_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"07_09_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_09_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_09_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{07_09_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_09_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_09_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_09_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_09_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_09_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_09_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_09_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_09_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_09_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_09_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_09_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_09_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_09_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 3 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_3rdItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 3\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_09_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_09_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_09_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_09_Hierarchy_Project1_ChildItemzCount\") + 3 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_09_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_09_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_09_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_09_Hierarchy_P1T1_ChildItemzCount\") + 3)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_09_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_09_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 3);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_09_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_09_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_09_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_09_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_09_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_09_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_09_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_09_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_09_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_09_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_09_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_09_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_09_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_09_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_09_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_09_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_09_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_09_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_09_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_2_3_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.3\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_09_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_09_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_3_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_09_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_09_Hierarchy_P1T1_3rdItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_3_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_09_Hierarchy_P1T1_3_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_09_Hierarchy_P1T1_3_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_3_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_09_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_09_Hierarchy_P1T1_3rdItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_3_2_1_ItemzId\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_09_Hierarchy_P1T1_3_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_09_Hierarchy_P1T1_3_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_3_2_2_ItemzId\",tempNew1stItemzId);",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_09_Hierarchy_P1T1_3_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_09_Hierarchy_P1T1_3_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_09_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_09_Hierarchy_Project1_ChildItemzCount\") + 13)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_09_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_09_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_09_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_09_Hierarchy_P1T1_ChildItemzCount\") + 13)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_09_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_09_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 3);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_09_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_09_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_09_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_09_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_09_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 3.2 between 2.1 and 2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{07_09_Hierarchy_P1T1_3_2_ItemzId}}&firstItemzId={{07_09_Hierarchy_P1T1_2_1_ItemzId}}&secondItemzId={{07_09_Hierarchy_P1T1_2_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"MoveItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "movingItemzId",
											"value": "{{07_09_Hierarchy_P1T1_3_2_ItemzId}}"
										},
										{
											"key": "firstItemzId",
											"value": "{{07_09_Hierarchy_P1T1_2_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_09_Hierarchy_P1T1_2_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_09_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_09_Hierarchy_Project1_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_09_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_09_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_09_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_09_Hierarchy_P1T1_ChildItemzCount\") + 0 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_09_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_09_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_09_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 3);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_09_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_09_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_09_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_09_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_09_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1_3_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(4);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Itemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_09_Hierarchy_1stProject_HeirarchyId\") + \"2/2/1.1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_09_Hierarchy_1stProject_HeirarchyId\") + \"2/2/1.1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_09_Hierarchy_1stProject_HeirarchyId\") + \"2/2/1.1/2/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_09_Hierarchy_P1T1_3_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_09_Hierarchy_P1T1_3_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_09_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_09_Hierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_09_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_09_Hierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_09_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_09_Hierarchy_P1T1_3rdItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{07_09_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{07_09_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{07_09_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{07_09_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "07_10 MovingItemzBetweenSubItemz",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_10_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"07_10_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"07_10_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{07_10_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{07_10_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"07_10_Hierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{07_10_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{07_10_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"07_10_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_10_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_10_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{07_10_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_10_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_10_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_10_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_10_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_10_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_10_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_10_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_10_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_10_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_10_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_10_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_10_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_10_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 3 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_3rdItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 3\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_10_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_10_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_10_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_10_Hierarchy_Project1_ChildItemzCount\") + 3 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_10_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_10_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_10_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_10_Hierarchy_P1T1_ChildItemzCount\") + 3)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_10_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_10_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 3);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_10_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_10_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_10_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_10_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_10_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_10_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_10_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_10_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_10_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_10_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_10_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_10_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_10_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_10_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_10_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_10_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_10_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_10_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_10_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_2_3_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.3\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_10_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_10_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_3_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_10_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_10_Hierarchy_P1T1_3rdItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_3_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_10_Hierarchy_P1T1_3_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_10_Hierarchy_P1T1_3_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_3_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_10_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_10_Hierarchy_P1T1_3rdItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_3_2_1_ItemzId\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_10_Hierarchy_P1T1_3_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_10_Hierarchy_P1T1_3_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_3_2_2_ItemzId\",tempNew1stItemzId);",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_10_Hierarchy_P1T1_3_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_10_Hierarchy_P1T1_3_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_10_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_10_Hierarchy_Project1_ChildItemzCount\") + 13)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_10_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_10_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_10_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_10_Hierarchy_P1T1_ChildItemzCount\") + 13)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_10_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_10_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 3);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_10_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_10_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_10_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_10_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_10_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 2 between 3.1 and 3.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{07_10_Hierarchy_P1T1_2ndItemzId}}&firstItemzId={{07_10_Hierarchy_P1T1_3_1_ItemzId}}&secondItemzId={{07_10_Hierarchy_P1T1_3_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"MoveItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "movingItemzId",
											"value": "{{07_10_Hierarchy_P1T1_2ndItemzId}}"
										},
										{
											"key": "firstItemzId",
											"value": "{{07_10_Hierarchy_P1T1_3_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_10_Hierarchy_P1T1_3_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_10_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_10_Hierarchy_Project1_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_10_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_10_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_10_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_10_Hierarchy_P1T1_ChildItemzCount\") + 0 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_10_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_10_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_10_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_10_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_10_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_10_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_10_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_10_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_10_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_10_Hierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_10_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_10_Hierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_10_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_10_Hierarchy_P1T1_3rdItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{07_10_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{07_10_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{07_10_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{07_10_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "07_11 MovingItemzBetweenWRONGItemz",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_11_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"07_11_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"07_11_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{07_11_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{07_11_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"07_11_Hierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{07_11_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{07_11_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"07_11_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_11_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_11_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{07_11_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_11_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_11_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_11_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_11_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_11_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_11_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_11_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_11_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_11_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_11_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_11_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_11_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_11_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 3 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_3rdItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 3\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_11_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_11_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_11_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_11_Hierarchy_Project1_ChildItemzCount\") + 3 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_11_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_11_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_11_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_11_Hierarchy_P1T1_ChildItemzCount\") + 3)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_11_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_11_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 3);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_11_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_11_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_11_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_11_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_11_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_11_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_11_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_11_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_11_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_11_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_11_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_11_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_11_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_11_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_11_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_11_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_11_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_11_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_11_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_2_3_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.3\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_11_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_11_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_3_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_11_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_11_Hierarchy_P1T1_3rdItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_3_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_11_Hierarchy_P1T1_3_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_11_Hierarchy_P1T1_3_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_3_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_11_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_11_Hierarchy_P1T1_3rdItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_3_2_1_ItemzId\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_11_Hierarchy_P1T1_3_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_11_Hierarchy_P1T1_3_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_3_2_2_ItemzId\",tempNew1stItemzId);",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_11_Hierarchy_P1T1_3_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_11_Hierarchy_P1T1_3_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_11_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_11_Hierarchy_Project1_ChildItemzCount\") + 13)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_11_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_11_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_11_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_11_Hierarchy_P1T1_ChildItemzCount\") + 13)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_11_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_11_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 3);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_11_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_11_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_11_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_11_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_11_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 3 between 2 and 2.1 WRONG",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 400 or 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400,404]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{07_11_Hierarchy_P1T1_3rdItemzId}}&firstItemzId={{07_11_Hierarchy_P1T1_2ndItemzId}}&secondItemzId={{07_11_Hierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"MoveItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "movingItemzId",
											"value": "{{07_11_Hierarchy_P1T1_3rdItemzId}}"
										},
										{
											"key": "firstItemzId",
											"value": "{{07_11_Hierarchy_P1T1_2ndItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_11_Hierarchy_P1T1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 3 between 2.1 and 2.3 WRONG",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 400 or 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400,404]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{07_11_Hierarchy_P1T1_3rdItemzId}}&firstItemzId={{07_11_Hierarchy_P1T1_2_1_ItemzId}}&secondItemzId={{07_11_Hierarchy_P1T1_2_3_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"MoveItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "movingItemzId",
											"value": "{{07_11_Hierarchy_P1T1_3rdItemzId}}"
										},
										{
											"key": "firstItemzId",
											"value": "{{07_11_Hierarchy_P1T1_2_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_11_Hierarchy_P1T1_2_3_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 3 between 2.1 and 2.1 WRONG",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 400 or 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400,404]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{07_11_Hierarchy_P1T1_3rdItemzId}}&firstItemzId={{07_11_Hierarchy_P1T1_2_1_ItemzId}}&secondItemzId={{07_11_Hierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"MoveItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "movingItemzId",
											"value": "{{07_11_Hierarchy_P1T1_3rdItemzId}}"
										},
										{
											"key": "firstItemzId",
											"value": "{{07_11_Hierarchy_P1T1_2_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_11_Hierarchy_P1T1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 3 between P1 and P1T1 WRONG",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 400 or 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400,404]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{07_11_Hierarchy_P1T1_3rdItemzId}}&firstItemzId={{07_11_Hierarchy_1stProjectId}}&secondItemzId={{07_11_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"MoveItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "movingItemzId",
											"value": "{{07_11_Hierarchy_P1T1_3rdItemzId}}"
										},
										{
											"key": "firstItemzId",
											"value": "{{07_11_Hierarchy_1stProjectId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_11_Hierarchy_P1T1_ItemzTypeId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 3 between P1PL and P1T1 WRONG",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 400 or 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400,404]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{07_11_Hierarchy_P1T1_3rdItemzId}}&firstItemzId={{07_11_Hierarchy_1stProjectId}}&secondItemzId={{07_11_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"MoveItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "movingItemzId",
											"value": "{{07_11_Hierarchy_P1T1_3rdItemzId}}"
										},
										{
											"key": "firstItemzId",
											"value": "{{07_11_Hierarchy_1stProjectId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_11_Hierarchy_P1T1_ItemzTypeId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 2 between 2.1 and 2.2 WRONG",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 400 or 404\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([400,404]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{07_11_Hierarchy_P1T1_2ndItemzId}}&firstItemzId={{07_11_Hierarchy_P1T1_2_1_ItemzId}}&secondItemzId={{07_11_Hierarchy_P1T1_2_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"MoveItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "movingItemzId",
											"value": "{{07_11_Hierarchy_P1T1_2ndItemzId}}"
										},
										{
											"key": "firstItemzId",
											"value": "{{07_11_Hierarchy_P1T1_2_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_11_Hierarchy_P1T1_2_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_11_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_11_Hierarchy_Project1_ChildItemzCount\") + 0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_11_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_11_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_11_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_11_Hierarchy_P1T1_ChildItemzCount\") + 0 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_11_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_11_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_11_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 3);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_11_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_11_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_11_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_11_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_11_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_11_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_11_Hierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_11_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_11_Hierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_11_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_11_Hierarchy_P1T1_3rdItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{07_11_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{07_11_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{07_11_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{07_11_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "07_12 MovingItemzBetweenSubItemzAndItemz",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_12_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"07_12_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"07_12_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{07_12_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{07_12_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Project 2nd",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_12_Hierarchy_2ndProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"07_12_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"07_12_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{07_12_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{07_12_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{07_12_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{07_12_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"07_12_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_12_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_12_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 2nd Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P2PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{07_12_Hierarchy_2ndProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{07_12_Hierarchy_2ndProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P2 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"07_12_Hierarchy_2ndProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_12_Hierarchy_2ndProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_12_Hierarchy_2ndProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType P1T1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{07_12_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P2T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P2T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType P2T1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{07_12_Hierarchy_2ndProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_12_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_12_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_12_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_12_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_12_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_12_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_12_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_12_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_12_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_12_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_12_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_12_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_12_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_12_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_12_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_12_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_12_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_12_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 3 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_3rdItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 3\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_12_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_12_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_12_Hierarchy_Project1_ChildItemzCount\") + 3 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_12_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_12_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_12_Hierarchy_P1T1_ChildItemzCount\") + 3)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_12_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_12_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 3);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_12_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_12_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_12_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_12_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_12_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_1_1_3_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.3\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_1_3_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_2_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_2_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_2_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_2_1_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_2_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_2_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.1.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_2_1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.1.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_2_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_2_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_2_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_2_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_2_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_2_2_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_2_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_2_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.2.3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_2_2_3_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.2.3\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_2_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_2_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.2.4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_2_2_4_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.2.4\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_2_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_2_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 2.3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_2_3_ItemzId\",tempNew1stItemzId);",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 2.3\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_2ndItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_3_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_3rdItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_3_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_3_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_3_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_3_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_3_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_3_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_3_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_3rdItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_3_2_1_ItemzId\",tempNew1stItemzId);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_3_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_3_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 3.2.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_3_2_2_ItemzId\",tempNew1stItemzId);",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 3.2.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_12_Hierarchy_P1T1_3_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_12_Hierarchy_P1T1_3_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_12_Hierarchy_Project1_ChildItemzCount\") + 25)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_12_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_12_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_12_Hierarchy_P1T1_ChildItemzCount\") + 25)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_12_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_12_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 3);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_12_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_12_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_12_Hierarchy_1stProject_HeirarchyId\") + \"2/3/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_12_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_12_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Itemz 1 to P2T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_12_Hierarchy_P1T1_1stItemzId}}?TargetId={{07_12_Hierarchy_P2T1_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_12_Hierarchy_P1T1_1stItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{07_12_Hierarchy_P2T1_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 to P1 at TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{07_12_Hierarchy_P1T1_ItemzTypeId}}?TargetProjectId={{07_12_Hierarchy_1stProjectId}}&AtBottomOfChildNodes=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{07_12_Hierarchy_P1T1_ItemzTypeId}}"
									],
									"query": [
										{
											"key": "TargetProjectId",
											"value": "{{07_12_Hierarchy_1stProjectId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 to P2 at TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{07_12_Hierarchy_P1T1_ItemzTypeId}}?TargetProjectId={{07_12_Hierarchy_2ndProjectId}}&AtBottomOfChildNodes=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{07_12_Hierarchy_P1T1_ItemzTypeId}}"
									],
									"query": [
										{
											"key": "TargetProjectId",
											"value": "{{07_12_Hierarchy_2ndProjectId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 2 between 3.1 and 3.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{07_12_Hierarchy_P1T1_2ndItemzId}}&firstItemzId={{07_12_Hierarchy_P1T1_3_1_ItemzId}}&secondItemzId={{07_12_Hierarchy_P1T1_3_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"MoveItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "movingItemzId",
											"value": "{{07_12_Hierarchy_P1T1_2ndItemzId}}"
										},
										{
											"key": "firstItemzId",
											"value": "{{07_12_Hierarchy_P1T1_3_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_12_Hierarchy_P1T1_3_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 3.2 between 1.1.1 and 1.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{07_12_Hierarchy_P1T1_3_2_ItemzId}}&firstItemzId={{07_12_Hierarchy_P1T1_1_1_1_ItemzId}}&secondItemzId={{07_12_Hierarchy_P1T1_1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"MoveItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "movingItemzId",
											"value": "{{07_12_Hierarchy_P1T1_3_2_ItemzId}}"
										},
										{
											"key": "firstItemzId",
											"value": "{{07_12_Hierarchy_P1T1_1_1_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_12_Hierarchy_P1T1_1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_12_Hierarchy_Project1_ChildItemzCount\") - 28 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_12_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_12_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_12_Hierarchy_P1T1_ChildItemzCount\") - 9 - 3 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_12_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_12_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_12_Hierarchy_2ndProject_HeirarchyId\") + \"0/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_12_Hierarchy_2ndProject_HeirarchyId\") + \"0/3/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_12_Hierarchy_2ndProject_HeirarchyId\") + \"0/3/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_12_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_12_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Itemz 1 to Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_12_Hierarchy_P1T1_1stItemzId}}?TargetId={{07_12_Hierarchy_P1PL_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_12_Hierarchy_P1T1_1stItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{07_12_Hierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 1.3 between 1.1 and 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{07_12_Hierarchy_P1T1_1_3_ItemzId}}&firstItemzId={{07_12_Hierarchy_P1T1_1_1_ItemzId}}&secondItemzId={{07_12_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"MoveItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "movingItemzId",
											"value": "{{07_12_Hierarchy_P1T1_1_3_ItemzId}}"
										},
										{
											"key": "firstItemzId",
											"value": "{{07_12_Hierarchy_P1T1_1_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_12_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 1.1 between 1.3 and 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{07_12_Hierarchy_P1T1_1_1_ItemzId}}&firstItemzId={{07_12_Hierarchy_P1T1_1_3_ItemzId}}&secondItemzId={{07_12_Hierarchy_P1T1_1_2_ItemzId}}&=",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"MoveItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "movingItemzId",
											"value": "{{07_12_Hierarchy_P1T1_1_1_ItemzId}}"
										},
										{
											"key": "firstItemzId",
											"value": "{{07_12_Hierarchy_P1T1_1_3_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_12_Hierarchy_P1T1_1_2_ItemzId}}"
										},
										{
											"key": "",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_12_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_12_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_12_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_12_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_12_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1_2_1_2_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(7);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Itemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_12_Hierarchy_2ndProject_HeirarchyId\") + \"0/3/1.1/1/2/2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_12_Hierarchy_P1T1_2_1_2_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_12_Hierarchy_P1T1_2_1_2_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1_3_2_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(6);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Itemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_12_Hierarchy_1stProject_HeirarchyId\") + \"1/1/1.2/1.1/2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_12_Hierarchy_P1T1_3_2_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_12_Hierarchy_P1T1_3_2_2_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_12_Hierarchy_P1PL_ChildItemzCount\") + 12 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_12_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_12_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_12_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_12_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_12_Hierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_12_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_12_Hierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_12_Hierarchy_P1T1_3rdItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_12_Hierarchy_P1T1_3rdItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{07_12_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{07_12_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType P2T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{07_12_Hierarchy_P2T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{07_12_Hierarchy_P2T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{07_12_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{07_12_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 2nd Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{07_12_Hierarchy_2ndProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{07_12_Hierarchy_2ndProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "07_13 MovingItemzType",
					"item": [
						{
							"name": "POST Project 1st",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_13_Hierarchy_1stProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"07_13_Hierarchy_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"07_13_Hierarchy_1stProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{07_13_Hierarchy_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{07_13_Hierarchy_1stProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 1st Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"07_13_Hierarchy_P1PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{07_13_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{07_13_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"07_13_Hierarchy_1stProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_13_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_13_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Project 2nd",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"var jsonData = pm.response.json();",
											"const tempNewProjectId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_13_Hierarchy_2ndProjectId\",tempNewProjectId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"pm.collectionVariables.set(\"07_13_Hierarchy_2ndProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
											"\r",
											"pm.variables.get(\"07_13_Hierarchy_2ndProjectName\");\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{07_13_Hierarchy_2ndProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{07_13_Hierarchy_2ndProjectName}}\"\r\n}\r\n"
								},
								"url": {
									"raw": "http://localhost:51087/api/Projects",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET 2nd Projects Parking Lot ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"var tempNew1stItemzTypeId = jsonData[0].id;\r",
											"pm.collectionVariables.set(\"07_13_Hierarchy_P2PL_ItemzTypeId\",tempNew1stItemzTypeId);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzTypes/{{07_13_Hierarchy_2ndProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzTypes",
										"{{07_13_Hierarchy_2ndProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P2 and STORE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"const tempHierarchyId = jsonData[\"hierarchyId\"];\r",
											"pm.collectionVariables.set(\"07_13_Hierarchy_2ndProject_HeirarchyId\",tempHierarchyId);\r",
											"\r",
											"pm.test(\"Verify Hierarchy Level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(1);});\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Project\");});\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(1);});     \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_13_Hierarchy_2ndProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_13_Hierarchy_2ndProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType P1T1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{07_13_Hierarchy_1stProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST ItemzType P2T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"/**",
											" ",
											" pm.test(\"Status code is either 201 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
											"});",
											"",
											"**/",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzTypeId = jsonData[\"id\"];",
											"pm.collectionVariables.set(\"07_13_Hierarchy_P2T1_ItemzTypeId\",tempNew1stItemzTypeId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ItemzType P2T1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{07_13_Hierarchy_2ndProjectId}}\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_13_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_13_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_13_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_13_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_13_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\" , () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_13_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_13_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_13_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_13_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_13_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_13_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(0)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_13_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_13_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_13_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 1 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_1stItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_13_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_13_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Itemz 2 to P1T1_ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData[0].id;",
											"pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_2ndItemzId\",tempNew1stItemzId);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{07_13_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"{{07_13_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_13_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_13_Hierarchy_Project1_ChildItemzCount\") + 2 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_13_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_13_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_13_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_13_Hierarchy_P1T1_ChildItemzCount\") + 2)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_13_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_13_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_13_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_13_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_1stProject_HeirarchyId\") + \"2/2/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_13_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_13_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_13_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_13_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_1_1_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_13_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_13_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_13_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_13_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_1_1_3_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.3\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_13_Hierarchy_P1T1_1_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_13_Hierarchy_P1T1_1_1_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.3.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_1_1_3_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.3.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_13_Hierarchy_P1T1_1_1_3_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_13_Hierarchy_P1T1_1_1_3_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.3.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_1_1_3_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.3.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_13_Hierarchy_P1T1_1_1_3_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_13_Hierarchy_P1T1_1_1_3_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.3.2.1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_1_1_3_2_1_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.3.2.1\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_13_Hierarchy_P1T1_1_1_3_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_13_Hierarchy_P1T1_1_1_3_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.1.3.3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_1_1_3_3_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.1.3.3\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_13_Hierarchy_P1T1_1_1_3_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_13_Hierarchy_P1T1_1_1_3_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_1_2_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.2\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_13_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_13_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST New Itemz 1.3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"var tempNew1stItemzId =   jsonData.id;",
											"pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_1_3_ItemzId\",tempNew1stItemzId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"name\": \"SINGLE Itemz 1.3\",\r\n        \"status\": \"New\",\r\n        \"priority\": \"Medium\",\r\n        \"description\": \"Requirements to be described here.\",\r\n        \"severity\": \"Medium\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs?parentId={{07_13_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs"
									],
									"query": [
										{
											"key": "parentId",
											"value": "{{07_13_Hierarchy_P1T1_1stItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_13_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_13_Hierarchy_Project1_ChildItemzCount\") + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_13_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_13_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_13_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_13_Hierarchy_P1T1_ChildItemzCount\") + 10)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_13_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_13_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_13_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_13_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 2);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_1stProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_1stProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_1stProject_HeirarchyId\") + \"2/2/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_13_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_13_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Itemz 1 to P2T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_13_Hierarchy_P1T1_1stItemzId}}?TargetId={{07_13_Hierarchy_P2T1_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_13_Hierarchy_P1T1_1stItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{07_13_Hierarchy_P2T1_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 to P1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{07_13_Hierarchy_P1T1_ItemzTypeId}}?TargetProjectId={{07_13_Hierarchy_1stProjectId}}&AtBottomOfChildNodes=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{07_13_Hierarchy_P1T1_ItemzTypeId}}"
									],
									"query": [
										{
											"key": "TargetProjectId",
											"value": "{{07_13_Hierarchy_1stProjectId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 to P2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{07_13_Hierarchy_P1T1_ItemzTypeId}}?TargetProjectId={{07_13_Hierarchy_2ndProjectId}}&AtBottomOfChildNodes=false",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{07_13_Hierarchy_P1T1_ItemzTypeId}}"
									],
									"query": [
										{
											"key": "TargetProjectId",
											"value": "{{07_13_Hierarchy_2ndProjectId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Project1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_13_Hierarchy_Project1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_13_Hierarchy_Project1_ChildItemzCount\") - 12)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_13_Hierarchy_Project1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/GetItemzCount/{{07_13_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"GetItemzCount",
										"{{07_13_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by ItemzType1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_13_Hierarchy_P1T1_ChildItemzCount\") - 11 )",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_13_Hierarchy_P1T1_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_13_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_13_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"    \r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\");});\r",
											"     "
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_13_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_13_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_2ndProject_HeirarchyId\") + \"0/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_2ndProject_HeirarchyId\") + \"0/2/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_2ndProject_HeirarchyId\") + \"0/2/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_13_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_13_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P2T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_2ndProject_HeirarchyId\") + \"2/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_2ndProject_HeirarchyId\") + \"2/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_2ndProject_HeirarchyId\") + \"2/1/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_13_Hierarchy_P2T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_13_Hierarchy_P2T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move P1T1 Itemz 1 to Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "conten",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_13_Hierarchy_P1T1_1stItemzId}}?TargetId={{07_13_Hierarchy_P1PL_ItemzTypeId}}&AtBottomOfChildNodes=true",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_13_Hierarchy_P1T1_1stItemzId}}"
									],
									"query": [
										{
											"key": "TargetId",
											"value": "{{07_13_Hierarchy_P1PL_ItemzTypeId}}"
										},
										{
											"key": "AtBottomOfChildNodes",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 1.3 between 1.1 and 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{07_13_Hierarchy_P1T1_1_3_ItemzId}}&firstItemzId={{07_13_Hierarchy_P1T1_1_1_ItemzId}}&secondItemzId={{07_13_Hierarchy_P1T1_1_2_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"MoveItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "movingItemzId",
											"value": "{{07_13_Hierarchy_P1T1_1_3_ItemzId}}"
										},
										{
											"key": "firstItemzId",
											"value": "{{07_13_Hierarchy_P1T1_1_1_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_13_Hierarchy_P1T1_1_2_ItemzId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "POST Move Itemz 1.1 between 1.3 and 1.2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/MoveItemzBetweenExistingItemz?movingItemzId={{07_13_Hierarchy_P1T1_1_1_ItemzId}}&firstItemzId={{07_13_Hierarchy_P1T1_1_3_ItemzId}}&secondItemzId={{07_13_Hierarchy_P1T1_1_2_ItemzId}}&=",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"MoveItemzBetweenExistingItemz"
									],
									"query": [
										{
											"key": "movingItemzId",
											"value": "{{07_13_Hierarchy_P1T1_1_1_ItemzId}}"
										},
										{
											"key": "firstItemzId",
											"value": "{{07_13_Hierarchy_P1T1_1_3_ItemzId}}"
										},
										{
											"key": "secondItemzId",
											"value": "{{07_13_Hierarchy_P1T1_1_2_ItemzId}}"
										},
										{
											"key": "",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1PL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(2);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"ItemzType\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0 + 1);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_1stProject_HeirarchyId\") + \"1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_1stProject_HeirarchyId\") + \"1/1/\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_13_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_13_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET HierarchyDetails by P1T1_1_1_3_2_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify Hierarchy level\", function () {\r",
											"     pm.expect(jsonData[\"level\"]).to.be.eq(7);});\r",
											"\r",
											"pm.test(\"Verify Hierarchy recordType\", function () {\r",
											"     pm.expect(jsonData[\"recordType\"]).to.be.eq(\"Itemz\");});\r",
											"\r",
											"pm.test(\"Verify Hierarchy numberOfChildNodes\", function () {\r",
											"     pm.expect(jsonData[\"numberOfChildNodes\"]).to.be.eq(0);     });\r",
											"\r",
											"pm.test(\"Verify Hierarchy hierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"hierarchyId\"]).to.be.eq(pm.collectionVariables.get(\"07_13_Hierarchy_1stProject_HeirarchyId\") + \"1/1/1.2/3/2/1/\");    });  \r",
											"\r",
											"pm.test(\"Verify Hierarchy topChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"topChildHierarchyId\"]).to.be.eq(\"\"); });\r",
											"\r",
											"pm.test(\"Verify Hierarchy bottomChildHierarchyId\", function () {\r",
											"     pm.expect(jsonData[\"bottomChildHierarchyId\"]).to.be.eq(\"\"); });"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Hierarchy/{{07_13_Hierarchy_P1T1_1_1_3_2_1_ItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Hierarchy",
										"{{07_13_Hierarchy_P1T1_1_1_3_2_1_ItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Itemz Count by Parking Lot",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"if (pm.response.code == 404)",
											"{",
											"    pm.collectionVariables.set(\"07_13_Hierarchy_P1PL_ChildItemzCount\",0);",
											"}",
											"else",
											"{",
											"   pm.test(\"Verify Itemz Count\", () => {",
											"        pm.expect(parseInt(pm.response.text())).to.eql(pm.collectionVariables.get(\"07_13_Hierarchy_P1PL_ChildItemzCount\") + 11)",
											"        });",
											"",
											"    pm.collectionVariables.set(\"07_13_Hierarchy_P1PL_ChildItemzCount\",parseInt(pm.response.text()));",
											"}",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypeItemzs/GetItemzCount/{{07_13_Hierarchy_P1PL_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypeItemzs",
										"GetItemzCount",
										"{{07_13_Hierarchy_P1PL_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_13_Hierarchy_P1T1_1stItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_13_Hierarchy_P1T1_1stItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE Itemz 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Itemzs/{{07_13_Hierarchy_P1T1_2ndItemzId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Itemzs",
										"{{07_13_Hierarchy_P1T1_2ndItemzId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType P1T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{07_13_Hierarchy_P1T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{07_13_Hierarchy_P1T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE ItemzType P2T1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "http://localhost:51087/api/ItemzTypes/{{07_13_Hierarchy_P2T1_ItemzTypeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"ItemzTypes",
										"{{07_13_Hierarchy_P2T1_ItemzTypeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 1st Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{07_13_Hierarchy_1stProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{07_13_Hierarchy_1stProjectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE 2nd Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is Either 200 or 204\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:51087/api/Projects/{{07_13_Hierarchy_2ndProjectId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51087",
									"path": [
										"api",
										"Projects",
										"{{07_13_Hierarchy_2ndProjectId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "01_Hierarchy_01_LastProjectHierarchyID",
			"value": ""
		},
		{
			"key": "01_Hierarchy_1stProjectName",
			"value": ""
		},
		{
			"key": "01_Hierarchy_1stProjectId",
			"value": ""
		},
		{
			"key": "01_Hierarchy_P1T1_ItemzTypeId",
			"value": ""
		},
		{
			"key": "01_Hierarchy_P1T1_1stItemzId",
			"value": ""
		},
		{
			"key": "01_Hierarchy_02_LastProjectHierarchyID",
			"value": ""
		},
		{
			"key": "01_Hierarchy_LastProjectHierarchyID",
			"value": ""
		},
		{
			"key": "03_Hierarchy_P1T1_SINGLEITEMZ",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_1stProjectName",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_1stProjectId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1PL_ItemzTypeId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_ItemzTypeId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_TopItemzHierarchyID",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_LastItemzHierarchyID",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_ParkingLotTopItemzHierarchyID",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_ParkingLotLastItemzHierarchyID",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_Project1_ChildItemzCount",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1PL_ChildItemzCount",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_ChildItemzCount",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_1stItemzId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_2ndItemzId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_SINGLEITEMZ_TOP",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_SINGLEITEMZ_BOTTOM",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_1_1_ItemzId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_1_1_1_ItemzId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_1_1_1_1_ItemzId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_1_2_ItemzId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_1__1_ItemzId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_1_3_ItemzId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_1_4_ItemzId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_1_2_1_ItemzId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_1_2_2_ItemzId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_1_3_1_ItemzId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_1_3_2_ItemzId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_1_4_1_ItemzId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_1_4_2_ItemzId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_1_2_1_1_ItemzId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_1_2_1_2_ItemzId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_1_3_1_1_ItemzId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_1_3_1_2_ItemzId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_1_4_1_1_ItemzId",
			"value": ""
		},
		{
			"key": "07_03_Hierarchy_P1T1_1_4_1_2_ItemzId",
			"value": ""
		}
	]
}