{
	"info": {
		"_postman_id": "1cb1d974-007f-45a2-b533-bcb37322096a",
		"name": "Itemsz.Trace",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33816436"
	},
	"item": [
		{
			"name": "00001 EstablishTraceRelationship",
			"item": [
				{
					"name": "POST Project 1st",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData = pm.response.json();",
									"const tempNewProjectId = jsonData[\"id\"];",
									"pm.collectionVariables.set(\"01_Trace_1stProjectId\",tempNewProjectId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"pm.collectionVariables.set(\"01_Trace_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
									"\r",
									"pm.variables.get(\"01_Trace_1stProjectName\");\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{01_Trace_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{01_Trace_1stProjectName}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST ItemzType 1st",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/**",
									" ",
									" pm.test(\"Status code is either 201 or 409\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
									"});",
									"",
									"**/",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzTypeId = jsonData[\"id\"];",
									"pm.collectionVariables.set(\"01_Trace_1stItemzTypeId\",tempNew1stItemzTypeId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{01_Trace_1stProjectId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypes"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 1 to P1_ItemzType1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData[0].id;",
									"pm.collectionVariables.set(\"01_Trace_P1_1stItemzId\",tempNew1stItemzId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{01_Trace_1stItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypeItemzs",
								"{{01_Trace_1stItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 2 to P1_ItemzType1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData[0].id;",
									"pm.collectionVariables.set(\"01_Trace_P1_2ndItemzId\",tempNew1stItemzId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{01_Trace_1stItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypeItemzs",
								"{{01_Trace_1stItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST EstablishTraceBetweenTwoItemz",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"{{01_Trace_P1_1stItemzId}}\",\r\n  \"toTraceItemzId\": \"{{01_Trace_P1_2ndItemzId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST EstablishTraceBetweenTwoItemz WRONGID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 400 or 404\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400,404]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"1111a111-d11e-1111-b11e-11b11111e11c\",\r\n  \"toTraceItemzId\": \"a31ee333-bbfa-4d50-85b9-711a2e1bb2be\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETETraceBetweenTwoItemz",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"{{01_Trace_P1_1stItemzId}}\",\r\n  \"toTraceItemzId\": \"{{01_Trace_P1_2ndItemzId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETETraceBetweenTwoItemz WRONGID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"1111a111-d11e-1111-b11e-11b11111e11c\",\r\n  \"toTraceItemzId\": \"a31ee333-bbfa-4d50-85b9-711a2e1bb2be\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 1 to P1_ItemzType1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{01_Trace_P1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{01_Trace_P1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 2 to P1_ItemzType1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{01_Trace_P1_2ndItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{01_Trace_P1_2ndItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE ItemzType by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypes/{{01_Trace_1stItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypes",
								"{{01_Trace_1stItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE 1st Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Projects/{{01_Trace_1stProjectId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects",
								"{{01_Trace_1stProjectId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "00002 EstablishMultipleTraceRelationship",
			"item": [
				{
					"name": "POST Project 1st",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData = pm.response.json();",
									"const tempNewProjectId = jsonData[\"id\"];",
									"pm.collectionVariables.set(\"02_Trace_1stProjectId\",tempNewProjectId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"pm.collectionVariables.set(\"02_Trace_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
									"\r",
									"pm.variables.get(\"02_Trace_1stProjectName\");\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{02_Trace_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{02_Trace_1stProjectName}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST ItemzType 1st",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/**",
									" ",
									" pm.test(\"Status code is either 201 or 409\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
									"});",
									"",
									"**/",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzTypeId = jsonData[\"id\"];",
									"pm.collectionVariables.set(\"02_Trace_1stItemzTypeId\",tempNew1stItemzTypeId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{02_Trace_1stProjectId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypes"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST ItemzType 2nd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/**",
									" ",
									" pm.test(\"Status code is either 201 or 409\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
									"});",
									"",
									"**/",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzTypeId = jsonData[\"id\"];",
									"pm.collectionVariables.set(\"02_Trace_2ndItemzTypeId\",tempNew1stItemzTypeId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ItemzType 2\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{02_Trace_1stProjectId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypes"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 1 to P1_ItemzType1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData[0].id;",
									"pm.collectionVariables.set(\"02_Trace_P1T1_1stItemzId\",tempNew1stItemzId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{02_Trace_1stItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypeItemzs",
								"{{02_Trace_1stItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 2 to P1_ItemzType1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData[0].id;",
									"pm.collectionVariables.set(\"02_Trace_P1T1_2ndItemzId\",tempNew1stItemzId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{02_Trace_1stItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypeItemzs",
								"{{02_Trace_1stItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 3 to P1_ItemzType2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData[0].id;",
									"pm.collectionVariables.set(\"02_Trace_P1T2_3rdItemzId\",tempNew1stItemzId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 3\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{02_Trace_2ndItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypeItemzs",
								"{{02_Trace_2ndItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 4 to P1_ItemzType2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData[0].id;",
									"pm.collectionVariables.set(\"02_Trace_P1T2_4thItemzId\",tempNew1stItemzId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 4\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{02_Trace_2ndItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypeItemzs",
								"{{02_Trace_2ndItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 5 to P1_ItemzType2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData[0].id;",
									"pm.collectionVariables.set(\"02_Trace_P1T2_5thItemzId\",tempNew1stItemzId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 5\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{02_Trace_2ndItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypeItemzs",
								"{{02_Trace_2ndItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/{{02_Trace_P1T1_2ndItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"{{02_Trace_P1T1_2ndItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST EstablishTraceBetween1and2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"{{02_Trace_P1T1_1stItemzId}}\",\r\n  \"toTraceItemzId\": \"{{02_Trace_P1T1_2ndItemzId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST EstablishTraceBetween1and3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"{{02_Trace_P1T1_1stItemzId}}\",\r\n  \"toTraceItemzId\": \"{{02_Trace_P1T2_3rdItemzId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST EstablishTraceBetween1and4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"{{02_Trace_P1T1_1stItemzId}}\",\r\n  \"toTraceItemzId\": \"{{02_Trace_P1T2_4thItemzId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST EstablishTraceBetween1and5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"{{02_Trace_P1T1_1stItemzId}}\",\r\n  \"toTraceItemzId\": \"{{02_Trace_P1T2_5thItemzId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 4 Trace elements are returned\", function () {\r",
									"    var responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.be.an('array').that.has.lengthOf(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 4 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(4);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 1\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(1);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/{{02_Trace_P1T1_2ndItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"{{02_Trace_P1T1_2ndItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETETraceBetween1and2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"{{02_Trace_P1T1_1stItemzId}}\",\r\n  \"toTraceItemzId\": \"{{02_Trace_P1T1_2ndItemzId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/{{02_Trace_P1T1_2ndItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"{{02_Trace_P1T1_2ndItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 3\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(3);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 3\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(3);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST EstablishTraceBetween2and1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"{{02_Trace_P1T1_2ndItemzId}}\",\r\n  \"toTraceItemzId\": \"{{02_Trace_P1T1_1stItemzId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 4 Trace elements are returned\", function () {\r",
									"    var responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.be.an('array').that.has.lengthOf(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 1 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 3 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(3);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 1\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(1);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 3\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(3);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETETraceBetween2and1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"{{02_Trace_P1T1_2ndItemzId}}\",\r\n  \"toTraceItemzId\": \"{{02_Trace_P1T1_1stItemzId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 4 Trace elements are returned\", function () {\r",
									"    var responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.be.an('array').that.has.lengthOf(3);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 3 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(3);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 3\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(3);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 3\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(3);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETETraceBetween1and3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"{{02_Trace_P1T1_1stItemzId}}\",\r\n  \"toTraceItemzId\": \"{{02_Trace_P1T2_3rdItemzId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETETraceBetween1and4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"{{02_Trace_P1T1_1stItemzId}}\",\r\n  \"toTraceItemzId\": \"{{02_Trace_P1T2_4thItemzId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETETraceBetween1and5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"{{02_Trace_P1T1_1stItemzId}}\",\r\n  \"toTraceItemzId\": \"{{02_Trace_P1T2_5thItemzId}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/{{02_Trace_P1T1_2ndItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"{{02_Trace_P1T1_2ndItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 5 to P1_ItemzType2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{02_Trace_P1T2_5thItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{02_Trace_P1T2_5thItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 4 to P1_ItemzType2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{02_Trace_P1T2_4thItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{02_Trace_P1T2_4thItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 3 to P1_ItemzType2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{02_Trace_P1T2_3rdItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{02_Trace_P1T2_3rdItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 2 to P1_ItemzType1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{02_Trace_P1T1_2ndItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{02_Trace_P1T1_2ndItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 1 to P1_ItemzType1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{02_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{02_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE ItemzType 2 by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypes/{{02_Trace_2ndItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypes",
								"{{02_Trace_2ndItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE ItemzType 1 by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypes/{{02_Trace_1stItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypes",
								"{{02_Trace_1stItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE 1st Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Projects/{{02_Trace_1stProjectId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects",
								"{{02_Trace_1stProjectId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "00003 BulkTraceOperations",
			"item": [
				{
					"name": "POST Project 1st",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData = pm.response.json();",
									"const tempNewProjectId = jsonData[\"id\"];",
									"pm.collectionVariables.set(\"03_Trace_1stProjectId\",tempNewProjectId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"pm.collectionVariables.set(\"03_Trace_1stProjectName\", \"01 Project - \" + pm.variables.replaceIn(\"{{$randomFullName}} {{$randomPhoneNumber}}\" ));\r",
									"\r",
									"pm.variables.get(\"03_Trace_1stProjectName\");\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{03_Trace_1stProjectName}}\",\r\n    \"status\": \"Active\",\r\n    \"description\": \"This is Description for - {{03_Trace_1stProjectName}}\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/Projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST ItemzType 1st",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/**",
									" ",
									" pm.test(\"Status code is either 201 or 409\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
									"});",
									"",
									"**/",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzTypeId = jsonData[\"id\"];",
									"pm.collectionVariables.set(\"03_Trace_1stItemzTypeId\",tempNew1stItemzTypeId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ItemzType 1\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{03_Trace_1stProjectId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypes"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST ItemzType 2nd",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/**",
									" ",
									" pm.test(\"Status code is either 201 or 409\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,409]);",
									"});",
									"",
									"**/",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzTypeId = jsonData[\"id\"];",
									"pm.collectionVariables.set(\"03_Trace_2ndItemzTypeId\",tempNew1stItemzTypeId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ItemzType 2\",\r\n    \"status\": \"New\",\r\n    \"description\": \"Description of ItemzType 1.\",\r\n    \"projectId\": \"{{03_Trace_1stProjectId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypes"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 1 to P1_ItemzType1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData[0].id;",
									"pm.collectionVariables.set(\"03_Trace_P1T1_1stItemzId\",tempNew1stItemzId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 1\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{03_Trace_1stItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypeItemzs",
								"{{03_Trace_1stItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 2 to P1_ItemzType1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData[0].id;",
									"pm.collectionVariables.set(\"03_Trace_P1T1_2ndItemzId\",tempNew1stItemzId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 2\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{03_Trace_1stItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypeItemzs",
								"{{03_Trace_1stItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 3 to P1_ItemzType2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData[0].id;",
									"pm.collectionVariables.set(\"03_Trace_P1T2_3rdItemzId\",tempNew1stItemzId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 3\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{03_Trace_2ndItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypeItemzs",
								"{{03_Trace_2ndItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 4 to P1_ItemzType2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData[0].id;",
									"pm.collectionVariables.set(\"03_Trace_P1T2_4thItemzId\",tempNew1stItemzId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 4\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{03_Trace_2ndItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypeItemzs",
								"{{03_Trace_2ndItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Itemz 5 to P1_ItemzType2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"var jsonData = pm.response.json();",
									"var tempNew1stItemzId =   jsonData[0].id;",
									"pm.collectionVariables.set(\"03_Trace_P1T2_5thItemzId\",tempNew1stItemzId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"Name\": \"Itemz 5\",\r\n    \"Status\": \"New\",\r\n    \"Priority\": \"Medium\",\r\n    \"Description\": \"Requirements to be described here.\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypeItemzs/{{03_Trace_2ndItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypeItemzs",
								"{{03_Trace_2ndItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkCreateTraces-EMPTY LIST",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);",
									"});",
									"",
									"/// We are checking if response.text() contains ",
									"/// a string value of \"empty\". There are ",
									"/// possibilities that this test will fail in the",
									"/// future because we may change text that we ",
									"/// return from this REST API controller",
									"",
									"pm.test(\"Response text contains text \\\"empty\\\" \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"empty \");",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CreateOrVerifyItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CreateOrVerifyItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkCreate4ToTracesFromItemz1 WRONG ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T1_2ndItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T2_3rdItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"1111a111-d11e-1111-b11e-11b11111e11c\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T2_4thItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T2_5thItemzId}}\"\r\n    }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CreateOrVerifyItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CreateOrVerifyItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkCreate4ToTracesFromItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T1_2ndItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T2_3rdItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T2_4thItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T2_5thItemzId}}\"\r\n    }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CreateOrVerifyItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CreateOrVerifyItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 4 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(4);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETETraceBetween1and2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\",\r\n  \"toTraceItemzId\": \"{{03_Trace_P1T1_2ndItemzId}}\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 3 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(3);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 3\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(3);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 3\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(3);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkDeleteTracesFromItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T2_3rdItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T2_4thItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T2_5thItemzId}}\"\r\n    }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkCreate4ToTracesFromItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_Trace_P1T1_2ndItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_Trace_P1T2_3rdItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T2_4thItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T2_5thItemzId}}\"\r\n    }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CreateOrVerifyItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CreateOrVerifyItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 2\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 2\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkDeleteTracesFromItemz1  WRONG IDs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_Trace_P1T1_2ndItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_Trace_P1T2_3rdItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"1111a111-d11e-1111-b11e-11b11111e11c\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T2_4thItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"1111a111-d11e-1111-b11e-11b11111e11c\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T2_5thItemzId}}\"\r\n    }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 2\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 2\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkDeleteTracesFromItemz1 EMPTY LIST",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);",
									"})",
									"",
									"/// We are checking if response.text() contains ",
									"/// a string value of \"empty\". There are ",
									"/// possibilities that this test will fail in the",
									"/// future because we may change text that we ",
									"/// return from this REST API controller",
									"",
									"pm.test(\"Response text contains text \\\"empty\\\" \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"empty\");",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 2\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 2\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkDeleteTracesFromItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_Trace_P1T1_2ndItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_Trace_P1T2_3rdItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T2_4thItemzId}}\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"{{03_Trace_P1T1_1stItemzId}}\",\r\n        \"toTraceItemzId\": \"{{03_Trace_P1T2_5thItemzId}}\"\r\n    }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 5 to P1_ItemzType2 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{03_Trace_P1T2_5thItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{03_Trace_P1T2_5thItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 4 to P1_ItemzType2 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{03_Trace_P1T2_4thItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{03_Trace_P1T2_4thItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 3 to P1_ItemzType2 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{03_Trace_P1T2_3rdItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{03_Trace_P1T2_3rdItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 2 to P1_ItemzType1 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{03_Trace_P1T1_2ndItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{03_Trace_P1T1_2ndItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Itemz 1 to P1_ItemzType1 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Itemzs/{{03_Trace_P1T1_1stItemzId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Itemzs",
								"{{03_Trace_P1T1_1stItemzId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE ItemzType 2 by ID Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypes/{{03_Trace_2ndItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypes",
								"{{03_Trace_2ndItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE ItemzType 1 by ID Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTypes/{{03_Trace_1stItemzTypeId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTypes",
								"{{03_Trace_1stItemzTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE 1st Project Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/Projects/{{03_Trace_1stProjectId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"Projects",
								"{{03_Trace_1stProjectId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "BulkDeleteFromItemzTrace",
			"item": [
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkCreate4FromTracesAgainstItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\",\r\n        \"toTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"885b8e56-ffe6-4bc9-82e2-ce23230991db\",\r\n        \"toTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b\",\r\n        \"toTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"4adde56d-8081-45ea-bd37-5c830b63873b\",\r\n        \"toTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\"\r\n    }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CreateOrVerifyItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CreateOrVerifyItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 4 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(4);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETEAllFromTraceFrom1 WRONG ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteAllFromItemzTraces/1111a111-d11e-1111-b11e-11b11111e11c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteAllFromItemzTraces",
								"1111a111-d11e-1111-b11e-11b11111e11c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 4 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(4);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETEAllFromTraceForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteAllFromItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteAllFromItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkCreate4TracesAgainstItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\",\r\n        \"toTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"885b8e56-ffe6-4bc9-82e2-ce23230991db\",\r\n        \"toTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"4adde56d-8081-45ea-bd37-5c830b63873b\"\r\n    }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CreateOrVerifyItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CreateOrVerifyItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 2\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 2\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETEAllFromTraceForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteAllFromItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteAllFromItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 2\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 2\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETEAllFromTraceForItemz4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteAllFromItemzTraces/0850bc8a-84c4-4c52-8ab6-b06e7bc2195b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteAllFromItemzTraces",
								"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 1 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(1);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 1\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(1);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 1\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(1);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETEAllFromTraceForItemz5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteAllFromItemzTraces/4adde56d-8081-45ea-bd37-5c830b63873b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteAllFromItemzTraces",
								"4adde56d-8081-45ea-bd37-5c830b63873b"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "BulkDeleteToTrace",
			"item": [
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkCreate4ToTracesFromItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"885b8e56-ffe6-4bc9-82e2-ce23230991db\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"4adde56d-8081-45ea-bd37-5c830b63873b\"\r\n    }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CreateOrVerifyItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CreateOrVerifyItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 4 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(4);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETEAllToTraceFrom1 WRONG ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteAllToItemzTraces/1111a111-d11e-1111-b11e-11b11111e11c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteAllToItemzTraces",
								"1111a111-d11e-1111-b11e-11b11111e11c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 4 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(4);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETEAllToTraceFrom1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteAllToItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteAllToItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkCreate4ToTracesFromItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\",\r\n        \"toTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"885b8e56-ffe6-4bc9-82e2-ce23230991db\",\r\n        \"toTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"4adde56d-8081-45ea-bd37-5c830b63873b\"\r\n    }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CreateOrVerifyItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CreateOrVerifyItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 2\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 2\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETEAllToTraceFrom1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteAllToItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteAllToItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 2\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 2\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETEAllToTraceFrom2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteAllToItemzTraces/5e76f8e8-d3e7-41db-b084-f64c107c6783",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteAllToItemzTraces",
								"5e76f8e8-d3e7-41db-b084-f64c107c6783"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 1 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 1\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(1);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 1\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(1);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETEAllToTraceFrom3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteAllToItemzTraces/885b8e56-ffe6-4bc9-82e2-ce23230991db",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteAllToItemzTraces",
								"885b8e56-ffe6-4bc9-82e2-ce23230991db"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "BulkCreateOrVerifyTraces",
			"item": [
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/5e76f8e8-d3e7-41db-b084-f64c107c6783",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"5e76f8e8-d3e7-41db-b084-f64c107c6783"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/885b8e56-ffe6-4bc9-82e2-ce23230991db",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"885b8e56-ffe6-4bc9-82e2-ce23230991db"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/0850bc8a-84c4-4c52-8ab6-b06e7bc2195b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/4adde56d-8081-45ea-bd37-5c830b63873b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"4adde56d-8081-45ea-bd37-5c830b63873b"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CheckExistingTraceBetween1and2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CheckExists?fromTraceItemzId=9153a516-d69e-4364-b17e-03b87442e21c&toTraceItemzId=5e76f8e8-d3e7-41db-b084-f64c107c6783",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CheckExists"
							],
							"query": [
								{
									"key": "fromTraceItemzId",
									"value": "9153a516-d69e-4364-b17e-03b87442e21c"
								},
								{
									"key": "toTraceItemzId",
									"value": "5e76f8e8-d3e7-41db-b084-f64c107c6783"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CheckExistingTraceBetween2and3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CheckExists?fromTraceItemzId=5e76f8e8-d3e7-41db-b084-f64c107c6783&toTraceItemzId=885b8e56-ffe6-4bc9-82e2-ce23230991db",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CheckExists"
							],
							"query": [
								{
									"key": "fromTraceItemzId",
									"value": "5e76f8e8-d3e7-41db-b084-f64c107c6783"
								},
								{
									"key": "toTraceItemzId",
									"value": "885b8e56-ffe6-4bc9-82e2-ce23230991db"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CheckExistingTraceBetween3and4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CheckExists?fromTraceItemzId=885b8e56-ffe6-4bc9-82e2-ce23230991db&toTraceItemzId=0850bc8a-84c4-4c52-8ab6-b06e7bc2195b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CheckExists"
							],
							"query": [
								{
									"key": "fromTraceItemzId",
									"value": "885b8e56-ffe6-4bc9-82e2-ce23230991db"
								},
								{
									"key": "toTraceItemzId",
									"value": "0850bc8a-84c4-4c52-8ab6-b06e7bc2195b"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CheckExistingTraceBetween4and5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CheckExists?fromTraceItemzId=0850bc8a-84c4-4c52-8ab6-b06e7bc2195b&toTraceItemzId=4adde56d-8081-45ea-bd37-5c830b63873b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CheckExists"
							],
							"query": [
								{
									"key": "fromTraceItemzId",
									"value": "0850bc8a-84c4-4c52-8ab6-b06e7bc2195b"
								},
								{
									"key": "toTraceItemzId",
									"value": "4adde56d-8081-45ea-bd37-5c830b63873b"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkCreate4ToTracesFromItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"885b8e56-ffe6-4bc9-82e2-ce23230991db\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"4adde56d-8081-45ea-bd37-5c830b63873b\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\",\r\n        \"toTraceItemzId\": \"4adde56d-8081-45ea-bd37-5c830b63873b\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"885b8e56-ffe6-4bc9-82e2-ce23230991db\",\r\n        \"toTraceItemzId\": \"4adde56d-8081-45ea-bd37-5c830b63873b\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b\",\r\n        \"toTraceItemzId\": \"4adde56d-8081-45ea-bd37-5c830b63873b\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\",\r\n        \"toTraceItemzId\": \"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"885b8e56-ffe6-4bc9-82e2-ce23230991db\",\r\n        \"toTraceItemzId\": \"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\",\r\n        \"toTraceItemzId\": \"885b8e56-ffe6-4bc9-82e2-ce23230991db\"\r\n    }\t\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CreateOrVerifyItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CreateOrVerifyItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 4 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(4);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 1 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 3 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(3);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/5e76f8e8-d3e7-41db-b084-f64c107c6783",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"5e76f8e8-d3e7-41db-b084-f64c107c6783"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/885b8e56-ffe6-4bc9-82e2-ce23230991db",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"885b8e56-ffe6-4bc9-82e2-ce23230991db"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 3 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(3);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 1 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(1);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/0850bc8a-84c4-4c52-8ab6-b06e7bc2195b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 4 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(4);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/4adde56d-8081-45ea-bd37-5c830b63873b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"4adde56d-8081-45ea-bd37-5c830b63873b"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CheckExistingTraceBetween1and2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"\r",
									"/// Verify that returned JSON value contains same \r",
									"/// ID as what we used in the request parameter.\r",
									"\r",
									"pm.test(\"Verify Value of FromTraceID\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object');\r",
									"    pm.expect(responseJSON.fromTraceItemzId).to.exist.and.to.be.eq(\r",
									"            pm.request.url.query.get('fromTraceItemzId')\r",
									"        );\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify Value of ToTraceID\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object');\r",
									"    pm.expect(responseJSON.toTraceItemzId).to.exist.and.to.be.eq(\r",
									"            pm.request.url.query.get('toTraceItemzId')\r",
									"        );\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CheckExists?fromTraceItemzId=9153a516-d69e-4364-b17e-03b87442e21c&toTraceItemzId=5e76f8e8-d3e7-41db-b084-f64c107c6783",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CheckExists"
							],
							"query": [
								{
									"key": "fromTraceItemzId",
									"value": "9153a516-d69e-4364-b17e-03b87442e21c"
								},
								{
									"key": "toTraceItemzId",
									"value": "5e76f8e8-d3e7-41db-b084-f64c107c6783"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CheckExistingTraceBetween2and3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"\r",
									"/// Verify that returned JSON value contains same \r",
									"/// ID as what we used in the request parameter.\r",
									"\r",
									"pm.test(\"Verify Value of FromTraceID\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object');\r",
									"    pm.expect(responseJSON.fromTraceItemzId).to.exist.and.to.be.eq(\r",
									"            pm.request.url.query.get('fromTraceItemzId')\r",
									"        );\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify Value of ToTraceID\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object');\r",
									"    pm.expect(responseJSON.toTraceItemzId).to.exist.and.to.be.eq(\r",
									"            pm.request.url.query.get('toTraceItemzId')\r",
									"        );\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CheckExists?fromTraceItemzId=5e76f8e8-d3e7-41db-b084-f64c107c6783&toTraceItemzId=885b8e56-ffe6-4bc9-82e2-ce23230991db",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CheckExists"
							],
							"query": [
								{
									"key": "fromTraceItemzId",
									"value": "5e76f8e8-d3e7-41db-b084-f64c107c6783"
								},
								{
									"key": "toTraceItemzId",
									"value": "885b8e56-ffe6-4bc9-82e2-ce23230991db"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CheckExistingTraceBetween3and4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"\r",
									"/// Verify that returned JSON value contains same \r",
									"/// ID as what we used in the request parameter.\r",
									"\r",
									"pm.test(\"Verify Value of FromTraceID\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object');\r",
									"    pm.expect(responseJSON.fromTraceItemzId).to.exist.and.to.be.eq(\r",
									"            pm.request.url.query.get('fromTraceItemzId')\r",
									"        );\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify Value of ToTraceID\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object');\r",
									"    pm.expect(responseJSON.toTraceItemzId).to.exist.and.to.be.eq(\r",
									"            pm.request.url.query.get('toTraceItemzId')\r",
									"        );\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CheckExists?fromTraceItemzId=885b8e56-ffe6-4bc9-82e2-ce23230991db&toTraceItemzId=0850bc8a-84c4-4c52-8ab6-b06e7bc2195b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CheckExists"
							],
							"query": [
								{
									"key": "fromTraceItemzId",
									"value": "885b8e56-ffe6-4bc9-82e2-ce23230991db"
								},
								{
									"key": "toTraceItemzId",
									"value": "0850bc8a-84c4-4c52-8ab6-b06e7bc2195b"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CheckExistingTraceBetween4and5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"\r",
									"/// Verify that returned JSON value contains same \r",
									"/// ID as what we used in the request parameter.\r",
									"\r",
									"pm.test(\"Verify Value of FromTraceID\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object');\r",
									"    pm.expect(responseJSON.fromTraceItemzId).to.exist.and.to.be.eq(\r",
									"            pm.request.url.query.get('fromTraceItemzId')\r",
									"        );\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify Value of ToTraceID\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object');\r",
									"    pm.expect(responseJSON.toTraceItemzId).to.exist.and.to.be.eq(\r",
									"            pm.request.url.query.get('toTraceItemzId')\r",
									"        );\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CheckExists?fromTraceItemzId=0850bc8a-84c4-4c52-8ab6-b06e7bc2195b&toTraceItemzId=4adde56d-8081-45ea-bd37-5c830b63873b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CheckExists"
							],
							"query": [
								{
									"key": "fromTraceItemzId",
									"value": "0850bc8a-84c4-4c52-8ab6-b06e7bc2195b"
								},
								{
									"key": "toTraceItemzId",
									"value": "4adde56d-8081-45ea-bd37-5c830b63873b"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETEAllToTraceFrom3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteAllToItemzTraces/885b8e56-ffe6-4bc9-82e2-ce23230991db",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteAllToItemzTraces",
								"885b8e56-ffe6-4bc9-82e2-ce23230991db"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 4 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(4);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 1 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 3 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(3);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/5e76f8e8-d3e7-41db-b084-f64c107c6783",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"5e76f8e8-d3e7-41db-b084-f64c107c6783"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/885b8e56-ffe6-4bc9-82e2-ce23230991db",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"885b8e56-ffe6-4bc9-82e2-ce23230991db"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 1 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(1);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/0850bc8a-84c4-4c52-8ab6-b06e7bc2195b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 3 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(3);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/4adde56d-8081-45ea-bd37-5c830b63873b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"4adde56d-8081-45ea-bd37-5c830b63873b"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CheckExistingTraceBetween1and2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"\r",
									"/// Verify that returned JSON value contains same \r",
									"/// ID as what we used in the request parameter.\r",
									"\r",
									"pm.test(\"Verify Value of FromTraceID\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object');\r",
									"    pm.expect(responseJSON.fromTraceItemzId).to.exist.and.to.be.eq(\r",
									"            pm.request.url.query.get('fromTraceItemzId')\r",
									"        );\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify Value of ToTraceID\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object');\r",
									"    pm.expect(responseJSON.toTraceItemzId).to.exist.and.to.be.eq(\r",
									"            pm.request.url.query.get('toTraceItemzId')\r",
									"        );\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CheckExists?fromTraceItemzId=9153a516-d69e-4364-b17e-03b87442e21c&toTraceItemzId=5e76f8e8-d3e7-41db-b084-f64c107c6783",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CheckExists"
							],
							"query": [
								{
									"key": "fromTraceItemzId",
									"value": "9153a516-d69e-4364-b17e-03b87442e21c"
								},
								{
									"key": "toTraceItemzId",
									"value": "5e76f8e8-d3e7-41db-b084-f64c107c6783"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CheckExistingTraceBetween2and3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"\r",
									"/// Verify that returned JSON value contains same \r",
									"/// ID as what we used in the request parameter.\r",
									"\r",
									"pm.test(\"Verify Value of FromTraceID\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object');\r",
									"    pm.expect(responseJSON.fromTraceItemzId).to.exist.and.to.be.eq(\r",
									"            pm.request.url.query.get('fromTraceItemzId')\r",
									"        );\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify Value of ToTraceID\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object');\r",
									"    pm.expect(responseJSON.toTraceItemzId).to.exist.and.to.be.eq(\r",
									"            pm.request.url.query.get('toTraceItemzId')\r",
									"        );\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CheckExists?fromTraceItemzId=5e76f8e8-d3e7-41db-b084-f64c107c6783&toTraceItemzId=885b8e56-ffe6-4bc9-82e2-ce23230991db",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CheckExists"
							],
							"query": [
								{
									"key": "fromTraceItemzId",
									"value": "5e76f8e8-d3e7-41db-b084-f64c107c6783"
								},
								{
									"key": "toTraceItemzId",
									"value": "885b8e56-ffe6-4bc9-82e2-ce23230991db"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CheckExistingTraceBetween3and4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CheckExists?fromTraceItemzId=885b8e56-ffe6-4bc9-82e2-ce23230991db&toTraceItemzId=0850bc8a-84c4-4c52-8ab6-b06e7bc2195b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CheckExists"
							],
							"query": [
								{
									"key": "fromTraceItemzId",
									"value": "885b8e56-ffe6-4bc9-82e2-ce23230991db"
								},
								{
									"key": "toTraceItemzId",
									"value": "0850bc8a-84c4-4c52-8ab6-b06e7bc2195b"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CheckExistingTraceBetween4and5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"\r",
									"/// Verify that returned JSON value contains same \r",
									"/// ID as what we used in the request parameter.\r",
									"\r",
									"pm.test(\"Verify Value of FromTraceID\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object');\r",
									"    pm.expect(responseJSON.fromTraceItemzId).to.exist.and.to.be.eq(\r",
									"            pm.request.url.query.get('fromTraceItemzId')\r",
									"        );\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify Value of ToTraceID\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object');\r",
									"    pm.expect(responseJSON.toTraceItemzId).to.exist.and.to.be.eq(\r",
									"            pm.request.url.query.get('toTraceItemzId')\r",
									"        );\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CheckExists?fromTraceItemzId=0850bc8a-84c4-4c52-8ab6-b06e7bc2195b&toTraceItemzId=4adde56d-8081-45ea-bd37-5c830b63873b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CheckExists"
							],
							"query": [
								{
									"key": "fromTraceItemzId",
									"value": "0850bc8a-84c4-4c52-8ab6-b06e7bc2195b"
								},
								{
									"key": "toTraceItemzId",
									"value": "4adde56d-8081-45ea-bd37-5c830b63873b"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETEAllFromTraceFrom3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteAllFromItemzTraces/885b8e56-ffe6-4bc9-82e2-ce23230991db",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteAllFromItemzTraces",
								"885b8e56-ffe6-4bc9-82e2-ce23230991db"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 3 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(3);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 1 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/5e76f8e8-d3e7-41db-b084-f64c107c6783",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"5e76f8e8-d3e7-41db-b084-f64c107c6783"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/885b8e56-ffe6-4bc9-82e2-ce23230991db",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"885b8e56-ffe6-4bc9-82e2-ce23230991db"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 1 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(1);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/0850bc8a-84c4-4c52-8ab6-b06e7bc2195b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 3 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(3);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/4adde56d-8081-45ea-bd37-5c830b63873b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"4adde56d-8081-45ea-bd37-5c830b63873b"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CheckExistingTraceBetween1and2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"\r",
									"/// Verify that returned JSON value contains same \r",
									"/// ID as what we used in the request parameter.\r",
									"\r",
									"pm.test(\"Verify Value of FromTraceID\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object');\r",
									"    pm.expect(responseJSON.fromTraceItemzId).to.exist.and.to.be.eq(\r",
									"            pm.request.url.query.get('fromTraceItemzId')\r",
									"        );\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify Value of ToTraceID\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object');\r",
									"    pm.expect(responseJSON.toTraceItemzId).to.exist.and.to.be.eq(\r",
									"            pm.request.url.query.get('toTraceItemzId')\r",
									"        );\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CheckExists?fromTraceItemzId=9153a516-d69e-4364-b17e-03b87442e21c&toTraceItemzId=5e76f8e8-d3e7-41db-b084-f64c107c6783",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CheckExists"
							],
							"query": [
								{
									"key": "fromTraceItemzId",
									"value": "9153a516-d69e-4364-b17e-03b87442e21c"
								},
								{
									"key": "toTraceItemzId",
									"value": "5e76f8e8-d3e7-41db-b084-f64c107c6783"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CheckExistingTraceBetween2and3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CheckExists?fromTraceItemzId=5e76f8e8-d3e7-41db-b084-f64c107c6783&toTraceItemzId=885b8e56-ffe6-4bc9-82e2-ce23230991db",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CheckExists"
							],
							"query": [
								{
									"key": "fromTraceItemzId",
									"value": "5e76f8e8-d3e7-41db-b084-f64c107c6783"
								},
								{
									"key": "toTraceItemzId",
									"value": "885b8e56-ffe6-4bc9-82e2-ce23230991db"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CheckExistingTraceBetween3and4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CheckExists?fromTraceItemzId=885b8e56-ffe6-4bc9-82e2-ce23230991db&toTraceItemzId=0850bc8a-84c4-4c52-8ab6-b06e7bc2195b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CheckExists"
							],
							"query": [
								{
									"key": "fromTraceItemzId",
									"value": "885b8e56-ffe6-4bc9-82e2-ce23230991db"
								},
								{
									"key": "toTraceItemzId",
									"value": "0850bc8a-84c4-4c52-8ab6-b06e7bc2195b"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CheckExistingTraceBetween4and5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"\r",
									"/// Verify that returned JSON value contains same \r",
									"/// ID as what we used in the request parameter.\r",
									"\r",
									"pm.test(\"Verify Value of FromTraceID\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object');\r",
									"    pm.expect(responseJSON.fromTraceItemzId).to.exist.and.to.be.eq(\r",
									"            pm.request.url.query.get('fromTraceItemzId')\r",
									"        );\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Verify Value of ToTraceID\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object');\r",
									"    pm.expect(responseJSON.toTraceItemzId).to.exist.and.to.be.eq(\r",
									"            pm.request.url.query.get('toTraceItemzId')\r",
									"        );\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CheckExists?fromTraceItemzId=0850bc8a-84c4-4c52-8ab6-b06e7bc2195b&toTraceItemzId=4adde56d-8081-45ea-bd37-5c830b63873b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CheckExists"
							],
							"query": [
								{
									"key": "fromTraceItemzId",
									"value": "0850bc8a-84c4-4c52-8ab6-b06e7bc2195b"
								},
								{
									"key": "toTraceItemzId",
									"value": "4adde56d-8081-45ea-bd37-5c830b63873b"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkDeleteTracesFromItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"4adde56d-8081-45ea-bd37-5c830b63873b\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\",\r\n        \"toTraceItemzId\": \"4adde56d-8081-45ea-bd37-5c830b63873b\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b\",\r\n        \"toTraceItemzId\": \"4adde56d-8081-45ea-bd37-5c830b63873b\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\",\r\n        \"toTraceItemzId\": \"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b\"\r\n    }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/5e76f8e8-d3e7-41db-b084-f64c107c6783",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"5e76f8e8-d3e7-41db-b084-f64c107c6783"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/885b8e56-ffe6-4bc9-82e2-ce23230991db",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"885b8e56-ffe6-4bc9-82e2-ce23230991db"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/0850bc8a-84c4-4c52-8ab6-b06e7bc2195b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/4adde56d-8081-45ea-bd37-5c830b63873b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"4adde56d-8081-45ea-bd37-5c830b63873b"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CheckExistingTraceBetween1and2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CheckExists?fromTraceItemzId=9153a516-d69e-4364-b17e-03b87442e21c&toTraceItemzId=5e76f8e8-d3e7-41db-b084-f64c107c6783",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CheckExists"
							],
							"query": [
								{
									"key": "fromTraceItemzId",
									"value": "9153a516-d69e-4364-b17e-03b87442e21c"
								},
								{
									"key": "toTraceItemzId",
									"value": "5e76f8e8-d3e7-41db-b084-f64c107c6783"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CheckExistingTraceBetween2and3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CheckExists?fromTraceItemzId=5e76f8e8-d3e7-41db-b084-f64c107c6783&toTraceItemzId=885b8e56-ffe6-4bc9-82e2-ce23230991db",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CheckExists"
							],
							"query": [
								{
									"key": "fromTraceItemzId",
									"value": "5e76f8e8-d3e7-41db-b084-f64c107c6783"
								},
								{
									"key": "toTraceItemzId",
									"value": "885b8e56-ffe6-4bc9-82e2-ce23230991db"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CheckExistingTraceBetween3and4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CheckExists?fromTraceItemzId=885b8e56-ffe6-4bc9-82e2-ce23230991db&toTraceItemzId=0850bc8a-84c4-4c52-8ab6-b06e7bc2195b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CheckExists"
							],
							"query": [
								{
									"key": "fromTraceItemzId",
									"value": "885b8e56-ffe6-4bc9-82e2-ce23230991db"
								},
								{
									"key": "toTraceItemzId",
									"value": "0850bc8a-84c4-4c52-8ab6-b06e7bc2195b"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CheckExistingTraceBetween4and5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CheckExists?fromTraceItemzId=0850bc8a-84c4-4c52-8ab6-b06e7bc2195b&toTraceItemzId=4adde56d-8081-45ea-bd37-5c830b63873b",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CheckExists"
							],
							"query": [
								{
									"key": "fromTraceItemzId",
									"value": "0850bc8a-84c4-4c52-8ab6-b06e7bc2195b"
								},
								{
									"key": "toTraceItemzId",
									"value": "4adde56d-8081-45ea-bd37-5c830b63873b"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}