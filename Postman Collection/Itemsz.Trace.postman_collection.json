{
	"info": {
		"_postman_id": "5a82e00f-7cf7-48bb-a6d2-23eb4483ecf8",
		"name": "Itemsz.Trace",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33816436"
	},
	"item": [
		{
			"name": "EstablishTraceRelationship",
			"item": [
				{
					"name": "POST EstablishTraceBetweenTwoItemz",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n  \"toTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST EstablishTraceBetweenTwoItemz WRONGID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 400 or 404\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400,404]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"1111a111-d11e-1111-b11e-11b11111e11c\",\r\n  \"toTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETETraceBetweenTwoItemz",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n  \"toTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETETraceBetweenTwoItemz WRONGID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"1111a111-d11e-1111-b11e-11b11111e11c\",\r\n  \"toTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "EstablishMultipleTraceRelationship",
			"item": [
				{
					"name": "GET AllTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/5e76f8e8-d3e7-41db-b084-f64c107c6783",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"5e76f8e8-d3e7-41db-b084-f64c107c6783"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST EstablishTraceBetween1and2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n  \"toTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST EstablishTraceBetween1and3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n  \"toTraceItemzId\": \"885b8e56-ffe6-4bc9-82e2-ce23230991db\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST EstablishTraceBetween1and4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n  \"toTraceItemzId\": \"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST EstablishTraceBetween1and5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n  \"toTraceItemzId\": \"4adde56d-8081-45ea-bd37-5c830b63873b\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 4 Trace elements are returned\", function () {\r",
									"    var responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.be.an('array').that.has.lengthOf(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 4 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(4);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 1\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(1);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/5e76f8e8-d3e7-41db-b084-f64c107c6783",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"5e76f8e8-d3e7-41db-b084-f64c107c6783"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETETraceBetween1and2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n  \"toTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/5e76f8e8-d3e7-41db-b084-f64c107c6783",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"5e76f8e8-d3e7-41db-b084-f64c107c6783"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 3\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(3);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 3\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(3);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST EstablishTraceBetween2and1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\",\r\n  \"toTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 4 Trace elements are returned\", function () {\r",
									"    var responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.be.an('array').that.has.lengthOf(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 1 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(1);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 3 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(3);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 1\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(1);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 3\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(3);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETETraceBetween2and1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\",\r\n  \"toTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 4 Trace elements are returned\", function () {\r",
									"    var responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.be.an('array').that.has.lengthOf(3);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 3 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(3);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 3\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(3);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 3\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(3);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETETraceBetween1and3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n  \"toTraceItemzId\": \"885b8e56-ffe6-4bc9-82e2-ce23230991db\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETETraceBetween1and4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n  \"toTraceItemzId\": \"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETETraceBetween1and5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n  \"toTraceItemzId\": \"4adde56d-8081-45ea-bd37-5c830b63873b\"\r\n}\r\n"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllTracesByItemzID1 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/5e76f8e8-d3e7-41db-b084-f64c107c6783",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"5e76f8e8-d3e7-41db-b084-f64c107c6783"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "BulkTraceOperations",
			"item": [
				{
					"name": "BulkCreateTraces-EMPTY LIST",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);",
									"});",
									"",
									"/// We are checking if response.text() contains ",
									"/// a string value of \"empty\". There are ",
									"/// possibilities that this test will fail in the",
									"/// future because we may change text that we ",
									"/// return from this REST API controller",
									"",
									"pm.test(\"Response text contains text \\\"empty\\\" \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"empty \");",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CreateOrVerifyItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CreateOrVerifyItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkCreate4ToTracesFromItemz1 WRONG ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"885b8e56-ffe6-4bc9-82e2-ce23230991db\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"1111a111-d11e-1111-b11e-11b11111e11c\",\r\n        \"toTraceItemzId\": \"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"4adde56d-8081-45ea-bd37-5c830b63873b\"\r\n    }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CreateOrVerifyItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CreateOrVerifyItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkCreate4ToTracesFromItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"885b8e56-ffe6-4bc9-82e2-ce23230991db\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"4adde56d-8081-45ea-bd37-5c830b63873b\"\r\n    }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CreateOrVerifyItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CreateOrVerifyItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 4 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(4);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETETraceBetween1and2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n  \"toTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 3 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(3);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 3\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(3);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 3\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(3);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkDeleteTracesFromItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"885b8e56-ffe6-4bc9-82e2-ce23230991db\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"4adde56d-8081-45ea-bd37-5c830b63873b\"\r\n    }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkCreate4ToTracesFromItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);",
									"});",
									"",
									"// PURPOSE here is to compare that request body JSON",
									"// is the same as response body JSON",
									"// because we expect Establish Trace Itemz endpoint",
									"// to response back with the same JSON",
									"",
									"var reqBody = JSON.parse(request.data);",
									"var resBody = pm.response.json();",
									"",
									"pm.test(\"Verify that Itemz Trace was established successfully\", function () {",
									"    pm.expect(reqBody).to.eql(resBody);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\",\r\n        \"toTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"885b8e56-ffe6-4bc9-82e2-ce23230991db\",\r\n        \"toTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"4adde56d-8081-45ea-bd37-5c830b63873b\"\r\n    }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/CreateOrVerifyItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"CreateOrVerifyItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 2\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 2\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkDeleteTracesFromItemz1  WRONG IDs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\",\r\n        \"toTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"885b8e56-ffe6-4bc9-82e2-ce23230991db\",\r\n        \"toTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"1111a111-d11e-1111-b11e-11b11111e11c\",\r\n        \"toTraceItemzId\": \"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"1111a111-d11e-1111-b11e-11b11111e11c\",\r\n        \"toTraceItemzId\": \"4adde56d-8081-45ea-bd37-5c830b63873b\"\r\n    }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 2\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 2\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkDeleteTracesFromItemz1 EMPTY LIST",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);",
									"})",
									"",
									"/// We are checking if response.text() contains ",
									"/// a string value of \"empty\". There are ",
									"/// possibilities that this test will fail in the",
									"/// future because we may change text that we ",
									"/// return from this REST API controller",
									"",
									"pm.test(\"Response text contains text \\\"empty\\\" \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"empty\");",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 2 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(2);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 2\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 2\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(2);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 4\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(4);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "BulkDeleteTracesFromItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 204\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"fromTraceItemzId\": \"5e76f8e8-d3e7-41db-b084-f64c107c6783\",\r\n        \"toTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"885b8e56-ffe6-4bc9-82e2-ce23230991db\",\r\n        \"toTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"0850bc8a-84c4-4c52-8ab6-b06e7bc2195b\"\r\n    },\r\n    {\r\n        \"fromTraceItemzId\": \"9153a516-d69e-4364-b17e-03b87442e21c\",\r\n        \"toTraceItemzId\": \"4adde56d-8081-45ea-bd37-5c830b63873b\"\r\n    }\r\n]"
						},
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/DeleteItemzTraceCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"DeleteItemzTraceCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET AllParentAndChildTracesByItemzID1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 parent Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.parentItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that 0 child Trace elements are returned\", function () {\r",
									"    var body = JSON.parse(responseBody);\r",
									"    pm.expect(body.itemz.childItemz.count()).to.be.eq(0);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/AllItemzTraces/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"AllItemzTraces",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetFromTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that From Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetFromItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetFromItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetToTraceCountForItemz1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that To Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetToItemzTraceCount/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetToItemzTraceCount",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET GetAllFromAndToTracesCountByItemzId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is Either 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify that FROM+TO Trace count is 0\", function () {\r",
									"pm.expect(parseInt(pm.response.text())).to.be.eq(0);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51087/api/ItemzTrace/GetAllFromAndToTracesCountByItemzId/9153a516-d69e-4364-b17e-03b87442e21c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51087",
							"path": [
								"api",
								"ItemzTrace",
								"GetAllFromAndToTracesCountByItemzId",
								"9153a516-d69e-4364-b17e-03b87442e21c"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}